{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\nimport AppHeader from '@/components/AppHeader.vue';\nexport default {\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      usuario: null,\n      defaultAvatar,\n      estadoAmizade: null,\n      userPhotos: [],\n      // Adiciona esta linha para armazenar as fotos do usuário\n      currentPhotoIndex: 0,\n      currentPhoto: {}\n    };\n  },\n  watch: {\n    '$route.params.id': {\n      immediate: true,\n      handler(newId, oldId) {\n        if (newId !== oldId) {\n          this.fetchUserData();\n        }\n      }\n    }\n  },\n  methods: {\n    prevPhoto() {\n      this.currentPhotoIndex--;\n      if (this.currentPhotoIndex < 0) {\n        this.currentPhotoIndex = this.userPhotos.length - 1;\n      }\n      this.currentPhoto = this.userPhotos[this.currentPhotoIndex];\n    },\n    nextPhoto() {\n      this.currentPhotoIndex++;\n      if (this.currentPhotoIndex >= this.userPhotos.length) {\n        this.currentPhotoIndex = 0;\n      }\n      this.currentPhoto = this.userPhotos[this.currentPhotoIndex];\n    },\n    fetchUserPhotos() {\n      // Substitua '/api/user-photos' pelo seu endpoint correto\n      console.log(\"vai buscar\");\n      axios.get('/api/fotos-utilizador', {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.userPhotos = response.data; // Armazena as fotos do usuário\n        this.currentPhoto = this.userPhotos[0];\n        console.log(response.data);\n        console.log(\"cheguei aqui\");\n      }).catch(error => {\n        console.error('Erro ao recuperar fotos do usuário', error);\n      });\n    },\n    cancelarPedidoAmizade() {\n      // Substitua 'amizadeId' pelo ID do documento de amizade que você deseja cancelar.\n      // Você pode precisar ajustar a lógica para obter esse ID.\n      const amizadeId = this.amizadeId;\n      axios.delete(`/api/amizades/${amizadeId}`).then(() => {\n        this.estadoAmizade = 'nenhum';\n        this.amizadeId = null; // Adiciona esta linha para resetar o ID\n\n        // Faça qualquer outra coisa necessária após o cancelamento bem-sucedido.\n      }).catch(error => {\n        console.error('Erro ao cancelar pedido de amizade', error);\n        // Trate o erro adequadamente.\n      });\n    },\n    verificarEstadoAmizade(usuarioId) {\n      // Substitua 'userIdLogado' pelo ID do usuário logado\n      const userIdLogado = this.utilizador._id; // Isso deve vir de algum estado autenticado\n      console.log(userIdLogado);\n      axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`).then(response => {\n        // Supondo que o backend retorne o estado da amizade\n        this.estadoAmizade = response.data.estado;\n        this.amizadeId = response.data.amizadeId;\n      }).catch(error => {\n        console.error('Erro ao verificar estado da amizade', error);\n        this.estadoAmizade = 'nenhum';\n      });\n    },\n    enviarPedidoAmizade() {\n      const userIdLogado = this.utilizador._id; // Obtenha o ID do usuário logado\n      const usuarioId = this.usuario._id; // ID do usuário visualizado\n\n      axios.post('/api/amizades', {\n        idutilizador1: userIdLogado,\n        idutilizador2: usuarioId,\n        dataAmizade: new Date(),\n        estado: 'pendente'\n      }).then(response => {\n        this.estadoAmizade = 'pendente';\n        this.amizadeId = response.data._id; // Armazena o novo ID da amizade\n      }).catch(error => {\n        console.error('Erro ao enviar pedido de amizade', error);\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    openUserProfile(user) {\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    },\n    fetchUserData() {\n      const userId = this.$route.params.id;\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n          }\n        }).then(response => {\n          this.usuario = response.data;\n          this.verificarEstadoAmizade(this.usuario._id);\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do utilizador pesquisado', error);\n        });\n      }\n      axios.get('/api/me', {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.utilizador = response.data; // Atualizar o estado com os dados do utilizador\n      }).catch(error => {\n        console.error('Erro ao recuperar os dados do usuário2', error);\n      });\n    },\n    logout() {\n      localStorage.removeItem('token'); // Remover o token do localStorage\n      this.$router.push('/login'); // Redirecionar para a página de login\n    }\n  },\n  created() {\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","AppHeader","components","data","usuario","estadoAmizade","userPhotos","currentPhotoIndex","currentPhoto","watch","immediate","handler","newId","oldId","fetchUserData","methods","prevPhoto","length","nextPhoto","fetchUserPhotos","console","log","get","headers","localStorage","getItem","then","response","catch","error","cancelarPedidoAmizade","amizadeId","delete","verificarEstadoAmizade","usuarioId","userIdLogado","utilizador","_id","estado","enviarPedidoAmizade","post","idutilizador1","idutilizador2","dataAmizade","Date","navigateTo","path","$router","push","openUserProfile","user","name","params","id","userId","$route","logout","removeItem","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PaginaUtilizador.vue"],"sourcesContent":["\r\n<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n  <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Usuário Não Encontrado' }}</h2>\r\n</div>\r\n\r\n  <!-- Seção de Adicionar Amigo -->\r\n  <div class=\"add-friend-section\">\r\n  <button v-if=\"estadoAmizade === 'nenhum'\" \r\n          type=\"button\" \r\n          class=\"btn btn-success btn-lg\"\r\n          @click=\"enviarPedidoAmizade\">\r\n    Adicionar Amigo\r\n  </button>\r\n  <p v-else-if=\"estadoAmizade === 'pendente'\">\r\n    Pedido pendente\r\n  </p>\r\n  <button v-if=\"estadoAmizade === 'pendente'\"\r\n          type=\"button\"\r\n          class=\"btn btn-warning btn-lg\"\r\n          @click=\"cancelarPedidoAmizade\">\r\n    Cancelar Pedido\r\n  </button>\r\n  <p v-else-if=\"estadoAmizade === 'amigos'\">\r\n    Amigos\r\n  </p>\r\n  <!-- ... restante do template ... -->\r\n</div>\r\n\r\n</aside>\r\n    \r\n    <main class=\"content\">\r\n      <div class=\"carousel-container\">\r\n      <button v-if=\"userPhotos.length > 1\" class=\"carousel-control left\" @click=\"prevPhoto\">&lt;</button>\r\n      <div class=\"photo-container\">\r\n        <img :src=\"currentPhoto.imagePath\" alt=\"User Photo\" class=\"photo\">\r\n        <div class=\"photo-description\">{{ currentPhoto.descricao }}</div>\r\n      </div>\r\n      <button v-if=\"userPhotos.length > 1\" class=\"carousel-control right\" @click=\"nextPhoto\">&gt;</button>\r\n    </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader\r\n  },\r\n  data() {\r\n    return {\r\n      usuario: null,\r\n      defaultAvatar,\r\n      estadoAmizade: null,\r\n      userPhotos: [], // Adiciona esta linha para armazenar as fotos do usuário\r\n      currentPhotoIndex: 0,\r\n      currentPhoto: {},  \r\n    };\r\n  },\r\n  watch: {\r\n  '$route.params.id': {\r\n    immediate: true,\r\n    handler(newId, oldId) {\r\n      if (newId !== oldId) {\r\n        this.fetchUserData();\r\n      }\r\n    }\r\n  }\r\n},\r\n  methods: {\r\n    prevPhoto() {\r\n    this.currentPhotoIndex--;\r\n    if (this.currentPhotoIndex < 0) {\r\n      this.currentPhotoIndex = this.userPhotos.length - 1;\r\n    }\r\n    this.currentPhoto = this.userPhotos[this.currentPhotoIndex];\r\n    },\r\n\r\n    nextPhoto() {\r\n      this.currentPhotoIndex++;\r\n      if (this.currentPhotoIndex >= this.userPhotos.length) {\r\n        this.currentPhotoIndex = 0;\r\n      }\r\n      this.currentPhoto = this.userPhotos[this.currentPhotoIndex];\r\n    },\r\n\r\n    fetchUserPhotos() {\r\n      // Substitua '/api/user-photos' pelo seu endpoint correto\r\n      console.log(\"vai buscar\");\r\n      axios.get('/api/fotos-utilizador', {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.userPhotos = response.data; // Armazena as fotos do usuário\r\n        this.currentPhoto = this.userPhotos[0]; \r\n        console.log(response.data);\r\n        console.log(\"cheguei aqui\");\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao recuperar fotos do usuário', error);\r\n      });\r\n    },\r\n    cancelarPedidoAmizade() {\r\n    // Substitua 'amizadeId' pelo ID do documento de amizade que você deseja cancelar.\r\n    // Você pode precisar ajustar a lógica para obter esse ID.\r\n    const amizadeId = this.amizadeId; \r\n\r\n    axios.delete(`/api/amizades/${amizadeId}`)\r\n      .then(() => {\r\n        this.estadoAmizade = 'nenhum';\r\n        this.amizadeId = null; // Adiciona esta linha para resetar o ID\r\n\r\n        // Faça qualquer outra coisa necessária após o cancelamento bem-sucedido.\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao cancelar pedido de amizade', error);\r\n        // Trate o erro adequadamente.\r\n      });\r\n  },\r\n\r\n     verificarEstadoAmizade(usuarioId) {\r\n      // Substitua 'userIdLogado' pelo ID do usuário logado\r\n      const userIdLogado = this.utilizador._id ; // Isso deve vir de algum estado autenticado\r\n      console.log(userIdLogado);\r\n      axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`)\r\n        .then(response => {\r\n          // Supondo que o backend retorne o estado da amizade\r\n          this.estadoAmizade = response.data.estado;\r\n          this.amizadeId = response.data.amizadeId;\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao verificar estado da amizade', error);\r\n          this.estadoAmizade = 'nenhum';\r\n        });\r\n    },\r\n\r\n   enviarPedidoAmizade() {\r\n    const userIdLogado = this.utilizador._id // Obtenha o ID do usuário logado\r\n    const usuarioId = this.usuario._id; // ID do usuário visualizado\r\n\r\n  axios.post('/api/amizades', {\r\n    idutilizador1: userIdLogado,\r\n    idutilizador2: usuarioId,\r\n    dataAmizade: new Date(),\r\n    estado: 'pendente'\r\n  })\r\n  .then(response => {\r\n    this.estadoAmizade = 'pendente';\r\n    this.amizadeId = response.data._id; // Armazena o novo ID da amizade\r\n\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao enviar pedido de amizade', error);\r\n  });\r\n},\r\n    navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  openUserProfile(user) {\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n  fetchUserData() {\r\n    const userId = this.$route.params.id;\r\n    if (userId) {\r\n      axios.get(`/api/utilizador/${userId}`,{\r\n        headers: {\r\n      'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n    }\r\n      })\r\n        .then(response => {\r\n          this.usuario = response.data;\r\n          this.verificarEstadoAmizade(this.usuario._id);\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao recuperar os dados do utilizador pesquisado', error);\r\n        });\r\n    }\r\n    axios.get('/api/me', {\r\n    headers: {\r\n      'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n    }\r\n    })\r\n    .then((response) => {\r\n      this.utilizador = response.data; // Atualizar o estado com os dados do utilizador\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao recuperar os dados do usuário2', error);\r\n    });\r\n  },\r\n  \r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espaçamento entre os cartões de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cartão */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.photo-card {\r\n  /* Sua estilização existente... */\r\n  max-width: 600px; /* ou a largura que desejar */\r\n  overflow: hidden;\r\n}\r\n\r\n.carousel-control {\r\n  background: none;\r\n  border: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.carousel-control.left {\r\n  left: -50px;\r\n}\r\n\r\n.carousel-control.right {\r\n  right: -50px;\r\n}\r\n\r\n.photo {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.photo-container {\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os elementos verticalmente */\r\n  align-items: center; /* Centraliza os elementos horizontalmente */\r\n  /*max-width: 600px; /* ou a largura que desejar */\r\n  max-height: 600px;\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espaçamento conforme necessário */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descrição */\r\n  width: 100%; /* Isso fará com que a descrição se estenda por toda a largura do contêiner */\r\n}\r\n\r\n\r\n\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}