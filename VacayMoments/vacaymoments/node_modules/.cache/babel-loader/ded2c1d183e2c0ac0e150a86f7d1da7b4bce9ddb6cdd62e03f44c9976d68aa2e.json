{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e5b2345\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"profile-section\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"filter-section\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Filtrar por:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"filter-item\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"tags\"\n}, \"Tags:\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"filter-item\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"tags\"\n}, \"Localização:\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"filter-item\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Privacidade:\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"checkbox-container\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"friends\"\n}, \"Fotos públicas\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"checkbox-container\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"friends\"\n}, \"Fotos de amigos\", -1 /* HOISTED */));\nconst _hoisted_17 = {\n  class: \"content\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"no-photos-message\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Não foi encontrada nenhuma foto com os filtros selecionados.\", -1 /* HOISTED */));\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = {\n  class: \"carousel-container\"\n};\nconst _hoisted_22 = {\n  class: \"photo-container\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"user-info\"\n};\nconst _hoisted_24 = [\"src\"];\nconst _hoisted_25 = [\"src\"];\nconst _hoisted_26 = {\n  key: 2,\n  class: \"photo-description\"\n};\nconst _hoisted_27 = {\n  key: 3,\n  class: \"reaction-counts\"\n};\nconst _hoisted_28 = {\n  class: \"photo-actions\"\n};\nconst _hoisted_29 = {\n  key: 0,\n  class: \"reactions-list\"\n};\nconst _hoisted_30 = [\"onClick\"];\nconst _hoisted_31 = {\n  key: 1,\n  class: \"user-reaction\"\n};\nconst _hoisted_32 = {\n  key: 2,\n  class: \"add-comment\"\n};\nconst _hoisted_33 = {\n  class: \"comments-section\"\n};\nconst _hoisted_34 = {\n  class: \"comment-user-info\"\n};\nconst _hoisted_35 = [\"src\"];\nconst _hoisted_36 = [\"onClick\"];\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"no-comments\"\n}, \"Nenhum comentário apresentado\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_app_header = _resolveComponent(\"app-header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_app_header)]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"aside\", _hoisted_2, [_createCommentVNode(\" Foto do perfil e nome \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $data.usuario?.fotoPerfil || $data.defaultAvatar,\n    alt: \"\",\n    class: \"profile-picture\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"h2\", null, _toDisplayString($data.usuario?.nome || 'Utilizador'), 1 /* TEXT */)]), _createCommentVNode(\" Filtro \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"tags\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filters.tags = $event),\n    placeholder: \"Insira a tag\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.tags]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"tags\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.filters.localizacao = $event),\n    placeholder: \"Insira a localização\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filters.localizacao]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"public\",\n    name: \"public\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.filters.privacidade = $event),\n    value: \"public\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.filters.privacidade]]), _hoisted_14]), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"friends\",\n    name: \"friends\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.filters.privacidade = $event),\n    value: \"friends\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.filters.privacidade]]), _hoisted_16])]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.applyFilters && $options.applyFilters(...args)),\n    class: \"filter-button\"\n  }, \"Filtrar\")])]), _createElementVNode(\"main\", _hoisted_17, [$data.allPhotos.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [..._hoisted_20])) : _createCommentVNode(\"v-if\", true), $data.allPhotos.length > 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createElementVNode(\"div\", _hoisted_21, [$data.allPhotos.length > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"carousel-control left\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.prevPhoto && $options.prevPhoto(...args))\n  }, \"<\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_22, [$data.allPhotos[$data.currentPhotoIndex] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createElementVNode(\"img\", {\n    src: $data.allPhotos[$data.currentPhotoIndex].userPhoto || $data.defaultAvatar,\n    alt: \"Foto do perfil\",\n    class: \"user-profile-picture\"\n  }, null, 8 /* PROPS */, _hoisted_24), _createElementVNode(\"h3\", null, _toDisplayString($data.allPhotos[$data.currentPhotoIndex].userName), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.allPhotos[$data.currentPhotoIndex] ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    src: $data.allPhotos[$data.currentPhotoIndex].imagePath,\n    alt: \"User Photo\",\n    class: \"photo\"\n  }, null, 8 /* PROPS */, _hoisted_25)) : _createCommentVNode(\"v-if\", true), $data.allPhotos[$data.currentPhotoIndex] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, _toDisplayString($data.allPhotos[$data.currentPhotoIndex].descricao), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.allPhotos[$data.currentPhotoIndex]?.reactionCounts ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allPhotos[$data.currentPhotoIndex].reactionCounts, reaction => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: reaction._id\n    }, _toDisplayString($options.convertEmoji(reaction._id)) + \": \" + _toDisplayString(reaction.count), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"button\", {\n    class: \"reaction-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.toggleReactions && $options.toggleReactions(...args))\n  }, \"Reagir\"), $data.showReactions ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"span\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.handleReaction('like'))\n  }, \"👍\"), _createElementVNode(\"span\", {\n    onClick: _cache[8] || (_cache[8] = $event => $options.handleReaction('heart'))\n  }, \"❤️\"), _createElementVNode(\"span\", {\n    onClick: _cache[9] || (_cache[9] = $event => $options.handleReaction('laugh'))\n  }, \"😂\"), _createElementVNode(\"span\", {\n    onClick: _cache[10] || (_cache[10] = $event => $options.handleReaction('happy'))\n  }, \"😊\"), _createElementVNode(\"span\", {\n    onClick: _cache[11] || (_cache[11] = $event => $options.handleReaction('remove'))\n  }, \"❌\")])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.emojis, emoji => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: emoji.type,\n      class: _normalizeClass({\n        active: $data.userReaction === emoji.type\n      }),\n      onClick: $event => $options.handleReaction(emoji.type)\n    }, _toDisplayString(emoji.char), 11 /* TEXT, CLASS, PROPS */, _hoisted_30);\n  }), 128 /* KEYED_FRAGMENT */)), $data.userReaction && !$data.showReactions ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, _toDisplayString($options.convertEmoji($data.userReaction)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"comment-button\",\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.toggleCommentBox && $options.toggleCommentBox(...args))\n  }, \"Comentar\"), $data.showCommentBox ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.newComment = $event),\n    placeholder: \"Adicione um comentário...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newComment]]), _createElementVNode(\"button\", {\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.postComment && $options.postComment(...args))\n  }, \"Enviar\")])) : _createCommentVNode(\"v-if\", true)]), $data.allPhotos.length > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 4,\n    class: \"carousel-control right\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.nextPhoto && $options.nextPhoto(...args))\n  }, \">\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_33, [$data.currentPhotoComments.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.currentPhotoComments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"comment\",\n      key: comment._id\n    }, [_createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"img\", {\n      src: comment.userPhoto || $data.defaultAvatar,\n      alt: \"\",\n      class: \"comment-user-picture\"\n    }, null, 8 /* PROPS */, _hoisted_35), _createElementVNode(\"span\", null, _toDisplayString(comment.userName), 1 /* TEXT */), comment.userId === $data.usuario._id ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      style: {\n        \"border\": \"none\"\n      },\n      onClick: $event => $options.deleteComment(comment._id)\n    }, \"🗑️\", 8 /* PROPS */, _hoisted_36)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", null, _toDisplayString(comment.descricao), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Mensagem para quando não há comentários \"), _hoisted_37], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_hoisted_19","_createVNode","_component_app_header","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","src","$data","usuario","fotoPerfil","defaultAvatar","alt","_toDisplayString","nome","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","type","id","filters","tags","$event","placeholder","_hoisted_9","_hoisted_10","localizacao","_hoisted_11","_hoisted_12","_hoisted_13","name","privacidade","value","_hoisted_14","_hoisted_15","_hoisted_16","onClick","_cache","args","$options","applyFilters","_hoisted_17","allPhotos","length","_createElementBlock","_hoisted_18","_hoisted_20","_Fragment","key","_hoisted_21","prevPhoto","_hoisted_22","currentPhotoIndex","_hoisted_23","userPhoto","userName","imagePath","_hoisted_26","descricao","reactionCounts","_hoisted_27","_renderList","reaction","_id","convertEmoji","count","_hoisted_28","toggleReactions","showReactions","_hoisted_29","handleReaction","emojis","emoji","_normalizeClass","active","userReaction","char","_hoisted_30","_hoisted_31","toggleCommentBox","showCommentBox","_hoisted_32","newComment","postComment","nextPhoto","_hoisted_33","currentPhotoComments","comment","_hoisted_34","userId","style","deleteComment","_hoisted_36","_hoisted_37"],"sources":["C:\\Users\\bruno\\OneDrive\\Escritorio\\PWA\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PaginaInicial.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n    <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Utilizador' }}</h2>\r\n  </div>\r\n\r\n  <!-- Filtro -->\r\n  <div class=\"filter-section\">\r\n    <h3>Filtrar por:</h3>\r\n    <div class=\"filter-item\">\r\n      <label for=\"tags\">Tags:</label>\r\n      <input type=\"text\" id=\"tags\" v-model=\"filters.tags\" placeholder=\"Insira a tag\">\r\n    </div>\r\n    <div class=\"filter-item\">\r\n      <label for=\"tags\">Localização:</label>\r\n      <input type=\"text\" id=\"tags\" v-model=\"filters.localizacao\" placeholder=\"Insira a localização\">\r\n    </div>\r\n    <div class=\"filter-item\">\r\n      <label>Privacidade:</label>\r\n      \r\n      <div class=\"checkbox-container\">\r\n        <input type=\"checkbox\" id=\"public\" name=\"public\" v-model=\"filters.privacidade\" value=\"public\">\r\n        <label for=\"friends\">Fotos públicas</label>\r\n      </div>\r\n      <div class=\"checkbox-container\">\r\n        <input type=\"checkbox\" id=\"friends\" name=\"friends\" v-model=\"filters.privacidade\" value=\"friends\">\r\n        <label for=\"friends\">Fotos de amigos</label>\r\n      </div>\r\n    </div>\r\n    <button @click=\"applyFilters\" class=\"filter-button\">Filtrar</button>\r\n  </div>\r\n</aside>  \r\n    \r\n  <main class=\"content\">\r\n    <div v-if=\"allPhotos.length === 0\" class=\"no-photos-message\">\r\n      <p>Não foi encontrada nenhuma foto com os filtros selecionados.</p>\r\n    </div>\r\n    <template v-if=\"allPhotos.length > 0\">\r\n      <div class=\"carousel-container\">\r\n        <button v-if=\"allPhotos.length > 1\" class=\"carousel-control left\" @click=\"prevPhoto\">&lt;</button>\r\n        <div class=\"photo-container\">\r\n          <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"user-info\">\r\n            <img :src=\"allPhotos[currentPhotoIndex].userPhoto || defaultAvatar\" alt=\"Foto do perfil\" class=\"user-profile-picture\">\r\n            <h3>{{ allPhotos[currentPhotoIndex].userName }}</h3>\r\n          </div>\r\n          <img v-if=\"allPhotos[currentPhotoIndex]\" :src=\"allPhotos[currentPhotoIndex].imagePath\" alt=\"User Photo\" class=\"photo\">\r\n          <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"photo-description\">{{ allPhotos[currentPhotoIndex].descricao }}</div>\r\n          <div v-if=\"allPhotos[currentPhotoIndex]?.reactionCounts\" class=\"reaction-counts\">\r\n            <span v-for=\"reaction in allPhotos[currentPhotoIndex].reactionCounts\" :key=\"reaction._id\">\r\n              {{ convertEmoji(reaction._id) }}: {{ reaction.count }}\r\n            </span>\r\n          </div>\r\n          <div class=\"photo-actions\">\r\n            <button class=\"reaction-button\" @click=\"toggleReactions\">Reagir</button>\r\n            <div v-if=\"showReactions \" class=\"reactions-list\">\r\n              <span @click=\"handleReaction('like')\">👍</span>\r\n              <span @click=\"handleReaction('heart')\">❤️</span>\r\n              <span @click=\"handleReaction('laugh')\">😂</span>\r\n              <span @click=\"handleReaction('happy')\">😊</span>\r\n              <span @click=\"handleReaction('remove')\">❌</span>\r\n            </div>\r\n            <span\r\n              v-for=\"emoji in emojis\"\r\n              :key=\"emoji.type\"\r\n              :class=\"{ active: userReaction === emoji.type }\"\r\n              @click=\"handleReaction(emoji.type)\"\r\n            >{{ emoji.char }}\r\n            </span>\r\n            <div v-if=\"userReaction && !showReactions\" class=\"user-reaction\">\r\n              {{ convertEmoji(userReaction) }}\r\n            </div>\r\n            <button class=\"comment-button\" @click=\"toggleCommentBox\">Comentar</button>\r\n            <div v-if=\"showCommentBox\" class=\"add-comment\">\r\n              <input type=\"text\" v-model=\"newComment\" placeholder=\"Adicione um comentário...\">\r\n              <button @click=\"postComment\">Enviar</button>\r\n            </div>\r\n          </div>\r\n          <button v-if=\"allPhotos.length > 1\" class=\"carousel-control right\" @click=\"nextPhoto\">&gt;</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"comments-section\">\r\n      <template v-if=\"currentPhotoComments.length > 0\">\r\n        <div class=\"comment\" v-for=\"comment in currentPhotoComments\" :key=\"comment._id\">\r\n          <div class=\"comment-user-info\">\r\n            <img :src=\"comment.userPhoto || defaultAvatar\" alt=\"\" class=\"comment-user-picture\">\r\n            <span>{{ comment.userName }}</span>\r\n            <button style=\"border: none;\" v-if=\"comment.userId === usuario._id\" @click=\"deleteComment(comment._id)\">🗑️</button>\r\n          </div>\r\n          <p>{{ comment.descricao }}</p>\r\n        </div>\r\n      </template>\r\n      <!-- Mensagem para quando não há comentários -->\r\n      <p v-else class=\"no-comments\">Nenhum comentário apresentado</p>\r\n    </div>\r\n  </template>\r\n  </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader\r\n  },\r\n  data() {\r\n  return {\r\n    usuario: null,\r\n    defaultAvatar,\r\n    emojis: [], // adicione esta linha se \"emojis\" for uma lista que você irá iterar\r\n    allPhotos: [], // Armazena todas as fotos, excluindo as do usuário logado\r\n    currentPhotoIndex: 0, // Índice da foto atual no carrossel\r\n    showReactions: false, // Estado para controlar a visibilidade das reações\r\n    userReaction: null, // Estado para armazenar a reação do usuário para a foto atual\r\n    newComment: '', // Para armazenar o novo comentário digitado pelo usuário\r\n    showCommentBox: false, // novo estado para controlar a exibição da caixa de comentário\r\n    currentPhotoComments: [], // Armazena os comentários da foto atual  \r\n    reactionCounts: {}, // Inicialize como um objeto vazio ou como necessário\r\n    filters: {\r\n      tags: '',\r\n      localizacao: '',\r\n      privacidade: []\r\n    },\r\n  };\r\n},\r\nmethods: {\r\n  removeUserReaction(fotoID) {\r\n    const utilizadorID = this.usuario._id; // Assumindo que você tem o ID do usuário logado disponível\r\n    console.log(fotoID);\r\n    axios.delete(`/api/reacoes?fotoID=${fotoID}&utilizadorID=${utilizadorID}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      this.fetchReactionCounts(fotoID); // Atualize a contagem de reações após remover a reação\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao remover reação', error);\r\n    });\r\n  },\r\n\r\n  applyFilters() {\r\n    this.fetchAllPhotos(); // Atualiza as fotos com os filtros aplicados\r\n  },\r\n  deleteComment(commentId) {\r\n    // Solicita confirmação do usuário\r\n    if (window.confirm(\"Tem certeza que deseja eliminar o comentário?\")) {\r\n      axios.delete(`/api/comentario/${commentId}`, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n        }\r\n      })\r\n      .then(() => {\r\n        // Se a promessa for resolvida, informar o usuário do sucesso\r\n        alert(\"Comentário eliminado com sucesso!\");\r\n        // Atualizar os comentários exibidos\r\n        this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao excluir comentário', error);\r\n        // Se ocorrer um erro, informar o usuário\r\n        alert(\"Ocorreu um erro ao tentar eliminar o comentário.\");\r\n      });\r\n    }\r\n  },\r\n  fetchComments(fotoId) {\r\n    axios.get(`/api/comentarios/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.currentPhotoComments = response.data || [];\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao buscar comentários', error);\r\n    });\r\n  },\r\n  postComment() {\r\n    const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n    axios.post('/api/comentarios', {\r\n      descricao: this.newComment,\r\n      fotoID: photoId,\r\n      dataCriacao: new Date()\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      alert('Comentário adicionado com sucesso!'); // Exibe um alerta de sucesso\r\n      this.newComment = ''; // Limpa o campo de comentário\r\n      this.fetchComments(photoId); // Atualiza a lista de comentários\r\n      this.toggleCommentBox(); // Fecha a caixa de comentário após adicionar um novo\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao postar comentário', error);\r\n      // Trate aqui o erro, como mostrar uma mensagem para o usuário\r\n    });\r\n  },\r\n  fetchReactionCounts(fotoId) {\r\n  axios.get(`/api/reacoes/contagem/${fotoId}`)\r\n  .then(response => {\r\n    const photoIndex = this.allPhotos.findIndex(photo => photo._id === fotoId);\r\n    if (photoIndex !== -1) {\r\n      // No Vue 3, você pode simplesmente atribuir o valor\r\n      this.allPhotos[photoIndex].reactionCounts = response.data;\r\n      // Certifique-se de que reactionCounts é reativo, definindo-o no estado do componente\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao buscar contagens de reações', error);\r\n  });\r\n},\r\n  convertEmoji(tipoEmoji) {\r\n    const emojiMap = {\r\n      like: '👍',\r\n      heart: '❤️',\r\n      laugh: '😂',\r\n      happy: '😊',\r\n      // ...outros mapeamentos\r\n    };\r\n    return emojiMap[tipoEmoji] || tipoEmoji;\r\n  },\r\n  checkUserReaction(fotoId) {\r\n    axios.get(`/api/reacoes/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.data && response.data.reacao) {\r\n        this.userReaction = response.data.reacao;\r\n      } else {\r\n        this.userReaction = null;\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao verificar a reação do usuário', error);\r\n    });\r\n  },\r\n  handleReaction(reactionType) {\r\n  const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n\r\n  if (reactionType === 'remove') {\r\n    // Lógica para remover a reação do usuário\r\n    this.removeUserReaction(photoId);\r\n    this.userReaction = null; // Reseta a reação do usuário\r\n  } else {\r\n    this.userReaction = reactionType; // Armazena a reação do usuário\r\n    this.reagirAFoto(reactionType, photoId); // Envia a reação para o servidor\r\n  }\r\n\r\n  this.showReactions = false; // Esconde a lista de reações\r\n},\r\n\r\n  reagirAFoto(tipoEmoji, fotoID) {\r\n    axios.post('/api/reacoes', {\r\n      tipoEmoji,\r\n      fotoID\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      // Supondo que você queira armazenar a reação do usuário\r\n      this.userReaction = tipoEmoji;\r\n      // Se você mantiver um registro de todas as reações por foto, você pode atualizar isso também\r\n      let photo = this.allPhotos.find(p => p._id === fotoID);\r\n      if (photo) {\r\n        this.fetchReactionCounts(fotoID);\r\n        if (!photo.reactions) {\r\n          photo.reactions = {};\r\n        }\r\n        if (photo.reactions[tipoEmoji]) {\r\n          photo.reactions[tipoEmoji]++;\r\n        } else {\r\n          photo.reactions[tipoEmoji] = 1;\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao reagir à foto', error);\r\n    });\r\n  },\r\n  toggleReactions() {\r\n    this.showReactions = !this.showReactions;\r\n  },\r\n  toggleCommentBox() {\r\n    this.showCommentBox = !this.showCommentBox;\r\n  },\r\n  prevPhoto() {\r\n    if (this.currentPhotoIndex === 0) {\r\n      this.currentPhotoIndex = this.allPhotos.length - 1;\r\n    } else {\r\n      this.currentPhotoIndex--;\r\n    }\r\n  },\r\n  nextPhoto() {\r\n    if (this.currentPhotoIndex === this.allPhotos.length - 1) {\r\n      this.currentPhotoIndex = 0;\r\n    } else {\r\n      this.currentPhotoIndex++;\r\n    }\r\n  },\r\n  fetchAllPhotos() {\r\n    let url = '/api/fotos';\r\n\r\n    const queryParams = [];\r\n\r\n    // Adiciona tags à URL se houver tags especificadas\r\n    if (this.filters.tags.trim()) {\r\n      const tags = this.filters.tags.split(',').map(tag => tag.trim()).filter(tag => tag);\r\n      queryParams.push(`tags=${tags.join(',')}`);\r\n    }\r\n\r\n    // Adiciona localização à URL se houver localização especificada\r\n    if (this.filters.localizacao.trim()) {\r\n      queryParams.push(`localizacao=${this.filters.localizacao.trim()}`);\r\n    }\r\n\r\n    // Combina os parâmetros de consulta, se houver\r\n    if (queryParams.length) {\r\n      url += `?${queryParams.join('&')}`;\r\n    }\r\n\r\n    axios.get(url, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.allPhotos = response.data;\r\n      if (this.allPhotos.length > 0) {\r\n        this.currentPhotoIndex = 0;\r\n        this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n        this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n        this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao recuperar fotos', error);\r\n    });\r\n  },\r\n\r\n\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData() {\r\n    // No método fetchUserData do seu componente Vue\r\naxios.get('/api/me', {\r\n  headers: {\r\n    'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n  }\r\n})\r\n.then(response => {\r\n  this.usuario = response.data; // Atualizar o estado com os dados do utilizador\r\n})\r\n.catch(error => {\r\n  console.error('Erro ao recuperar os dados do usuário', error);\r\n});\r\n\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\r\n    this.fetchAllPhotos(); // Adicione esta linha para buscar todas as fotos\r\n    if (this.allPhotos.length > 0) {\r\n      this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n      this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n      this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\r\n    }\r\n},\r\nwatch: {\r\n  currentPhotoIndex(newIndex, oldIndex) {\r\n    if (newIndex !== oldIndex) {\r\n      const currentPhoto = this.allPhotos[newIndex];\r\n      if (currentPhoto) {\r\n        this.checkUserReaction(currentPhoto._id);\r\n        this.fetchComments(currentPhoto._id); // Adicionar esta linha\r\n        this.fetchReactionCounts(currentPhoto._id)\r\n      }\r\n    }\r\n  }\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n  .sidebar {\r\n    position: sticky;\r\n      top: 60px;\r\n    width: 20%;\r\n    background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n    padding: 20px;\r\n    padding-top: 30px;\r\n    height: calc(110vh - 60px);\r\n    overflow-y: auto;\r\n    box-sizing: border-box; /* Inclui padding na largura total */\r\n  }\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n  position: relative;\r\n\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espaçamento entre os cartões de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cartão */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\n.filter-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.filter-item label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.filter-item input[type=\"text\"] {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.checkbox-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.checkbox-container input {\r\n  margin-right: 5px;\r\n}\r\n\r\n.filter-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filter-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.carousel-control {\r\n  background: none;\r\n  border: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.carousel-control.left {\r\n  left: -50px;\r\n}\r\n\r\n.carousel-control.right {\r\n  right: -50px;\r\n}\r\n\r\n.photo {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.photo-container {\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os elementos verticalmente */\r\n  align-items: center; /* Centraliza os elementos horizontalmente */\r\n  max-width: 400px; /* ou a largura que desejar */\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espaçamento conforme necessário */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descrição */\r\n  width: 100%; /* Isso fará com que a descrição se estenda por toda a largura do contêiner */\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-profile-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.photo-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reaction-button, .comment-button {\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  /* Adicione cores e estilos adicionais conforme necessário */\r\n}\r\n\r\n.reaction-button:hover, .comment-button:hover {\r\n  /* Estilos para o estado de hover */\r\n}\r\n\r\n.reactions-list {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reactions-list span {\r\n  font-size: 24px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.reactions-list span.active {\r\n  border: 2px solid blue; /* Estilo para destacar a reação ativa */\r\n}\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n.user-reaction{\r\n    font-size: x-large;\r\n}\r\n\r\n.add-comment {\r\n  display: flex;\r\n  margin-top: 10px;\r\n}\r\n\r\n.add-comment input[type=\"text\"] {\r\n  padding: 8px;\r\n  margin: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.add-comment button {\r\n  padding: 6px 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.comment {\r\n  border-top: 1px solid #ccc;\r\n  padding: 10px;\r\n}\r\n\r\n.comment-user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.comment-user-picture {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n} \r\n.no-comments {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-top: 20px;\r\n}\r\n.reaction-counts span {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  padding: 5px 10px;\r\n  margin: 5px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n.no-photos-message p {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-top: 20px;\r\n  font-style: italic;\r\n}\r\n\r\n.reaction-counts span:before {\r\n  content: '';\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n}\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}