{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fd963a32\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"profile-section\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"add-friend-section\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \" button\",\n  class: \"btn btn-success btn-lg botao-definicoes\"\n}, \"Alterar Nome\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \" button\",\n  class: \"btn btn-success btn-lg botao-definicoes\"\n}, \"Alterar Password\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"friends-list-section\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Amigos\", -1 /* HOISTED */));\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  class: \"content\"\n};\nconst _hoisted_12 = {\n  class: \"carousel-container\"\n};\nconst _hoisted_13 = {\n  class: \"photo-container\"\n};\nconst _hoisted_14 = [\"src\"];\nconst _hoisted_15 = {\n  key: 1,\n  class: \"photo-description\"\n};\nconst _hoisted_16 = {\n  key: 2,\n  class: \"reaction-counts\"\n};\nconst _hoisted_17 = {\n  class: \"photo-actions\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"reactions-list\"\n};\nconst _hoisted_19 = [\"onClick\"];\nconst _hoisted_20 = {\n  key: 1,\n  class: \"user-reaction\"\n};\nconst _hoisted_21 = {\n  key: 2,\n  class: \"add-comment\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"comments-section\"\n};\nconst _hoisted_23 = {\n  class: \"comment-user-info\"\n};\nconst _hoisted_24 = [\"src\"];\nconst _hoisted_25 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_app_header = _resolveComponent(\"app-header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_app_header)]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"aside\", _hoisted_2, [_createCommentVNode(\" Foto do perfil e nome \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $data.usuario?.fotoPerfil || $data.defaultAvatar,\n    alt: \"\",\n    class: \"profile-picture\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"h2\", null, _toDisplayString($data.usuario?.nome || 'Utilizador'), 1 /* TEXT */)]), _createCommentVNode(\" Se√ß√£o de Adicionar Amigo \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    type: \" button\",\n    class: \"btn btn-success btn-lg botao-definicoes\",\n    style: {},\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => $options.navigateTo('/alterarfoto'), [\"prevent\"]))\n  }, \"Alterar Foto de Perfil\"), _hoisted_6, _hoisted_7]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.amigos, amigo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: amigo._id\n    }, [_createElementVNode(\"img\", {\n      src: amigo.fotoPerfil ? $options.getAbsolutePath(amigo.fotoPerfil) : $data.defaultAvatar,\n      class: \"friend-picture\"\n    }, null, 8 /* PROPS */, _hoisted_10), _createElementVNode(\"span\", null, _toDisplayString(amigo.nome), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"main\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [$data.allPhotos.length > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"carousel-control left\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.prevPhoto && $options.prevPhoto(...args))\n  }, \"<\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_13, [$data.allPhotos[$data.currentPhotoIndex] ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.allPhotos[$data.currentPhotoIndex].imagePath,\n    alt: \"User Photo\",\n    class: \"photo\"\n  }, null, 8 /* PROPS */, _hoisted_14)) : _createCommentVNode(\"v-if\", true), $data.allPhotos[$data.currentPhotoIndex] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString($data.allPhotos[$data.currentPhotoIndex].descricao), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.allPhotos[$data.currentPhotoIndex]?.reactionCounts ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allPhotos[$data.currentPhotoIndex].reactionCounts, reaction => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: reaction._id\n    }, _toDisplayString($options.convertEmoji(reaction._id)) + \": \" + _toDisplayString(reaction.count), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    class: \"reaction-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleReactions && $options.toggleReactions(...args))\n  }, \"Reagir\"), $data.showReactions ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"span\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.handleReaction('like'))\n  }, \"üëç\"), _createElementVNode(\"span\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.handleReaction('heart'))\n  }, \"‚ù§Ô∏è\"), _createElementVNode(\"span\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.handleReaction('laugh'))\n  }, \"üòÇ\"), _createElementVNode(\"span\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.handleReaction('happy'))\n  }, \"üòä\")])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.emojis, emoji => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: emoji.type,\n      class: _normalizeClass({\n        active: $data.userReaction === emoji.type\n      }),\n      onClick: $event => $options.handleReaction(emoji.type)\n    }, _toDisplayString(emoji.char), 11 /* TEXT, CLASS, PROPS */, _hoisted_19);\n  }), 128 /* KEYED_FRAGMENT */)), $data.userReaction && !$data.showReactions ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _toDisplayString($options.convertEmoji($data.userReaction)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"comment-button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.toggleCommentBox && $options.toggleCommentBox(...args))\n  }, \"Comentar\"), $data.showCommentBox ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.newComment = $event),\n    placeholder: \"Adicione um coment√°rio...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newComment]]), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.postComment && $options.postComment(...args))\n  }, \"Enviar\")])) : _createCommentVNode(\"v-if\", true)]), $data.allPhotos.length > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 3,\n    class: \"carousel-control right\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.nextPhoto && $options.nextPhoto(...args))\n  }, \">\")) : _createCommentVNode(\"v-if\", true)])]), $data.currentPhotoComments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentPhotoComments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"comment\",\n      key: comment._id\n    }, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"img\", {\n      src: comment.userPhoto || $data.defaultAvatar,\n      alt: \"\",\n      class: \"comment-user-picture\"\n    }, null, 8 /* PROPS */, _hoisted_24), _createElementVNode(\"span\", null, _toDisplayString(comment.userName), 1 /* TEXT */), comment.userId === $data.usuario._id ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      style: {\n        \"border\": \"none\"\n      },\n      onClick: $event => $options.deleteComment(comment._id)\n    }, \"üóëÔ∏è\", 8 /* PROPS */, _hoisted_25)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", null, _toDisplayString(comment.descricao), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createVNode","_component_app_header","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","src","$data","usuario","fotoPerfil","defaultAvatar","alt","_toDisplayString","nome","_hoisted_5","style","onClick","_cache","_withModifiers","$event","$options","navigateTo","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createElementBlock","_Fragment","_renderList","amigos","amigo","key","_id","getAbsolutePath","_hoisted_11","_hoisted_12","allPhotos","length","args","prevPhoto","_hoisted_13","currentPhotoIndex","imagePath","_hoisted_15","descricao","reactionCounts","_hoisted_16","reaction","convertEmoji","count","_hoisted_17","toggleReactions","showReactions","_hoisted_18","handleReaction","emojis","emoji","_normalizeClass","active","userReaction","char","_hoisted_19","_hoisted_20","toggleCommentBox","showCommentBox","_hoisted_21","newComment","placeholder","postComment","nextPhoto","currentPhotoComments","_hoisted_22","comment","_hoisted_23","userPhoto","userName","userId","deleteComment","_hoisted_25"],"sources":["C:\\Users\\bruno\\OneDrive\\Escritorio\\PWA\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PerfilUtilizadorLogado.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n\r\n    <div class=\"app-container\">\r\n<aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n    <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Utilizador' }}</h2>\r\n  </div>\r\n\r\n  <!-- Se√ß√£o de Adicionar Amigo -->\r\n  <div class=\"add-friend-section\">\r\n    <button type=\" button\" class=\"btn btn-success btn-lg botao-definicoes\" style=\"padding\" @click.prevent=\"navigateTo('/alterarfoto')\">Alterar Foto de Perfil</button>\r\n    <button type=\" button\" class=\"btn btn-success btn-lg botao-definicoes\" >Alterar Nome</button>\r\n    <button type=\" button\" class=\"btn btn-success btn-lg botao-definicoes\">Alterar Password</button>\r\n  </div>\r\n  <div class=\"friends-list-section\">\r\n    <h3>Amigos</h3>\r\n    <ul>  \r\n      <li v-for=\"amigo in amigos\" :key=\"amigo._id\">\r\n        <img :src=\"amigo.fotoPerfil ? getAbsolutePath(amigo.fotoPerfil) : defaultAvatar\" class=\"friend-picture\">\r\n        <span>{{ amigo.nome }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</aside>\r\n    \r\n<main class=\"content\">\r\n    <div class=\"carousel-container\">\r\n      <button v-if=\"allPhotos.length > 1\" class=\"carousel-control left\" @click=\"prevPhoto\">&lt;</button>\r\n      <div class=\"photo-container\">\r\n        <img v-if=\"allPhotos[currentPhotoIndex]\" :src=\"allPhotos[currentPhotoIndex].imagePath\" alt=\"User Photo\" class=\"photo\">\r\n        <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"photo-description\">{{ allPhotos[currentPhotoIndex].descricao }}</div>\r\n        <div v-if=\"allPhotos[currentPhotoIndex]?.reactionCounts\" class=\"reaction-counts\">\r\n          <span v-for=\"reaction in allPhotos[currentPhotoIndex].reactionCounts\" :key=\"reaction._id\">\r\n            {{ convertEmoji(reaction._id) }}: {{ reaction.count }}\r\n          </span>\r\n        </div>\r\n        <div class=\"photo-actions\">\r\n          <button class=\"reaction-button\" @click=\"toggleReactions\">Reagir</button>\r\n          <div v-if=\"showReactions \" class=\"reactions-list\">\r\n            <span @click=\"handleReaction('like')\">üëç</span>\r\n            <span @click=\"handleReaction('heart')\">‚ù§Ô∏è</span>\r\n            <span @click=\"handleReaction('laugh')\">üòÇ</span>\r\n            <span @click=\"handleReaction('happy')\">üòä</span>\r\n          </div>\r\n          <span\r\n            v-for=\"emoji in emojis\"\r\n            :key=\"emoji.type\"\r\n            :class=\"{ active: userReaction === emoji.type }\"\r\n            @click=\"handleReaction(emoji.type)\"\r\n          >{{ emoji.char }}\r\n          </span>\r\n          <div v-if=\"userReaction && !showReactions\" class=\"user-reaction\">\r\n            {{ convertEmoji(userReaction) }}\r\n          </div>\r\n          <button class=\"comment-button\" @click=\"toggleCommentBox\">Comentar</button>\r\n          <div v-if=\"showCommentBox\" class=\"add-comment\">\r\n            <input type=\"text\" v-model=\"newComment\" placeholder=\"Adicione um coment√°rio...\">\r\n            <button @click=\"postComment\">Enviar</button>\r\n          </div>\r\n        </div>\r\n        <button v-if=\"allPhotos.length > 1\" class=\"carousel-control right\" @click=\"nextPhoto\">&gt;</button>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"currentPhotoComments.length > 0\" class=\"comments-section\">\r\n      <div class=\"comment\" v-for=\"comment in currentPhotoComments\" :key=\"comment._id\">\r\n        <div class=\"comment-user-info\">\r\n          <img :src=\"comment.userPhoto || defaultAvatar\" alt=\"\" class=\"comment-user-picture\">\r\n          <span>{{ comment.userName }}</span>\r\n          <button style=\"border: none;\" v-if=\"comment.userId === usuario._id\" @click=\"deleteComment(comment._id)\">üóëÔ∏è</button>\r\n        </div>\r\n        <p>{{ comment.descricao }}</p>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necess√°rio\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader\r\n  },\r\n  data() {\r\n  return {\r\n    usuario: null,\r\n    userPhotos: [], // Adiciona esta linha para armazenar as fotos do usu√°rio\r\n    defaultAvatar,\r\n    currentPhotoIndex: 0,\r\n    currentPhoto: {}, \r\n    amigos:[],\r\n    emojis: [], // adicione esta linha se \"emojis\" for uma lista que voc√™ ir√° iterar\r\n    showReactions: false, // Estado para controlar a visibilidade das rea√ß√µes\r\n    userReaction: null, // Estado para armazenar a rea√ß√£o do usu√°rio para a foto atual\r\n    newComment: '', // Para armazenar o novo coment√°rio digitado pelo usu√°rio\r\n    showCommentBox: false, // novo estado para controlar a exibi√ß√£o da caixa de coment√°rio\r\n    currentPhotoComments: [], // Armazena os coment√°rios da foto atual  \r\n    reactionCounts: {}, // Inicialize como um objeto vazio ou como necess√°rio\r\n    allPhotos: [], // Armazena todas as fotos, excluindo as do usu√°rio logado\r\n    \r\n  };\r\n},\r\nwatch: {\r\n  currentPhotoIndex(newIndex) {\r\n    const currentPhoto = this.allPhotos[newIndex];\r\n    if (currentPhoto) {\r\n      this.checkUserReaction(currentPhoto._id);\r\n      this.fetchComments(currentPhoto._id); // Adicionar esta linha\r\n      this.fetchReactionCounts(currentPhoto._id)\r\n    }\r\n  }\r\n},\r\nmethods: {\r\n  fetchAmigos() {\r\n      console.log(\"chegeqweqe\");\r\n      console.log(this.usuario._id);\r\n      try {\r\n        const response = axios.get(`/api/amizades/amigos/${this.usuario._id}`, {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n          }\r\n        });\r\n        this.amigos = response.data; // Supondo que a API retorne uma lista de objetos de amigos\r\n        console.log(this.amigos);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar amigos', error);\r\n      }\r\n    },\r\n  deleteComment(commentId) {\r\n    // Solicita confirma√ß√£o do usu√°rio\r\n    if (window.confirm(\"Tem certeza que deseja eliminar o coment√°rio?\")) {\r\n      axios.delete(`/api/comentario/${commentId}`, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n        }\r\n      })\r\n      .then(() => {\r\n        // Se a promessa for resolvida, informar o usu√°rio do sucesso\r\n        alert(\"Coment√°rio eliminado com sucesso!\");\r\n        // Atualizar os coment√°rios exibidos\r\n        this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao excluir coment√°rio', error);\r\n        // Se ocorrer um erro, informar o usu√°rio\r\n        alert(\"Ocorreu um erro ao tentar eliminar o coment√°rio.\");\r\n      });\r\n    }\r\n  },\r\n  fetchComments(fotoId) {\r\n    axios.get(`/api/comentarios/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.currentPhotoComments = response.data || [];\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao buscar coment√°rios', error);\r\n    });\r\n  },\r\n  postComment() {\r\n    const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n    axios.post('/api/comentarios', {\r\n      descricao: this.newComment,\r\n      fotoID: photoId,\r\n      dataCriacao: new Date()\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      alert('Coment√°rio adicionado com sucesso!'); // Exibe um alerta de sucesso\r\n      this.newComment = ''; // Limpa o campo de coment√°rio\r\n      this.fetchComments(photoId); // Atualiza a lista de coment√°rios\r\n      this.toggleCommentBox(); // Fecha a caixa de coment√°rio ap√≥s adicionar um novo\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao postar coment√°rio', error);\r\n      // Trate aqui o erro, como mostrar uma mensagem para o usu√°rio\r\n    });\r\n  },\r\n  fetchReactionCounts(fotoId) {\r\n  axios.get(`/api/reacoes/contagem/${fotoId}`)\r\n  .then(response => {\r\n    const photoIndex = this.allPhotos.findIndex(photo => photo._id === fotoId);\r\n    if (photoIndex !== -1) {\r\n      // No Vue 3, voc√™ pode simplesmente atribuir o valor\r\n      this.allPhotos[photoIndex].reactionCounts = response.data;\r\n      // Certifique-se de que reactionCounts √© reativo, definindo-o no estado do componente\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao buscar contagens de rea√ß√µes', error);\r\n  });\r\n},\r\n  convertEmoji(tipoEmoji) {\r\n    const emojiMap = {\r\n      like: 'üëç',\r\n      heart: '‚ù§Ô∏è',\r\n      laugh: 'üòÇ',\r\n      happy: 'üòä',\r\n      // ...outros mapeamentos\r\n    };\r\n    return emojiMap[tipoEmoji] || tipoEmoji;\r\n  },\r\n  checkUserReaction(fotoId) {\r\n    axios.get(`/api/reacoes/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.data && response.data.reacao) {\r\n        this.userReaction = response.data.reacao;\r\n      } else {\r\n        this.userReaction = null;\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao verificar a rea√ß√£o do usu√°rio', error);\r\n    });\r\n  },\r\n  reagirAFoto(tipoEmoji, fotoID) {\r\n    axios.post('/api/reacoes', {\r\n      tipoEmoji,\r\n      fotoID\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      // Supondo que voc√™ queira armazenar a rea√ß√£o do usu√°rio\r\n      this.userReaction = tipoEmoji;\r\n\r\n      // Se voc√™ mantiver um registro de todas as rea√ß√µes por foto, voc√™ pode atualizar isso tamb√©m\r\n      let photo = this.allPhotos.find(p => p._id === fotoID);\r\n      if (photo) {\r\n        if (!photo.reactions) {\r\n          photo.reactions = {};\r\n        }\r\n        // Incrementar o contador de rea√ß√µes para o tipoEmoji\r\n        if (photo.reactions[tipoEmoji]) {\r\n          photo.reactions[tipoEmoji]++;\r\n        } else {\r\n          photo.reactions[tipoEmoji] = 1;\r\n        }\r\n      }\r\n      \r\n      // Atualizar qualquer outro estado ou componentes da interface do usu√°rio conforme necess√°rio\r\n      // Por exemplo, se voc√™ tiver um componente de notifica√ß√£o, pode querer mostrar uma mensagem de sucesso\r\n      // this.showNotification('Rea√ß√£o enviada com sucesso!');\r\n\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao reagir √† foto', error);\r\n      // Tratar erros de interface do usu√°rio, como mostrar uma mensagem de erro\r\n      // this.showNotification('Erro ao enviar rea√ß√£o.');\r\n    });\r\n  },\r\n  toggleReactions() {\r\n    this.showReactions = !this.showReactions;\r\n  },\r\n  toggleCommentBox() {\r\n    this.showCommentBox = !this.showCommentBox;\r\n  },\r\n  handleReaction(reactionType) {\r\n    const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n    this.userReaction = reactionType; // Armazena a rea√ß√£o do usu√°rio\r\n    this.reagirAFoto(reactionType, photoId); // Envia a rea√ß√£o para o servidor\r\n    this.showReactions = false; // Esconde a lista de rea√ß√µes\r\n  },\r\n\r\n    getAbsolutePath(relativePath) {\r\n    // Isso garante que o caminho da imagem sempre comece a partir da raiz\r\n    return `${window.location.origin}/${relativePath}`;\r\n  },\r\n  prevPhoto() {\r\n    if (this.currentPhotoIndex === 0) {\r\n      this.currentPhotoIndex = this.allPhotos.length - 1;\r\n    } else {\r\n      this.currentPhotoIndex--;\r\n    }\r\n  },\r\n  nextPhoto() {\r\n    if (this.currentPhotoIndex === this.allPhotos.length - 1) {\r\n      this.currentPhotoIndex = 0;\r\n    } else {\r\n      this.currentPhotoIndex++;\r\n    }\r\n  },\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData() {\r\n    // No m√©todo fetchUserData do seu componente Vue\r\naxios.get('/api/me', {\r\n  headers: {\r\n    'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n  }\r\n})\r\n.then(response => {\r\n  this.usuario = response.data; // Atualizar o estado com os dados do utilizador\r\n  this.fetchUserPhotos(); // Chame o m√©todo para buscar as fotos ap√≥s obter os dados do usu√°rio\r\n\r\n})\r\n.catch(error => {\r\n  console.error('Erro ao recuperar os dados do usu√°rio', error);\r\n});\r\n  },\r\n  fetchUserPhotos() {\r\n      // Substitua '/api/user-photos' pelo seu endpoint correto\r\n      axios.get('/api/minhas-fotos', {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.allPhotos = response.data;\r\n        if (this.allPhotos.length > 0) {\r\n            this.currentPhotoIndex = 0; // Assegure-se de que o √≠ndice da foto atual est√° definido\r\n            this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id); // Agora buscamos os coment√°rios para a foto atual\r\n            this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n            this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\r\n          }\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao recuperar fotos do usu√°rio', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a p√°gina de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente √© criado   \r\n    this.fetchUserPhotos();\r\n    this.fetchAmigos();\r\n    if (this.allPhotos.length > 0) {\r\n      this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n      this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n      this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que voc√™ preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index t√≠pico para cabe√ßalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos espec√≠ficos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espa√ßo entre os √≠cones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos √≠cones */\r\n  width: auto; /* Mant√©m a propor√ß√£o dos √≠cones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual √† altura do seu cabe√ßalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padr√£o */\r\n  padding: 0; /* Remove preenchimentos padr√£o */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conte√∫do horizontalmente */\r\n  align-items: center; /* Centraliza o conte√∫do verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espa√ßo restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cart√µes verticalmente */\r\n  align-items: center; /* Centraliza os cart√µes horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necess√°rio */\r\n}\r\n\r\n.photo-card {\r\n  /* Estilos existentes ... */\r\n  display: flex;\r\n  justify-content: center; /* Centraliza a imagem horizontalmente */\r\n  align-items: center; /* Centraliza a imagem verticalmente */\r\n  overflow: hidden; /* Previne que a imagem ultrapasse o photo-card */\r\n}\r\n\r\n.photo {\r\n  max-width: 100%; /* Faz a imagem ocupar no m√°ximo 100% da largura do photo-card */\r\n  max-height: 300px; /* Limita a altura da imagem, ajuste conforme necess√°rio */\r\n  height: auto; /* Mant√©m a propor√ß√£o da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n  /* Outros estilos... */\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espa√ßamento conforme necess√°rio */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descri√ß√£o */\r\n}\r\n\r\n/* Estilos para os bot√µes e inputs */\r\nbutton {\r\n  /* Estilos do bot√£o */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n.botao-definicoes{\r\n    margin: 8px;\r\n    height: 50px;\r\n    width: 80%;\r\n}\r\n\r\n.settings-title {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.settings-forms {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.form-profile-update {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  width: 80%;\r\n  max-width: 400px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n.input-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.btn-update {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50; /* Verde */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-update:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.edit-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.edit-icon {\r\n  width: 20px; /* ou o tamanho que desejar */\r\n  height: 20px; /* ou o tamanho que desejar */\r\n}\r\n\r\n.input-icon-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.input-icon-group input {\r\n  flex-grow: 1;\r\n  padding-right: 30px; /* Espa√ßo para o √≠cone */\r\n}\r\n\r\n.input-icon {\r\n  position: absolute;\r\n  right: 10px; /* Dist√¢ncia do √≠cone √† direita do input */\r\n  cursor: pointer;\r\n  width: 20px; /* ou o tamanho que desejar */\r\n  height: 20px; /* ou o tamanho que desejar */\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.photo-card {\r\n  /* Sua estiliza√ß√£o existente... */\r\n  max-width: 600px; /* ou a largura que desejar */\r\n  overflow: hidden;\r\n}\r\n\r\n.carousel-control {\r\n  background: none;\r\n  border: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.carousel-control.left {\r\n  left: -50px;\r\n}\r\n\r\n.carousel-control.right {\r\n  right: -50px;\r\n}\r\n\r\n.photo {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.photo-container {\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os elementos verticalmente */\r\n  align-items: center; /* Centraliza os elementos horizontalmente */\r\n  /*max-width: 600px; /* ou a largura que desejar */\r\n  max-height: 600px;\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espa√ßamento conforme necess√°rio */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descri√ß√£o */\r\n  width: 100%; /* Isso far√° com que a descri√ß√£o se estenda por toda a largura do cont√™iner */\r\n}\r\n\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-profile-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.photo-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reaction-button, .comment-button {\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  /* Adicione cores e estilos adicionais conforme necess√°rio */\r\n}\r\n\r\n.reaction-button:hover, .comment-button:hover {\r\n  /* Estilos para o estado de hover */\r\n}\r\n\r\n.reactions-list {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reactions-list span {\r\n  font-size: 24px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.reactions-list span.active {\r\n  border: 2px solid blue; /* Estilo para destacar a rea√ß√£o ativa */\r\n}\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n.user-reaction{\r\n    font-size: x-large;\r\n}\r\n\r\n\r\n.add-comment {\r\n  display: flex;\r\n  margin-top: 10px;\r\n}\r\n\r\n.add-comment input[type=\"text\"] {\r\n  padding: 8px;\r\n  margin: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.add-comment button {\r\n  padding: 6px 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.comment {\r\n  border-top: 1px solid #ccc;\r\n  padding: 10px;\r\n}\r\n\r\n.comment-user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.comment-user-picture {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n} \r\n\r\n.reaction-counts span {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  padding: 5px 10px;\r\n  margin: 5px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.reaction-counts span:before {\r\n  content: '';\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n}\r\n/* Estilos para os bot√µes e inputs */\r\nbutton {\r\n  /* Estilos do bot√£o */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\ninput[readonly] {\r\n  background-color: #e9ecef; /* Cor de fundo para campos readonly */\r\n  color: #495057; /* Cor do texto para campos readonly */\r\n  cursor: not-allowed; /* Muda o cursor para indicar que o campo n√£o √© edit√°vel */\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}