{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      // Seus dados existentes aqui~\n      nome: '',\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      passwordMismatchError: false,\n      registrationError: null // Armazena a mensagem de erro de registro\n    };\n  },\n  methods: {\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    onRegister() {\n      if (this.password !== this.confirmPassword) {\n        this.passwordMismatchError = true;\n        return; // Pare a execução se as senhas não coincidirem\n      }\n      this.passwordMismatchError = false;\n      // Dados para enviar para a API\n      const userData = {\n        nome: this.nome,\n        email: this.email,\n        username: this.username,\n        password: this.password,\n        fotoPerfil: ''\n      };\n      // Endpoint da API para registrar um usuário\n      const apiEndpoint = 'http://localhost:3000/api/utilizador'; // Substitua pela sua URL de API\n      axios.post(apiEndpoint, userData).then(response => {\n        // Agora 'response' está sendo usado\n        console.log('Usuário registrado:', response.data);\n        this.$router.push('/login'); // Redireciona o usuário para a página de login\n      }).catch(error => {\n        // Verifique se o erro é por causa de um email ou username duplicado\n        if (error.response && error.response.status === 400) {\n          // Aqui você define uma mensagem de erro que será mostrada no template\n          this.registrationError = error.response.data.message;\n        } else {\n          // Trate outros erros aqui (por exemplo, mostrando uma mensagem de erro genérica)\n          console.error(error.response);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","nome","username","email","password","confirmPassword","passwordMismatchError","registrationError","methods","navigateTo","path","$router","push","onRegister","userData","fotoPerfil","apiEndpoint","post","then","response","console","log","catch","error","status","message"],"sources":["C:\\Users\\bruno\\OneDrive\\Escritorio\\PWA\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\UserRegisto.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <h1>VacayMoments</h1>\r\n      <form>  \r\n        <button type=\"button\" class=\"google-sign-in\">\r\n          <img src=\"@/assets/google.png\" alt=\"Google sign-in\" style=\"height:20px\">\r\n          Log In com o Google\r\n        </button>\r\n      </form>\r\n      <div class=\"divider\">OU</div>\r\n      <form @submit.prevent=\"onRegister\">\r\n        <input type=\"text\" placeholder=\"Nome\" required v-model=\"nome\">\r\n        <input type=\"text\" placeholder=\"Nome de utilizador\" required v-model=\"username\">\r\n        <input type=\"email\" placeholder=\"Email\" required v-model=\"email\">\r\n        <input type=\"password\" placeholder=\"Password\" required v-model=\"password\">\r\n        <input type=\"password\" placeholder=\"Confirmar Password\" required v-model=\"confirmPassword\">\r\n        <p v-if=\"passwordMismatchError\" class=\"error-message\">As senhas não coincidem.</p>\r\n        <p v-if=\"registrationError\" class=\"error-message\">{{ registrationError }}</p>\r\n        <button type=\"submit\">Registar</button>\r\n      </form>\r\n      <p>Já tem uma conta? <a @click.prevent=\"navigateTo('/login')\">Inicie Sessão.</a></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Seus dados existentes aqui~\r\n      nome: '',\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      passwordMismatchError: false,\r\n      registrationError: null, // Armazena a mensagem de erro de registro\r\n    };\r\n  },\r\n  methods: {\r\n    navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n    onRegister() {\r\n  if (this.password !== this.confirmPassword) {\r\n    this.passwordMismatchError = true;\r\n    return; // Pare a execução se as senhas não coincidirem\r\n  }\r\n  this.passwordMismatchError = false;\r\n  // Dados para enviar para a API\r\n  const userData = {\r\n    nome: this.nome,\r\n    email: this.email,\r\n    username: this.username,\r\n    password: this.password,\r\n    fotoPerfil: '' \r\n  };\r\n  // Endpoint da API para registrar um usuário\r\n  const apiEndpoint = 'http://localhost:3000/api/utilizador'; // Substitua pela sua URL de API\r\n  axios.post(apiEndpoint, userData)\r\n  .then(response => { // Agora 'response' está sendo usado\r\n    console.log('Usuário registrado:', response.data);\r\n    this.$router.push('/login'); // Redireciona o usuário para a página de login\r\n  })\r\n    .catch(error => {\r\n      // Verifique se o erro é por causa de um email ou username duplicado\r\n      if (error.response && error.response.status === 400) {\r\n        // Aqui você define uma mensagem de erro que será mostrada no template\r\n        this.registrationError = error.response.data.message;\r\n      } else {\r\n        // Trate outros erros aqui (por exemplo, mostrando uma mensagem de erro genérica)\r\n        console.error(error.response);\r\n      }\r\n    });\r\n}\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 98vh;\r\n    background-color: #E8F0FE; /* Azul claro para o fundo da página */  \r\n  }\r\n  \r\n  .login-box {\r\n    background: #FAFAFA;\r\n    padding: 2rem;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    width: 100%;\r\n    max-width: 400px;\r\n    text-align: center;\r\n    border: 1px solid #D0E2FF; /* Azul mais claro para a borda */\r\n  }\r\n  \r\n  .login-box h1 {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .login-box form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .login-box input {\r\n    padding: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .login-box button {\r\n    padding: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #4285F4;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .login-box button.google-sign-in {\r\n    background: #DB4437;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .login-box button.google-sign-in img {\r\n    margin-right: 0.5rem;\r\n  }\r\n  \r\n  .login-box .divider {\r\n    margin: 1rem 0;\r\n    position: relative;\r\n    text-align: center;\r\n  }\r\n  \r\n  .login-box .divider:before,\r\n  .login-box .divider:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    width: 40%;\r\n    height: 1px;\r\n    background: #ddd;\r\n  }\r\n  \r\n  .login-box .divider:before {\r\n    left: 0;\r\n  }\r\n  \r\n  .login-box .divider:after {\r\n    right: 0;\r\n  }\r\n  \r\n  .login-box a {\r\n    color: #4285F4;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .login-box a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .login-box p {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .google-button-container {\r\n  display: flex;\r\n  justify-content: center; /* Isso centraliza horizontalmente os itens flexíveis */\r\n  margin-bottom: 1rem; /* Opcional: espaço abaixo do botão */\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: -1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n  @media (max-width: 480px) {\r\n    .login-box {\r\n      width: 90%;\r\n    }\r\n  }\r\n  \r\n  </style>\r\n  \r\n"],"mappings":";AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,qBAAqB,EAAE,KAAK;MAC5BC,iBAAiB,EAAE,IAAI,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACjB,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,IAAI,CAAC;IACzB,CAAC;IACCG,UAAUA,CAAA,EAAG;MACf,IAAI,IAAI,CAACT,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,qBAAoB,GAAI,IAAI;QACjC,OAAM,CAAE;MACV;MACA,IAAI,CAACA,qBAAoB,GAAI,KAAK;MAClC;MACA,MAAMQ,QAAO,GAAI;QACfb,IAAI,EAAE,IAAI,CAACA,IAAI;QACfE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBD,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBE,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBW,UAAU,EAAE;MACd,CAAC;MACD;MACA,MAAMC,WAAU,GAAI,sCAAsC,EAAE;MAC5DjB,KAAK,CAACkB,IAAI,CAACD,WAAW,EAAEF,QAAQ,EAC/BI,IAAI,CAACC,QAAO,IAAK;QAAE;QAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAACnB,IAAI,CAAC;QACjD,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC/B,CAAC,EACEU,KAAK,CAACC,KAAI,IAAK;QACd;QACA,IAAIA,KAAK,CAACJ,QAAO,IAAKI,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UACnD;UACA,IAAI,CAACjB,iBAAgB,GAAIgB,KAAK,CAACJ,QAAQ,CAACnB,IAAI,CAACyB,OAAO;QACtD,OAAO;UACL;UACAL,OAAO,CAACG,KAAK,CAACA,KAAK,CAACJ,QAAQ,CAAC;QAC/B;MACF,CAAC,CAAC;IACN;EACE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}