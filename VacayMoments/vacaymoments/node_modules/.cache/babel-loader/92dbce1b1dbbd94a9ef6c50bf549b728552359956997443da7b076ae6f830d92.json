{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\n\nexport default {\n  data() {\n    return {\n      defaultAvatar,\n      searchQuery: '',\n      searchResults: [],\n      pendingFriendRequests: [],\n      showFriendRequests: false // Adiciona um controle para mostrar os pedidos de amizade\n    };\n  },\n  watch: {\n    // Isto assumirá que você tem um $route configurado corretamente com um parâmetro 'id'\n    '$route.params.id': {\n      immediate: true,\n      // isso garante que o watcher seja chamado imediatamente com o valor atual na montagem\n      handler(newId) {\n        if (newId) {\n          this.fetchUserData4();\n        }\n      }\n    }\n  },\n  methods: {\n    openUserProfile(user) {\n      console.log('Trying to open user profile with id:', user._id);\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    fetchUserData4() {\n      // agora, esta função espera até que o ID esteja realmente disponível\n      const userId = this.$route.params.id;\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`).then(response => {\n          this.usuario = response.data;\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do usuário', error);\n        });\n      }\n    },\n    toggleFriendRequests() {\n      if (!this.showFriendRequests) {\n        this.fetchPendingFriendRequests();\n      }\n      this.showFriendRequests = !this.showFriendRequests;\n    },\n    fetchPendingFriendRequests() {\n      const userId = this.$store.state.user.id; // ou como você armazena o ID do usuário\n      axios.get(`/api/amizades/pendentes/${userId}`).then(response => {\n        this.pendingFriendRequests = response.data;\n      }).catch(error => {\n        console.error('Erro ao buscar pedidos de amizade pendentes', error);\n      });\n    },\n    acceptFriendRequest(amizadeId) {\n      // Lógica para aceitar o pedido de amizade\n    },\n    rejectFriendRequest(amizadeId) {\n      // Lógica para rejeitar o pedido de amizade\n    },\n    performSearch() {\n      // Implemente a lógica de busca aqui\n      axios.get('/api/search-users', {\n        params: {\n          query: this.searchQuery\n        },\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.searchResults = response.data;\n        console.log(response.data);\n      }).catch(error => {\n        console.error('Erro na pesquisa', error);\n      });\n    },\n    logout() {\n      localStorage.removeItem('token'); // Remover o token do localStorage\n      this.$router.push('/login'); // Redirecionar para a página de login\n    }\n  },\n  created() {\n    this.fetchUserData4(); // Buscar os dados do utilizador quando o componente é criado\n    this.fetchPendingFriendRequests(); // Isso vai buscar os pedidos quando o componente for montado\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","data","searchQuery","searchResults","pendingFriendRequests","showFriendRequests","watch","immediate","handler","newId","fetchUserData4","methods","openUserProfile","user","console","log","_id","$router","push","name","params","id","navigateTo","path","userId","$route","get","then","response","usuario","catch","error","toggleFriendRequests","fetchPendingFriendRequests","$store","state","acceptFriendRequest","amizadeId","rejectFriendRequest","performSearch","query","headers","localStorage","getItem","logout","removeItem","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\components\\AppHeader.vue"],"sourcesContent":["<template>\r\n    <header class=\"app-header\">\r\n      <div class=\"logo-container\">\r\n    <!-- Substitua pelo seu logo -->\r\n    <a @click.prevent=\"navigateTo('/paginainicial')\" class=\"icon-link\">\r\n    <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    </a>\r\n  </div>\r\n  <nav class=\"navbar navbar-light\">\r\n  <form class=\"form-inline\" @submit.prevent=\"performSearch\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Procurar\" aria-label=\"Search\" v-model=\"searchQuery\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Procurar</button>\r\n  </form>\r\n  <div class=\"search-results\" v-if=\"searchResults.length > 0\">\r\n<div class=\"user-result\" v-for=\"user in searchResults\" :key=\"user._id\" @click=\"openUserProfile(user)\">\r\n      <img :src=\"user.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n      <p class=\"user-name\">{{ user.nome }}</p>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  <nav class=\"nav-icons\">\r\n    <!-- Botão do ícone de amizade -->\r\n<a @click.prevent=\"toggleFriendRequests\" class=\"icon-link\">\r\n  <img src=\"@/assets/pedidoamizade.png\" alt=\"Ícone de pedido de amizade\">\r\n</a>\r\n\r\n<!-- Exibição dos pedidos de amizade pendentes -->\r\n<div class=\"search-results\" v-if=\"showFriendRequests\">\r\n  <div class=\"user-result\" v-for=\"request in pendingFriendRequests\" :key=\"request._id\">\r\n    <img :src=\"request.idUtilizador1.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n    <p class=\"user-name\">{{ request.idUtilizador1.nome }}</p>\r\n    <button @click=\"acceptFriendRequest(request._id)\">Aceitar</button>\r\n    <button @click=\"rejectFriendRequest(request._id)\">Rejeitar</button>\r\n  </div>\r\n</div>\r\n\r\n    <a @click.prevent=\"navigateTo('/paginautilizador')\" class=\"icon-link\">\r\n      <img src=\"@/assets/localizacao.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/adicionarfoto')\" class=\"icon-link\">\r\n      <img src=\"@/assets/addIcon.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/perfil')\" class=\"icon-link\">\r\n      <img src=\"@/assets/user.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"logout\" class=\"icon-link\">\r\n      <img src=\"@/assets/logout.png\" alt=\"Logout\">\r\n    </a>  \r\n  </nav>\r\n    </header>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\n\r\nexport default {\r\n  \r\n  data() {\r\n  return {\r\n    defaultAvatar,\r\n    searchQuery: '',\r\n    searchResults: [],\r\n    pendingFriendRequests: [],\r\n    showFriendRequests: false, // Adiciona um controle para mostrar os pedidos de amizade\r\n\r\n    };\r\n},\r\nwatch: {\r\n    // Isto assumirá que você tem um $route configurado corretamente com um parâmetro 'id'\r\n    '$route.params.id': {\r\n      immediate: true, // isso garante que o watcher seja chamado imediatamente com o valor atual na montagem\r\n      handler(newId) {\r\n        if (newId) {\r\n          this.fetchUserData4();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\nmethods: {\r\n  openUserProfile(user) {\r\n      console.log('Trying to open user profile with id:', user._id);\r\n\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData4() {\r\n      // agora, esta função espera até que o ID esteja realmente disponível\r\n      const userId = this.$route.params.id;\r\n      if (userId) {\r\n        axios.get(`/api/utilizador/${userId}`)\r\n          .then(response => {\r\n            this.usuario = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Erro ao recuperar os dados do usuário', error);\r\n          });\r\n      }\r\n    },\r\n    toggleFriendRequests() {\r\n      if (!this.showFriendRequests) {\r\n        this.fetchPendingFriendRequests();\r\n      }\r\n      this.showFriendRequests = !this.showFriendRequests;\r\n    },\r\n    fetchPendingFriendRequests() {\r\n      const userId = this.$store.state.user.id; // ou como você armazena o ID do usuário\r\n      axios.get(`/api/amizades/pendentes/${userId}`)\r\n        .then(response => {\r\n          this.pendingFriendRequests = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao buscar pedidos de amizade pendentes', error);\r\n        });\r\n    },\r\n    acceptFriendRequest(amizadeId) {\r\n      // Lógica para aceitar o pedido de amizade\r\n    },\r\n    rejectFriendRequest(amizadeId) {\r\n      // Lógica para rejeitar o pedido de amizade\r\n    },\r\n  performSearch() {\r\n      // Implemente a lógica de busca aqui\r\n      axios.get('/api/search-users', {\r\n        params: { query: this.searchQuery },\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken'),\r\n        },\r\n      })\r\n      .then(response => {\r\n        \r\n        this.searchResults = response.data;\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro na pesquisa', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData4(); // Buscar os dados do utilizador quando o componente é criado\r\n      this.fetchPendingFriendRequests(); // Isso vai buscar os pedidos quando o componente for montado\r\n\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n}\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-name {\r\n  margin: 0;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}