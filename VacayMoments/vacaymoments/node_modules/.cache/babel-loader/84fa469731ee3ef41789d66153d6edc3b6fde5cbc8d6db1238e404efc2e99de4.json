{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\n\nexport default {\n  data() {\n    return {\n      usuario: null,\n      defaultAvatar,\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      searchQuery: '',\n      searchResults: []\n    };\n  },\n  computed: {\n    passwordMismatch() {\n      return this.newPassword !== this.confirmPassword;\n    },\n    // Adicione uma nova propriedade computada para verificar se todos os campos estão preenchidos\n    isFormFilled() {\n      return this.currentPassword && this.newPassword && this.confirmPassword;\n    }\n  },\n  methods: {\n    updatePassword() {\n      console.log('Tentando atualizar a senha');\n      if (this.currentPassword && this.newPassword && this.newPassword === this.confirmPassword) {\n        axios.put('/api/alterar-password', {\n          currentPassword: this.currentPassword,\n          newPassword: this.newPassword\n        }, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n          }\n        }).then(() => {\n          alert('Senha atualizada com sucesso!');\n          this.navigateTo('/perfil');\n        }).catch(error => {\n          console.error('Erro ao alterar a senha', error);\n          alert('Erro ao alterar a senha: ' + (error.response?.data?.message || 'Erro desconhecido'));\n        });\n      } else {\n        alert('Por favor, preencha todos os campos corretamente.');\n      }\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    fetchUserData() {\n      // No método fetchUserData do seu componente Vue\n      axios.get('/api/me', {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.usuario = response.data; // Atualizar o estado com os dados do utilizador\n      }).catch(error => {\n        console.error('Erro ao recuperar os dados do usuário', error);\n      });\n    },\n    fetchUserData2() {\n      // Substitua 'userId' pelo nome do parâmetro esperado na rota\n      const userId = this.$route.params.id;\n      axios.get(`/api/utilizador/${userId}`).then(response => {\n        this.usuario = response.data;\n      }).catch(error => {\n        console.error('Erro ao recuperar os dados do usuário', error);\n      });\n    },\n    performSearch() {\n      // Implemente a lógica de busca aqui\n      console.log(\"Cheguei\");\n      axios.get('/api/search-users', {\n        params: {\n          query: this.searchQuery\n        },\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.searchResults = response.data;\n      }).catch(error => {\n        console.error('Erro na pesquisa', error);\n      });\n    },\n    logout() {\n      localStorage.removeItem('token'); // Remover o token do localStorage\n      this.$router.push('/login'); // Redirecionar para a página de login\n    }\n  },\n  created() {\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","data","usuario","currentPassword","newPassword","confirmPassword","searchQuery","searchResults","computed","passwordMismatch","isFormFilled","methods","updatePassword","console","log","put","headers","localStorage","getItem","then","alert","navigateTo","catch","error","response","message","path","$router","push","fetchUserData","get","fetchUserData2","userId","$route","params","id","performSearch","query","logout","removeItem","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\AlterarPassword.vue"],"sourcesContent":["<template>\r\n    <header class=\"app-header\">\r\n      <div class=\"logo-container\">\r\n    <!-- Substitua pelo seu logo -->\r\n    <a @click.prevent=\"navigateTo('/paginainicial')\" class=\"icon-link\">\r\n    <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    </a>\r\n  </div>\r\n  <nav class=\"navbar navbar-light\">\r\n  <form class=\"form-inline\" @submit.prevent=\"performSearch\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Procurar\" aria-label=\"Search\" v-model=\"searchQuery\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Procurar</button>\r\n  </form>\r\n  <div class=\"search-results\" v-if=\"searchResults.length > 0\">\r\n    <div class=\"user-result\" v-for=\"user in searchResults\" :key=\"user._id\">\r\n      <img :src=\"user.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n      <p class=\"user-name\">{{ user.nome }}</p>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  <nav class=\"nav-icons\">\r\n    <!-- Substitua por seus ícones -->\r\n    <a @click.prevent=\"navigateTo('/paginautilizador')\" class=\"icon-link\">\r\n      <img src=\"@/assets/pedidoamizade.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/paginautilizador')\" class=\"icon-link\">\r\n      <img src=\"@/assets/localizacao.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/adicionarfoto')\" class=\"icon-link\">\r\n      <img src=\"@/assets/addIcon.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/perfil')\" class=\"icon-link\">\r\n      <img src=\"@/assets/user.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"logout\" class=\"icon-link\">\r\n      <img src=\"@/assets/logout.png\" alt=\"Logout\">\r\n    </a>  \r\n  </nav>\r\n    </header>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n    <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Utilizador' }}</h2>\r\n  </div>\r\n</aside>\r\n    <main class=\"content\">\r\n    <h1 class=\"settings-title\">Alterar Password</h1>\r\n    <div class=\"settings-forms\">\r\n      <form class=\"form-profile-update\" @submit.prevent=\"updatePassword\">\r\n        <div class=\"form-group\">\r\n          <label for=\"currentPassword\">Password Atual</label>\r\n          <input type=\"password\" id=\"currentPassword\" placeholder=\"Escreve a Password atual\" v-model=\"currentPassword\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"newPassword\">Nova Password</label>\r\n          <input type=\"password\" id=\"newPassword\" placeholder=\"Escreve a nova Password\" v-model=\"newPassword\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirma a Password</label>\r\n            <input type=\"password\" id=\"confirmPassword\" placeholder=\"Confirma a Password\" v-model=\"confirmPassword\">\r\n          <p v-if=\"passwordMismatch\" class=\"error-message\">As passwords não coincidem.</p>\r\n        </div>\r\n<button type=\"submit\" class=\"btn-update\" :disabled=\"passwordMismatch || !isFormFilled\">Atualizar Password</button>\r\n      </form>\r\n    </div>\r\n  </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\n\r\nexport default {\r\n  data() {\r\n  return {\r\n    usuario: null,\r\n    defaultAvatar,\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n    searchQuery: '',\r\n      searchResults: [],\r\n    };\r\n},\r\ncomputed: {\r\n    passwordMismatch() {\r\n      return this.newPassword !== this.confirmPassword;\r\n    },\r\n    // Adicione uma nova propriedade computada para verificar se todos os campos estão preenchidos\r\n    isFormFilled() {\r\n      return this.currentPassword && this.newPassword && this.confirmPassword;\r\n    },\r\n  },\r\nmethods: {\r\n  \r\n  updatePassword() {\r\n          console.log('Tentando atualizar a senha');\r\n\r\n    if (this.currentPassword && this.newPassword && this.newPassword === this.confirmPassword) {\r\n      axios.put('/api/alterar-password', {\r\n        currentPassword: this.currentPassword,\r\n        newPassword: this.newPassword,\r\n      }, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken'),\r\n        },\r\n      })\r\n      .then(() => {\r\n        alert('Senha atualizada com sucesso!');\r\n        this.navigateTo('/perfil');\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao alterar a senha', error);\r\n        alert('Erro ao alterar a senha: ' + (error.response?.data?.message || 'Erro desconhecido'));\r\n      });\r\n    } else {\r\n      alert('Por favor, preencha todos os campos corretamente.');\r\n    }\r\n  },\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData() {\r\n    // No método fetchUserData do seu componente Vue\r\naxios.get('/api/me', {\r\n  headers: {\r\n    'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n  }\r\n})\r\n.then(response => {\r\n  this.usuario = response.data; // Atualizar o estado com os dados do utilizador\r\n})\r\n.catch(error => {\r\n  console.error('Erro ao recuperar os dados do usuário', error);\r\n});\r\n  },\r\n  fetchUserData2() {\r\n    // Substitua 'userId' pelo nome do parâmetro esperado na rota\r\n    const userId = this.$route.params.id;\r\n    axios.get(`/api/utilizador/${userId}`)\r\n      .then(response => {\r\n        this.usuario = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao recuperar os dados do usuário', error);\r\n      });\r\n  },\r\n  performSearch() {\r\n      // Implemente a lógica de busca aqui\r\n      console.log(\"Cheguei\");\r\n      axios.get('/api/search-users', {\r\n        params: { query: this.searchQuery },\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken'),\r\n        },\r\n      })\r\n      .then(response => {\r\n        \r\n        this.searchResults = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro na pesquisa', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espaçamento entre os cartões de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cartão */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n.botao-definicoes{\r\n    margin: 8px;\r\n    height: 50px;\r\n    width: 80%;\r\n}\r\n\r\n.settings-title {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.settings-forms {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.form-profile-update {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  width: 80%;\r\n  max-width: 400px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n.input-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.btn-update {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50; /* Verde */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-update:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.edit-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.edit-icon {\r\n  width: 20px; /* ou o tamanho que desejar */\r\n  height: 20px; /* ou o tamanho que desejar */\r\n}\r\n\r\n.input-icon-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.input-icon-group input {\r\n  flex-grow: 1;\r\n  padding-right: 30px; /* Espaço para o ícone */\r\n}\r\n\r\n.input-icon {\r\n  position: absolute;\r\n  right: 10px; /* Distância do ícone à direita do input */\r\n  cursor: pointer;\r\n  width: 20px; /* ou o tamanho que desejar */\r\n  height: 20px; /* ou o tamanho que desejar */\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-name {\r\n  margin: 0;\r\n}\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\ninput[readonly] {\r\n  background-color: #e9ecef; /* Cor de fundo para campos readonly */\r\n  color: #495057; /* Cor do texto para campos readonly */\r\n  cursor: not-allowed; /* Muda o cursor para indicar que o campo não é editável */\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}