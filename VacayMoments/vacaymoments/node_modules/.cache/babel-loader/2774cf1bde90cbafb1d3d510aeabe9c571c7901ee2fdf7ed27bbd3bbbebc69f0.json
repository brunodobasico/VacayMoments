{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fd963a32\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"profile-section\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"add-friend-section\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \" button\",\n  class: \"btn btn-success btn-lg botao-definicoes\",\n  style: {}\n}, \"Alterar Foto de Perfil\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \" button\",\n  class: \"btn btn-success btn-lg botao-definicoes\"\n}, \"Alterar Nome\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \" button\",\n  class: \"btn btn-success btn-lg botao-definicoes\"\n}, \"Alterar Password\")], -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"content\"\n};\nconst _hoisted_7 = {\n  class: \"swiper-container\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"swiper-button-prev\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"swiper-button-next\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_app_header = _resolveComponent(\"app-header\");\n  const _component_swiper_slide = _resolveComponent(\"swiper-slide\");\n  const _component_swiper = _resolveComponent(\"swiper\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_app_header)]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"aside\", _hoisted_2, [_createCommentVNode(\" Foto do perfil e nome \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $data.usuario?.fotoPerfil || $data.defaultAvatar,\n    alt: \"\",\n    class: \"profile-picture\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"h2\", null, _toDisplayString($data.usuario?.nome || 'Utilizador'), 1 /* TEXT */)]), _createCommentVNode(\" Seção de Adicionar Amigo \"), _hoisted_5]), _createElementVNode(\"main\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_swiper, {\n    options: $data.swiperOptions\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userPhotos, photo => {\n      return _openBlock(), _createBlock(_component_swiper_slide, {\n        key: photo.id\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"img\", {\n          src: photo.imagePath,\n          alt: \"User Photo\",\n          class: \"photo\"\n        }, null, 8 /* PROPS */, _hoisted_8)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"]), _createCommentVNode(\" Adicione os botões de navegação do Swiper se desejar \"), _hoisted_9, _hoisted_10])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","type","style","_createVNode","_component_app_header","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","src","$data","usuario","fotoPerfil","defaultAvatar","alt","_toDisplayString","nome","_hoisted_5","_hoisted_6","_hoisted_7","_component_swiper","options","swiperOptions","_createElementBlock","_Fragment","_renderList","userPhotos","photo","_createBlock","_component_swiper_slide","key","id","imagePath","_hoisted_9","_hoisted_10"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PerfilUtilizadorLogado.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n    <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Utilizador' }}</h2>\r\n  </div>\r\n\r\n  <!-- Seção de Adicionar Amigo -->\r\n  <div class=\"add-friend-section\">\r\n    <button type=\" button\" class=\"btn btn-success btn-lg botao-definicoes\" style=\"padding\">Alterar Foto de Perfil</button>\r\n    <button type=\" button\" class=\"btn btn-success btn-lg botao-definicoes\">Alterar Nome</button>\r\n    <button type=\" button\" class=\"btn btn-success btn-lg botao-definicoes\">Alterar Password</button>\r\n  </div>\r\n</aside>\r\n    \r\n    <main class=\"content\">\r\n    <div class=\"swiper-container\">\r\n    <swiper :options=\"swiperOptions\">\r\n      <swiper-slide v-for=\"photo in userPhotos\" :key=\"photo.id\">\r\n        <img :src=\"photo.imagePath\" alt=\"User Photo\" class=\"photo\">\r\n      </swiper-slide>\r\n    </swiper>\r\n    <!-- Adicione os botões de navegação do Swiper se desejar -->\r\n    <div class=\"swiper-button-prev\"></div>\r\n    <div class=\"swiper-button-next\"></div>\r\n  </div>\r\n  </main>  \r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n// Importe os componentes do Swiper\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport SwiperCore, { Navigation, Pagination } from 'swiper/core';\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader,\r\n    Swiper, // Garante que o componente Swiper está registrado\r\n    SwiperSlide // Garante que o componente SwiperSlide está registrado\r\n  },\r\n  data() {\r\n  return {\r\n    usuario: null,\r\n    userPhotos: [], // Adiciona esta linha para armazenar as fotos do usuário\r\n    defaultAvatar,\r\n    swiperOptions: {\r\n        slidesPerView: 1, // Mostra uma foto por vez\r\n        spaceBetween: 30,\r\n        navigation: {  // Assegura que os botões de navegação funcionem\r\n          nextEl: '.swiper-button-next',\r\n          prevEl: '.swiper-button-prev',\r\n        },\r\n        pagination: {\r\n          el: '.swiper-pagination',\r\n          clickable: true,\r\n        },\r\n        loop: true, // Se você quiser que o carrossel seja infinito\r\n      },\r\n    \r\n  };\r\n  \r\n},\r\nmethods: {\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData() {\r\n    // No método fetchUserData do seu componente Vue\r\naxios.get('/api/me', {\r\n  headers: {\r\n    'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n  }\r\n})\r\n.then(response => {\r\n  this.usuario = response.data; // Atualizar o estado com os dados do utilizador\r\n  this.fetchUserPhotos(); // Chame o método para buscar as fotos após obter os dados do usuário\r\n\r\n})\r\n.catch(error => {\r\n  console.error('Erro ao recuperar os dados do usuário', error);\r\n});\r\n  },\r\n  fetchUserPhotos() {\r\n      // Substitua '/api/user-photos' pelo seu endpoint correto\r\n      axios.get('/api/minhas-fotos', {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.userPhotos = response.data; // Armazena as fotos do usuário\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao recuperar fotos do usuário', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n}\r\n\r\n.photo-card {\r\n  /* Estilos existentes ... */\r\n  display: flex;\r\n  justify-content: center; /* Centraliza a imagem horizontalmente */\r\n  align-items: center; /* Centraliza a imagem verticalmente */\r\n  overflow: hidden; /* Previne que a imagem ultrapasse o photo-card */\r\n}\r\n\r\n.photo {\r\n  max-width: 100%; /* Faz a imagem ocupar no máximo 100% da largura do photo-card */\r\n  max-height: 300px; /* Limita a altura da imagem, ajuste conforme necessário */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n  /* Outros estilos... */\r\n}\r\n.swiper-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.swiper-button-prev, .swiper-button-next {\r\n  color: #000; /* ou qualquer cor que você preferir */\r\n  /* Outros estilos conforme necessário */\r\n}\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n.botao-definicoes{\r\n    margin: 8px;\r\n    height: 50px;\r\n    width: 80%;\r\n}\r\n\r\n.settings-title {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.settings-forms {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.form-profile-update {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  width: 80%;\r\n  max-width: 400px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n.input-group {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.btn-update {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50; /* Verde */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-update:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.edit-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.edit-icon {\r\n  width: 20px; /* ou o tamanho que desejar */\r\n  height: 20px; /* ou o tamanho que desejar */\r\n}\r\n\r\n.input-icon-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.input-icon-group input {\r\n  flex-grow: 1;\r\n  padding-right: 30px; /* Espaço para o ícone */\r\n}\r\n\r\n.input-icon {\r\n  position: absolute;\r\n  right: 10px; /* Distância do ícone à direita do input */\r\n  cursor: pointer;\r\n  width: 20px; /* ou o tamanho que desejar */\r\n  height: 20px; /* ou o tamanho que desejar */\r\n}\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\ninput[readonly] {\r\n  background-color: #e9ecef; /* Cor de fundo para campos readonly */\r\n  color: #495057; /* Cor do texto para campos readonly */\r\n  cursor: not-allowed; /* Muda o cursor para indicar que o campo não é editável */\r\n}\r\n</style>\r\n\r\n"],"mappings":";;;EAKSA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAS;;EAEnBA,KAAK,EAAC;AAAiB;;gEAM5BC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAoB,I,aAC7BC,mBAAA,CAAsH;EAA9GC,IAAI,EAAC,SAAS;EAACF,KAAK,EAAC,yCAAyC;EAACG,KAAe,EAAf;GAAgB,wBAAsB,G,aAC7GF,mBAAA,CAA4F;EAApFC,IAAI,EAAC,SAAS;EAACF,KAAK,EAAC;GAA0C,cAAY,G,aACnFC,mBAAA,CAAgG;EAAxFC,IAAI,EAAC,SAAS;EAACF,KAAK,EAAC;GAA0C,kBAAgB,E;;EAIjFA,KAAK,EAAC;AAAS;;EAChBA,KAAK,EAAC;AAAkB;;gEAO7BC,mBAAA,CAAsC;EAAjCD,KAAK,EAAC;AAAoB;iEAC/BC,mBAAA,CAAsC;EAAjCD,KAAK,EAAC;AAAoB;;;;;6DA7B/BC,mBAAA,CAEE,cADFG,YAAA,CAAyBC,qBAAA,E,GAGzBJ,mBAAA,CA4BI,OA5BJK,UA4BI,GA3BJL,mBAAA,CAaI,SAbJM,UAaI,GAZNC,mBAAA,2BAA8B,EAC9BP,mBAAA,CAGM,OAHNQ,UAGM,GAFJR,mBAAA,CAAgF;IAA1ES,GAAG,EAAEC,KAAA,CAAAC,OAAO,EAAEC,UAAU,IAAIF,KAAA,CAAAG,aAAa;IAAEC,GAAG,EAAC,EAAE;IAACf,KAAK,EAAC;uCAChEC,mBAAA,CAA4C,YAAAe,gBAAA,CAArCL,KAAA,CAAAC,OAAO,EAAEK,IAAI,iC,GAGpBT,mBAAA,8BAAiC,EACjCU,UAIM,C,GAGJjB,mBAAA,CAWK,QAXLkB,UAWK,GAVLlB,mBAAA,CASI,OATJmB,UASI,GARJhB,YAAA,CAISiB,iBAAA;IAJAC,OAAO,EAAEX,KAAA,CAAAY;EAAa;sBACf,MAA2B,E,kBAAzCC,mBAAA,CAEeC,SAAA,QAAAC,WAAA,CAFef,KAAA,CAAAgB,UAAU,EAAnBC,KAAK;2BAA1BC,YAAA,CAEeC,uBAAA;QAF4BC,GAAG,EAAEH,KAAK,CAACI;;0BACpD,MAA2D,CAA3D/B,mBAAA,CAA2D;UAArDS,GAAG,EAAEkB,KAAK,CAACK,SAAS;UAAElB,GAAG,EAAC,YAAY;UAACf,KAAK,EAAC;;;;;;kCAGvDQ,mBAAA,0DAA6D,EAC7D0B,UAAsC,EACtCC,WAAsC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}