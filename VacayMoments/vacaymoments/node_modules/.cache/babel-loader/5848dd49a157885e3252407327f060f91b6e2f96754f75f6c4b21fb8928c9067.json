{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\n\nexport default {\n  data() {\n    return {\n      usuario: null,\n      defaultAvatar,\n      estadoAmizade: null,\n      searchQuery: '',\n      searchResults: []\n    };\n  },\n  watch: {\n    '$route.params.id': {\n      immediate: true,\n      handler(newId, oldId) {\n        if (newId !== oldId) {\n          this.fetchUserData();\n        }\n      }\n    }\n  },\n  methods: {\n    verificarEstadoAmizade(usuarioId) {\n      // Substitua 'userIdLogado' pelo ID do usuário logado\n      const userIdLogado = 'o-id-do-usuario-logado'; // Isso deve vir de algum estado autenticado\n\n      axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`).then(response => {\n        // Supondo que o backend retorne o estado da amizade\n        this.estadoAmizade = response.data.estado;\n      }).catch(error => {\n        console.error('Erro ao verificar estado da amizade', error);\n        this.estadoAmizade = 'nenhum';\n      });\n    },\n    enviarPedidoAmizade() {\n      // Implemente a lógica para enviar um pedido de amizade\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    openUserProfile(user) {\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    },\n    fetchUserData() {\n      const userId = this.$route.params.id;\n      console.log(this.$route.params.id);\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`).then(response => {\n          this.usuario = response.data;\n          this.verificarEstadoAmizade(this.usuario._id);\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do usuário', error);\n        });\n      }\n    },\n    performSearch() {\n      // Implemente a lógica de busca aqui\n      console.log(\"Cheguei\");\n      axios.get('/api/search-users', {\n        params: {\n          query: this.searchQuery\n        },\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.searchResults = response.data;\n      }).catch(error => {\n        console.error('Erro na pesquisa', error);\n      });\n    },\n    logout() {\n      localStorage.removeItem('token'); // Remover o token do localStorage\n      this.$router.push('/login'); // Redirecionar para a página de login\n    }\n  },\n  created() {\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","data","usuario","estadoAmizade","searchQuery","searchResults","watch","immediate","handler","newId","oldId","fetchUserData","methods","verificarEstadoAmizade","usuarioId","userIdLogado","get","then","response","estado","catch","error","console","enviarPedidoAmizade","navigateTo","path","$router","push","openUserProfile","user","name","params","id","_id","userId","$route","log","performSearch","query","headers","localStorage","getItem","logout","removeItem","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PaginaUtilizador.vue"],"sourcesContent":["\r\n<template>\r\n    <header class=\"app-header\">\r\n      <div class=\"logo-container\">\r\n    <!-- Substitua pelo seu logo -->\r\n    <a @click.prevent=\"navigateTo('/paginainicial')\" class=\"icon-link\">\r\n    <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    </a>\r\n  </div>\r\n  <nav class=\"navbar navbar-light\">\r\n  <form class=\"form-inline\" @submit.prevent=\"performSearch\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Procurar\" aria-label=\"Search\" v-model=\"searchQuery\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Procurar</button>\r\n  </form>\r\n  <div class=\"search-results\" v-if=\"searchResults.length > 0\">\r\n<div class=\"user-result\" v-for=\"user in searchResults\" :key=\"user._id\" @click=\"openUserProfile(user)\">\r\n      <img :src=\"user.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n      <p class=\"user-name\">{{ user.nome }}</p>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  <nav class=\"nav-icons\">\r\n    <!-- Substitua por seus ícones -->\r\n    <a @click.prevent=\"navigateTo('/paginautilizador')\" class=\"icon-link\">\r\n      <img src=\"@/assets/pedidoamizade.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/paginautilizador')\" class=\"icon-link\">\r\n      <img src=\"@/assets/localizacao.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/adicionarfoto')\" class=\"icon-link\">\r\n      <img src=\"@/assets/addIcon.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/perfil')\" class=\"icon-link\">\r\n      <img src=\"@/assets/user.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"logout\" class=\"icon-link\">\r\n      <img src=\"@/assets/logout.png\" alt=\"Logout\">\r\n    </a>  \r\n  </nav>\r\n    </header>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n  <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Usuário Não Encontrado' }}</h2>\r\n</div>\r\n\r\n  <!-- Seção de Adicionar Amigo -->\r\n  <div class=\"add-friend-section\">\r\n    <button type=\" button\" class=\"btn btn-success btn-lg\">Adicionar Amigo</button>\r\n    <h3>Amigos</h3>\r\n    <ul class=\"friends-list\">\r\n      <li><img src=\"@/assets/jonas.jpg\" alt=\"Jonas Pistolas\" class=\"friend-picture\">Jonas Pistolas</li>\r\n      <li><img src=\"@/assets/jonas.jpg\" alt=\"Zequinha\" class=\"friend-picture\">Zequinha</li>\r\n      <li><img src=\"@/assets/jonas.jpg\" alt=\"Leo dos Panados\" class=\"friend-picture\">Leo dos Panados</li>\r\n      <!-- Adicione mais amigos aqui -->\r\n    </ul>\r\n  </div>\r\n</aside>\r\n    \r\n    <main class=\"content\">\r\n      <!-- Primeiro cartão de foto -->\r\n    <div class=\"photo-card\">\r\n      <img src=\"@/assets/amarante1.jpeg\" alt=\"Primeira Foto\" class=\"photo\">\r\n      <!-- Adicione mais detalhes do cartão aqui se necessário -->\r\n    </div>\r\n\r\n    <!-- Segundo cartão de foto -->\r\n    <div class=\"photo-card\">\r\n      <img src=\"@/assets/amarante2.jpeg\" alt=\"Segunda Foto\" class=\"photo\">\r\n      <!-- Adicione mais detalhes do cartão aqui se necessário -->\r\n    </div>\r\n    <div class=\"photo-card\">\r\n      <img src=\"@/assets/amarante2.jpeg\" alt=\"Segunda Foto\" class=\"photo\">\r\n      <!-- Adicione mais detalhes do cartão aqui se necessário -->\r\n    </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      usuario: null,\r\n      defaultAvatar,\r\n      estadoAmizade: null, \r\n      searchQuery: '',\r\n      searchResults: [],  \r\n    };\r\n  },\r\n  watch: {\r\n  '$route.params.id': {\r\n    immediate: true,\r\n    handler(newId, oldId) {\r\n      if (newId !== oldId) {\r\n        this.fetchUserData();\r\n      }\r\n    }\r\n  }\r\n},\r\n  methods: {\r\n     verificarEstadoAmizade(usuarioId) {\r\n      // Substitua 'userIdLogado' pelo ID do usuário logado\r\n      const userIdLogado = 'o-id-do-usuario-logado'; // Isso deve vir de algum estado autenticado\r\n\r\n      axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`)\r\n        .then(response => {\r\n          // Supondo que o backend retorne o estado da amizade\r\n          this.estadoAmizade = response.data.estado;\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao verificar estado da amizade', error);\r\n          this.estadoAmizade = 'nenhum';\r\n        });\r\n    },\r\n\r\n    enviarPedidoAmizade() {\r\n      // Implemente a lógica para enviar um pedido de amizade\r\n    },\r\n    navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  openUserProfile(user) {\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n  fetchUserData() {\r\n    const userId = this.$route.params.id;\r\n    console.log(this.$route.params.id)\r\n    if (userId) {\r\n      axios.get(`/api/utilizador/${userId}`)\r\n        .then(response => {\r\n          this.usuario = response.data;\r\n          this.verificarEstadoAmizade(this.usuario._id);\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao recuperar os dados do usuário', error);\r\n        });\r\n    }\r\n  },\r\n  performSearch() {\r\n      // Implemente a lógica de busca aqui\r\n      console.log(\"Cheguei\");\r\n      axios.get('/api/search-users', {\r\n        params: { query: this.searchQuery },\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken'),\r\n        },\r\n      })\r\n      .then(response => {\r\n        \r\n        this.searchResults = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro na pesquisa', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espaçamento entre os cartões de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cartão */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}