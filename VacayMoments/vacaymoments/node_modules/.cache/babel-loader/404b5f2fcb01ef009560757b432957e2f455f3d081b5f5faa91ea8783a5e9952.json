{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necess√°rio\nimport AppHeader from '@/components/AppHeader.vue';\nexport default {\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      usuario: null,\n      defaultAvatar,\n      estadoAmizade: null,\n      utilizador: null,\n      // Deve ser atualizado com os dados do usu√°rio logado\n      allPhotos: [],\n      // Armazena todas as fotos, excluindo as do usu√°rio logado\n      currentPhotoIndex: 0,\n      // √çndice da foto atual no carrossel\n      showReactions: false,\n      // Estado para controlar a visibilidade das rea√ß√µes\n      userReaction: null // Estado para armazenar a rea√ß√£o do usu√°rio para a foto atual\n    };\n  },\n  watch: {\n    '$route.params.id': {\n      immediate: true,\n      handler(newId, oldId) {\n        if (newId !== oldId) {\n          this.fetchUserData();\n          this.fetchAllPhotos();\n        }\n      }\n    }\n  },\n  methods: {\n    convertEmoji(tipoEmoji) {\n      const emojiMap = {\n        like: 'üëç',\n        heart: '‚ù§Ô∏è',\n        laugh: 'üòÇ',\n        happy: 'üòä'\n        // ...outros mapeamentos\n      };\n      return emojiMap[tipoEmoji] || tipoEmoji;\n    },\n    checkUserReaction(fotoId) {\n      axios.get(`/api/reacoes/${fotoId}`, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        if (response.data && response.data.reacao) {\n          this.userReaction = response.data.reacao;\n        } else {\n          this.userReaction = null;\n        }\n      }).catch(error => {\n        console.error('Erro ao verificar a rea√ß√£o do usu√°rio', error);\n      });\n    },\n    reagirAFoto(tipoEmoji, fotoID) {\n      axios.post('/api/reacoes', {\n        tipoEmoji,\n        fotoID\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        // Supondo que voc√™ queira armazenar a rea√ß√£o do usu√°rio\n        this.userReaction = tipoEmoji;\n\n        // Se voc√™ mantiver um registro de todas as rea√ß√µes por foto, voc√™ pode atualizar isso tamb√©m\n        let photo = this.allPhotos.find(p => p._id === fotoID);\n        if (photo) {\n          if (!photo.reactions) {\n            photo.reactions = {};\n          }\n          // Incrementar o contador de rea√ß√µes para o tipoEmoji\n          if (photo.reactions[tipoEmoji]) {\n            photo.reactions[tipoEmoji]++;\n          } else {\n            photo.reactions[tipoEmoji] = 1;\n          }\n        }\n\n        // Atualizar qualquer outro estado ou componentes da interface do usu√°rio conforme necess√°rio\n        // Por exemplo, se voc√™ tiver um componente de notifica√ß√£o, pode querer mostrar uma mensagem de sucesso\n        // this.showNotification('Rea√ß√£o enviada com sucesso!');\n      }).catch(error => {\n        console.error('Erro ao reagir √† foto', error);\n        // Tratar erros de interface do usu√°rio, como mostrar uma mensagem de erro\n        // this.showNotification('Erro ao enviar rea√ß√£o.');\n      });\n    },\n    toggleReactions() {\n      this.showReactions = !this.showReactions;\n    },\n    handleReaction(reactionType) {\n      const photoId = this.allPhotos[this.currentPhotoIndex]._id;\n      this.userReaction = reactionType; // Armazena a rea√ß√£o do usu√°rio\n      this.reagirAFoto(reactionType, photoId); // Envia a rea√ß√£o para o servidor\n      this.showReactions = false; // Esconde a lista de rea√ß√µes\n    },\n    getAbsolutePath(relativePath) {\n      // Isso garante que o caminho da imagem sempre comece a partir da raiz\n      return `${window.location.origin}/${relativePath}`;\n    },\n    prevPhoto() {\n      if (this.currentPhotoIndex === 0) {\n        this.currentPhotoIndex = this.allPhotos.length - 1;\n      } else {\n        this.currentPhotoIndex--;\n      }\n    },\n    nextPhoto() {\n      if (this.currentPhotoIndex === this.allPhotos.length - 1) {\n        this.currentPhotoIndex = 0;\n      } else {\n        this.currentPhotoIndex++;\n      }\n    },\n    fetchAllPhotos() {\n      const userId = this.$route.params.id;\n      axios.get(`/api/fotos/${userId}`, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.allPhotos = response.data;\n        console.log(\"pagina utilizador\", this.allPhotos);\n      }).catch(error => {\n        console.error('Erro ao recuperar fotos', error);\n      });\n    },\n    fetchUserData() {\n      const userId = this.$route.params.id;\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`).then(response => {\n          this.usuario = response.data;\n          this.verificarEstadoAmizade(response.data._id);\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do utilizador', error);\n        });\n      }\n    },\n    async fetchUserLogado() {\n      try {\n        const response = await axios.get('/api/me', {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n          }\n        });\n        this.utilizador = response.data;\n        return true; // Indica sucesso\n      } catch (error) {\n        console.error('Erro ao recuperar os dados do usu√°rio', error);\n        return false; // Indica falha\n      }\n    },\n    cancelarPedidoAmizade() {\n      // Substitua 'amizadeId' pelo ID do documento de amizade que voc√™ deseja cancelar.\n      // Voc√™ pode precisar ajustar a l√≥gica para obter esse ID.\n      const amizadeId = this.amizadeId;\n      axios.delete(`/api/amizades/${amizadeId}`).then(() => {\n        this.estadoAmizade = 'nenhum';\n        this.amizadeId = null; // Adiciona esta linha para resetar o ID\n\n        // Fa√ßa qualquer outra coisa necess√°ria ap√≥s o cancelamento bem-sucedido.\n      }).catch(error => {\n        console.error('Erro ao cancelar pedido de amizade', error);\n        // Trate o erro adequadamente.\n      });\n    },\n    verificarEstadoAmizade(usuarioId) {\n      this.$nextTick(() => {\n        if (this.utilizador && this.utilizador._id) {\n          const userIdLogado = this.utilizador._id;\n          axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`).then(response => {\n            this.estadoAmizade = response.data.estado;\n            this.amizadeId = response.data.amizadeId;\n          }).catch(error => {\n            console.error('Erro ao verificar estado da amizade', error);\n            this.estadoAmizade = 'nenhum';\n          });\n        } else {\n          console.error('Utilizador logado n√£o definido.');\n        }\n      });\n    },\n    enviarPedidoAmizade() {\n      const userIdLogado = this.utilizador._id; // Obtenha o ID do usu√°rio logado\n      const usuarioId = this.usuario._id; // ID do usu√°rio visualizado\n\n      axios.post('/api/amizades', {\n        idutilizador1: userIdLogado,\n        idutilizador2: usuarioId,\n        dataAmizade: new Date(),\n        estado: 'pendente'\n      }).then(response => {\n        this.estadoAmizade = 'pendente';\n        this.amizadeId = response.data._id; // Armazena o novo ID da amizade\n      }).catch(error => {\n        console.error('Erro ao enviar pedido de amizade', error);\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    openUserProfile(user) {\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    }\n  },\n  async created() {\n    if (await this.fetchUserLogado()) {\n      // Espera e verifica se foi bem-sucedido\n      this.fetchUserData();\n      this.fetchAllPhotos(); // Adicione esta linha para buscar todas as fotos\n      if (this.allPhotos.length > 0) {\n        this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\n      }\n    } else {\n      console.error('Erro: Utilizador logado ainda n√£o definido ap√≥s fetchUserLogado.');\n    }\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","AppHeader","components","data","usuario","estadoAmizade","utilizador","allPhotos","currentPhotoIndex","showReactions","userReaction","watch","immediate","handler","newId","oldId","fetchUserData","fetchAllPhotos","methods","convertEmoji","tipoEmoji","emojiMap","like","heart","laugh","happy","checkUserReaction","fotoId","get","headers","localStorage","getItem","then","response","reacao","catch","error","console","reagirAFoto","fotoID","post","photo","find","p","_id","reactions","toggleReactions","handleReaction","reactionType","photoId","getAbsolutePath","relativePath","window","location","origin","prevPhoto","length","nextPhoto","userId","$route","params","id","log","verificarEstadoAmizade","fetchUserLogado","cancelarPedidoAmizade","amizadeId","delete","usuarioId","$nextTick","userIdLogado","estado","enviarPedidoAmizade","idutilizador1","idutilizador2","dataAmizade","Date","navigateTo","path","$router","push","openUserProfile","user","name","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PaginaUtilizador.vue"],"sourcesContent":["\r\n<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n  <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Usu√°rio N√£o Encontrado' }}</h2>\r\n</div>\r\n\r\n  <!-- Se√ß√£o de Adicionar Amigo -->\r\n  <div class=\"add-friend-section\">\r\n  <button v-if=\"estadoAmizade === 'nenhum'\" \r\n          type=\"button\" \r\n          class=\"btn btn-success btn-lg\"\r\n          @click=\"enviarPedidoAmizade\">\r\n    Adicionar Amigo\r\n  </button>\r\n  <p v-else-if=\"estadoAmizade === 'pendente'\">\r\n    Pedido pendente\r\n  </p>\r\n  <button v-if=\"estadoAmizade === 'pendente'\"\r\n          type=\"button\"\r\n          class=\"btn btn-warning btn-lg\"\r\n          @click=\"cancelarPedidoAmizade\">\r\n    Cancelar Pedido\r\n  </button>\r\n  <p v-else-if=\"estadoAmizade === 'amigos'\">\r\n    Amigos\r\n  </p>\r\n  <!-- ... restante do template ... -->\r\n</div>\r\n\r\n</aside>\r\n    \r\n    <main class=\"content\">\r\n    <div class=\"carousel-container\">\r\n    <button v-if=\"allPhotos.length > 1\" class=\"carousel-control left\" @click=\"prevPhoto\">&lt;</button>\r\n    <div class=\"photo-container\">\r\n      <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"user-info\">\r\n        <img :src=\"allPhotos[currentPhotoIndex].userPhoto || defaultAvatar\" alt=\"Foto do perfil\" class=\"user-profile-picture\">\r\n        <h3>{{ allPhotos[currentPhotoIndex].userName }}</h3>\r\n      </div>\r\n          <img v-if=\"allPhotos[currentPhotoIndex]\" :src=\"getAbsolutePath(allPhotos[currentPhotoIndex].imagePath)\" alt=\"User Photo\" class=\"photo\">\r\n          <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"photo-description\">{{ allPhotos[currentPhotoIndex].descricao }}</div>\r\n          <div class=\"photo-actions\">\r\n        <button class=\"reaction-button\" @click=\"toggleReactions\">Reagir</button>\r\n        <div v-if=\"showReactions \" class=\"reactions-list\">\r\n          <span @click=\"handleReaction('like')\">üëç</span>\r\n          <span @click=\"handleReaction('heart')\">‚ù§Ô∏è</span>\r\n          <span @click=\"handleReaction('laugh')\">üòÇ</span>\r\n          <span @click=\"handleReaction('happy')\">üòä</span>\r\n          <!-- Adicione mais emojis conforme necess√°rio -->\r\n        </div>\r\n        <span\r\n          v-for=\"emoji in emojis\"\r\n          :key=\"emoji.type\"\r\n          :class=\"{ active: userReaction === emoji.type }\"\r\n          @click=\"handleReaction(emoji.type)\"\r\n        >{{ emoji.char }}\r\n        </span>\r\n        <div v-if=\"userReaction && !showReactions\" class=\"user-reaction\">\r\n          {{ convertEmoji(userReaction) }}\r\n        </div>\r\n        <button class=\"comment-button\">Comentar</button>\r\n        \r\n      </div>\r\n        </div>\r\n        <button v-if=\"allPhotos.length > 1\" class=\"carousel-control right\" @click=\"nextPhoto\">&gt;</button>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necess√°rio\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader\r\n  },\r\n  data() {\r\n    return {\r\n      usuario: null,\r\n      defaultAvatar,\r\n      estadoAmizade: null, \r\n      utilizador: null, // Deve ser atualizado com os dados do usu√°rio logado\r\n      allPhotos: [], // Armazena todas as fotos, excluindo as do usu√°rio logado\r\n      currentPhotoIndex: 0, // √çndice da foto atual no carrossel\r\n      showReactions: false, // Estado para controlar a visibilidade das rea√ß√µes\r\n      userReaction: null, // Estado para armazenar a rea√ß√£o do usu√°rio para a foto atual\r\n    };\r\n  },\r\n  watch: {\r\n    \r\n  '$route.params.id': {\r\n    immediate: true,\r\n    handler(newId, oldId) {\r\n      if (newId !== oldId) {\r\n        this.fetchUserData();\r\n        this.fetchAllPhotos();\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\n},\r\n  methods: {\r\n    convertEmoji(tipoEmoji) {\r\n    const emojiMap = {\r\n      like: 'üëç',\r\n      heart: '‚ù§Ô∏è',\r\n      laugh: 'üòÇ',\r\n      happy: 'üòä',\r\n      // ...outros mapeamentos\r\n    };\r\n    return emojiMap[tipoEmoji] || tipoEmoji;\r\n  },\r\n  checkUserReaction(fotoId) {\r\n    axios.get(`/api/reacoes/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.data && response.data.reacao) {\r\n        this.userReaction = response.data.reacao;\r\n      } else {\r\n        this.userReaction = null;\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao verificar a rea√ß√£o do usu√°rio', error);\r\n    });\r\n  },\r\n  reagirAFoto(tipoEmoji, fotoID) {\r\n    axios.post('/api/reacoes', {\r\n      tipoEmoji,\r\n      fotoID\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      // Supondo que voc√™ queira armazenar a rea√ß√£o do usu√°rio\r\n      this.userReaction = tipoEmoji;\r\n\r\n      // Se voc√™ mantiver um registro de todas as rea√ß√µes por foto, voc√™ pode atualizar isso tamb√©m\r\n      let photo = this.allPhotos.find(p => p._id === fotoID);\r\n      if (photo) {\r\n        if (!photo.reactions) {\r\n          photo.reactions = {};\r\n        }\r\n        // Incrementar o contador de rea√ß√µes para o tipoEmoji\r\n        if (photo.reactions[tipoEmoji]) {\r\n          photo.reactions[tipoEmoji]++;\r\n        } else {\r\n          photo.reactions[tipoEmoji] = 1;\r\n        }\r\n      }\r\n      \r\n      // Atualizar qualquer outro estado ou componentes da interface do usu√°rio conforme necess√°rio\r\n      // Por exemplo, se voc√™ tiver um componente de notifica√ß√£o, pode querer mostrar uma mensagem de sucesso\r\n      // this.showNotification('Rea√ß√£o enviada com sucesso!');\r\n\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao reagir √† foto', error);\r\n      // Tratar erros de interface do usu√°rio, como mostrar uma mensagem de erro\r\n      // this.showNotification('Erro ao enviar rea√ß√£o.');\r\n    });\r\n  },\r\n  toggleReactions() {\r\n    this.showReactions = !this.showReactions;\r\n  },\r\n  handleReaction(reactionType) {\r\n    const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n    this.userReaction = reactionType; // Armazena a rea√ß√£o do usu√°rio\r\n    this.reagirAFoto(reactionType, photoId); // Envia a rea√ß√£o para o servidor\r\n    this.showReactions = false; // Esconde a lista de rea√ß√µes\r\n  },\r\n\r\n    getAbsolutePath(relativePath) {\r\n    // Isso garante que o caminho da imagem sempre comece a partir da raiz\r\n    return `${window.location.origin}/${relativePath}`;\r\n  },\r\n    prevPhoto() {\r\n    if (this.currentPhotoIndex === 0) {\r\n      this.currentPhotoIndex = this.allPhotos.length - 1;\r\n    } else {\r\n      this.currentPhotoIndex--;\r\n    }\r\n  },\r\n  nextPhoto() {\r\n    if (this.currentPhotoIndex === this.allPhotos.length - 1) {\r\n      this.currentPhotoIndex = 0;\r\n    } else {\r\n      this.currentPhotoIndex++;\r\n    }\r\n  },\r\n  fetchAllPhotos() {\r\n    const userId = this.$route.params.id;\r\n    axios.get(`/api/fotos/${userId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n    this.allPhotos = response.data;\r\n    console.log(\"pagina utilizador\",this.allPhotos);\r\n  })\r\n    .catch(error => {\r\n      console.error('Erro ao recuperar fotos', error);\r\n    });\r\n  },\r\n    fetchUserData() {\r\n    const userId = this.$route.params.id;\r\n\r\n    if (userId) {\r\n      axios.get(`/api/utilizador/${userId}`)\r\n        .then(response => {\r\n          this.usuario = response.data;\r\n          this.verificarEstadoAmizade(response.data._id);\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao recuperar os dados do utilizador', error);\r\n        });\r\n    }\r\n  },\r\n  async fetchUserLogado() {\r\n      try {\r\n        const response = await axios.get('/api/me', {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n          }\r\n        });\r\n        this.utilizador = response.data;\r\n        return true; // Indica sucesso\r\n      } catch (error) {\r\n        console.error('Erro ao recuperar os dados do usu√°rio', error);\r\n        return false; // Indica falha\r\n      }\r\n    },\r\n    cancelarPedidoAmizade() {\r\n    // Substitua 'amizadeId' pelo ID do documento de amizade que voc√™ deseja cancelar.\r\n    // Voc√™ pode precisar ajustar a l√≥gica para obter esse ID.\r\n    const amizadeId = this.amizadeId; \r\n\r\n    axios.delete(`/api/amizades/${amizadeId}`)\r\n      .then(() => {\r\n        this.estadoAmizade = 'nenhum';\r\n        this.amizadeId = null; // Adiciona esta linha para resetar o ID\r\n\r\n        // Fa√ßa qualquer outra coisa necess√°ria ap√≥s o cancelamento bem-sucedido.\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao cancelar pedido de amizade', error);\r\n        // Trate o erro adequadamente.\r\n      });\r\n  },\r\n  verificarEstadoAmizade(usuarioId) {\r\n    this.$nextTick(() => {\r\n    if (this.utilizador && this.utilizador._id) {\r\n      const userIdLogado = this.utilizador._id;\r\n      axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`)\r\n        .then(response => {\r\n          this.estadoAmizade = response.data.estado;\r\n          this.amizadeId = response.data.amizadeId;\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao verificar estado da amizade', error);\r\n          this.estadoAmizade = 'nenhum';\r\n        });\r\n    } else {\r\n      console.error('Utilizador logado n√£o definido.');\r\n    }\r\n  });\r\n  },\r\n\r\n   enviarPedidoAmizade() {\r\n    const userIdLogado = this.utilizador._id // Obtenha o ID do usu√°rio logado\r\n    const usuarioId = this.usuario._id; // ID do usu√°rio visualizado\r\n\r\n  axios.post('/api/amizades', {\r\n    idutilizador1: userIdLogado,\r\n    idutilizador2: usuarioId,\r\n    dataAmizade: new Date(),\r\n    estado: 'pendente'\r\n  })\r\n  .then(response => {\r\n    this.estadoAmizade = 'pendente';\r\n    this.amizadeId = response.data._id; // Armazena o novo ID da amizade\r\n\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao enviar pedido de amizade', error);\r\n  });\r\n},\r\n    navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  openUserProfile(user) {\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n\r\n},\r\nasync created() {\r\n  if (await this.fetchUserLogado()) { // Espera e verifica se foi bem-sucedido\r\n    this.fetchUserData();\r\n    this.fetchAllPhotos(); // Adicione esta linha para buscar todas as fotos\r\n  if (this.allPhotos.length > 0) {\r\n      this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n  }\r\n  } else {\r\n    console.error('Erro: Utilizador logado ainda n√£o definido ap√≥s fetchUserLogado.');\r\n  }\r\n},\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que voc√™ preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index t√≠pico para cabe√ßalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos espec√≠ficos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espa√ßo entre os √≠cones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos √≠cones */\r\n  width: auto; /* Mant√©m a propor√ß√£o dos √≠cones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual √† altura do seu cabe√ßalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padr√£o */\r\n  padding: 0; /* Remove preenchimentos padr√£o */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conte√∫do horizontalmente */\r\n  align-items: center; /* Centraliza o conte√∫do verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espa√ßo restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cart√µes verticalmente */\r\n  align-items: center; /* Centraliza os cart√µes horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necess√°rio */\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espa√ßamento entre os cart√µes de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cart√£o */\r\n  height: auto; /* Mant√©m a propor√ß√£o da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.carousel-control {\r\n  background: none;\r\n  border: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.carousel-control.left {\r\n  left: -50px;\r\n}\r\n\r\n.carousel-control.right {\r\n  right: -50px;\r\n}\r\n\r\n.photo {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.photo-container {\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os elementos verticalmente */\r\n  align-items: center; /* Centraliza os elementos horizontalmente */\r\n  max-width: 400px; /* ou a largura que desejar */\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espa√ßamento conforme necess√°rio */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descri√ß√£o */\r\n  width: 100%; /* Isso far√° com que a descri√ß√£o se estenda por toda a largura do cont√™iner */\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n\r\n/* Estilos para os bot√µes e inputs */\r\nbutton {\r\n  /* Estilos do bot√£o */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}