{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\nimport AppHeader from '@/components/AppHeader.vue';\nexport default {\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      usuario: null,\n      defaultAvatar,\n      emojis: [],\n      // adicione esta linha se \"emojis\" for uma lista que você irá iterar\n      allPhotos: [],\n      // Armazena todas as fotos, excluindo as do usuário logado\n      currentPhotoIndex: 0,\n      // Índice da foto atual no carrossel\n      showReactions: false,\n      // Estado para controlar a visibilidade das reações\n      userReaction: null,\n      // Estado para armazenar a reação do usuário para a foto atual\n      newComment: '',\n      // Para armazenar o novo comentário digitado pelo usuário\n      showCommentBox: false,\n      // novo estado para controlar a exibição da caixa de comentário\n      currentPhotoComments: [],\n      // Armazena os comentários da foto atual  \n      reactionCounts: {},\n      // Inicialize como um objeto vazio ou como necessário\n      filters: {\n        tags: '',\n        localizacao: '',\n        privacidade: []\n      }\n    };\n  },\n  methods: {\n    removeUserReaction(fotoID) {\n      const utilizadorID = this.usuario._id; // Assumindo que você tem o ID do usuário logado disponível\n      console.log(utilizadorID);\n      axios.delete(`/api/reacoes?fotoID=${fotoID}&utilizadorID=${utilizadorID}`, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        this.fetchReactionCounts(fotoID); // Atualize a contagem de reações após remover a reação\n      }).catch(error => {\n        console.error('Erro ao remover reação', error);\n      });\n    },\n    applyFilters() {\n      this.fetchAllPhotos(); // Atualiza as fotos com os filtros aplicados\n    },\n    deleteComment(commentId) {\n      // Solicita confirmação do usuário\n      if (window.confirm(\"Tem certeza que deseja eliminar o comentário?\")) {\n        axios.delete(`/api/comentario/${commentId}`, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n          }\n        }).then(() => {\n          // Se a promessa for resolvida, informar o usuário do sucesso\n          alert(\"Comentário eliminado com sucesso!\");\n          // Atualizar os comentários exibidos\n          this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\n        }).catch(error => {\n          console.error('Erro ao excluir comentário', error);\n          // Se ocorrer um erro, informar o usuário\n          alert(\"Ocorreu um erro ao tentar eliminar o comentário.\");\n        });\n      }\n    },\n    fetchComments(fotoId) {\n      axios.get(`/api/comentarios/${fotoId}`, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.currentPhotoComments = response.data || [];\n      }).catch(error => {\n        console.error('Erro ao buscar comentários', error);\n      });\n    },\n    postComment() {\n      const photoId = this.allPhotos[this.currentPhotoIndex]._id;\n      axios.post('/api/comentarios', {\n        descricao: this.newComment,\n        fotoID: photoId,\n        dataCriacao: new Date()\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        alert('Comentário adicionado com sucesso!'); // Exibe um alerta de sucesso\n        this.newComment = ''; // Limpa o campo de comentário\n        this.fetchComments(photoId); // Atualiza a lista de comentários\n        this.toggleCommentBox(); // Fecha a caixa de comentário após adicionar um novo\n      }).catch(error => {\n        console.error('Erro ao postar comentário', error);\n        // Trate aqui o erro, como mostrar uma mensagem para o usuário\n      });\n    },\n    fetchReactionCounts(fotoId) {\n      axios.get(`/api/reacoes/contagem/${fotoId}`).then(response => {\n        const photoIndex = this.allPhotos.findIndex(photo => photo._id === fotoId);\n        if (photoIndex !== -1) {\n          // No Vue 3, você pode simplesmente atribuir o valor\n          this.allPhotos[photoIndex].reactionCounts = response.data;\n          // Certifique-se de que reactionCounts é reativo, definindo-o no estado do componente\n        }\n      }).catch(error => {\n        console.error('Erro ao buscar contagens de reações', error);\n      });\n    },\n    convertEmoji(tipoEmoji) {\n      const emojiMap = {\n        like: '👍',\n        heart: '❤️',\n        laugh: '😂',\n        happy: '😊'\n        // ...outros mapeamentos\n      };\n      return emojiMap[tipoEmoji] || tipoEmoji;\n    },\n    checkUserReaction(fotoId) {\n      axios.get(`/api/reacoes/${fotoId}`, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        if (response.data && response.data.reacao) {\n          this.userReaction = response.data.reacao;\n        } else {\n          this.userReaction = null;\n        }\n      }).catch(error => {\n        console.error('Erro ao verificar a reação do usuário', error);\n      });\n    },\n    handleReaction(reactionType) {\n      const photoId = this.allPhotos[this.currentPhotoIndex]._id;\n      if (reactionType === 'remove') {\n        // Lógica para remover a reação do usuário\n        this.removeUserReaction(photoId);\n        this.userReaction = null; // Reseta a reação do usuário\n      } else {\n        this.userReaction = reactionType; // Armazena a reação do usuário\n        this.reagirAFoto(reactionType, photoId); // Envia a reação para o servidor\n      }\n      this.showReactions = false; // Esconde a lista de reações\n    },\n    reagirAFoto(tipoEmoji, fotoID) {\n      axios.post('/api/reacoes', {\n        tipoEmoji,\n        fotoID\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        // Supondo que você queira armazenar a reação do usuário\n        this.userReaction = tipoEmoji;\n        // Se você mantiver um registro de todas as reações por foto, você pode atualizar isso também\n        let photo = this.allPhotos.find(p => p._id === fotoID);\n        if (photo) {\n          this.fetchReactionCounts(fotoID);\n          if (!photo.reactions) {\n            photo.reactions = {};\n          }\n          if (photo.reactions[tipoEmoji]) {\n            photo.reactions[tipoEmoji]++;\n          } else {\n            photo.reactions[tipoEmoji] = 1;\n          }\n        }\n      }).catch(error => {\n        console.error('Erro ao reagir à foto', error);\n      });\n    },\n    toggleReactions() {\n      this.showReactions = !this.showReactions;\n    },\n    toggleCommentBox() {\n      this.showCommentBox = !this.showCommentBox;\n    },\n    prevPhoto() {\n      if (this.currentPhotoIndex === 0) {\n        this.currentPhotoIndex = this.allPhotos.length - 1;\n      } else {\n        this.currentPhotoIndex--;\n      }\n    },\n    nextPhoto() {\n      if (this.currentPhotoIndex === this.allPhotos.length - 1) {\n        this.currentPhotoIndex = 0;\n      } else {\n        this.currentPhotoIndex++;\n      }\n    },\n    fetchAllPhotos() {\n      let url = '/api/fotos';\n      const queryParams = [];\n\n      // Adiciona tags à URL se houver tags especificadas\n      if (this.filters.tags.trim()) {\n        const tags = this.filters.tags.split(',').map(tag => tag.trim()).filter(tag => tag);\n        queryParams.push(`tags=${tags.join(',')}`);\n      }\n\n      // Adiciona localização à URL se houver localização especificada\n      if (this.filters.localizacao.trim()) {\n        queryParams.push(`localizacao=${this.filters.localizacao.trim()}`);\n      }\n\n      // Combina os parâmetros de consulta, se houver\n      if (queryParams.length) {\n        url += `?${queryParams.join('&')}`;\n      }\n      axios.get(url, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.allPhotos = response.data;\n        if (this.allPhotos.length > 0) {\n          this.currentPhotoIndex = 0;\n          this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\n          this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\n          this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\n        }\n      }).catch(error => {\n        console.error('Erro ao recuperar fotos', error);\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    fetchUserData() {\n      // No método fetchUserData do seu componente Vue\n      axios.get('/api/me', {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.usuario = response.data; // Atualizar o estado com os dados do utilizador\n      }).catch(error => {\n        console.error('Erro ao recuperar os dados do usuário', error);\n      });\n    }\n  },\n  created() {\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\n    this.fetchAllPhotos(); // Adicione esta linha para buscar todas as fotos\n    if (this.allPhotos.length > 0) {\n      this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\n      this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\n      this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\n    }\n  },\n  watch: {\n    currentPhotoIndex(newIndex, oldIndex) {\n      if (newIndex !== oldIndex) {\n        const currentPhoto = this.allPhotos[newIndex];\n        if (currentPhoto) {\n          this.checkUserReaction(currentPhoto._id);\n          this.fetchComments(currentPhoto._id); // Adicionar esta linha\n          this.fetchReactionCounts(currentPhoto._id);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","AppHeader","components","data","usuario","emojis","allPhotos","currentPhotoIndex","showReactions","userReaction","newComment","showCommentBox","currentPhotoComments","reactionCounts","filters","tags","localizacao","privacidade","methods","removeUserReaction","fotoID","utilizadorID","_id","console","log","delete","headers","localStorage","getItem","then","fetchReactionCounts","catch","error","applyFilters","fetchAllPhotos","deleteComment","commentId","window","confirm","alert","fetchComments","fotoId","get","response","postComment","photoId","post","descricao","dataCriacao","Date","toggleCommentBox","photoIndex","findIndex","photo","convertEmoji","tipoEmoji","emojiMap","like","heart","laugh","happy","checkUserReaction","reacao","handleReaction","reactionType","reagirAFoto","find","p","reactions","toggleReactions","prevPhoto","length","nextPhoto","url","queryParams","trim","split","map","tag","filter","push","join","navigateTo","path","$router","fetchUserData","created","watch","newIndex","oldIndex","currentPhoto"],"sources":["C:\\Users\\bruno\\OneDrive\\Escritorio\\PWA\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PaginaInicial.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n    <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Utilizador' }}</h2>\r\n  </div>\r\n\r\n  <!-- Filtro -->\r\n  <div class=\"filter-section\">\r\n    <h3>Filtrar por:</h3>\r\n    <div class=\"filter-item\">\r\n      <label for=\"tags\">Tags:</label>\r\n      <input type=\"text\" id=\"tags\" v-model=\"filters.tags\" placeholder=\"Insira a tag\">\r\n    </div>\r\n    <div class=\"filter-item\">\r\n      <label for=\"tags\">Localização:</label>\r\n      <input type=\"text\" id=\"tags\" v-model=\"filters.localizacao\" placeholder=\"Insira a localização\">\r\n    </div>\r\n    <div class=\"filter-item\">\r\n      <label>Privacidade:</label>\r\n      \r\n      <div class=\"checkbox-container\">\r\n        <input type=\"checkbox\" id=\"public\" name=\"public\" v-model=\"filters.privacidade\" value=\"public\">\r\n        <label for=\"friends\">Fotos públicas</label>\r\n      </div>\r\n      <div class=\"checkbox-container\">\r\n        <input type=\"checkbox\" id=\"friends\" name=\"friends\" v-model=\"filters.privacidade\" value=\"friends\">\r\n        <label for=\"friends\">Fotos de amigos</label>\r\n      </div>\r\n    </div>\r\n    <button @click=\"applyFilters\" class=\"filter-button\">Filtrar</button>\r\n  </div>\r\n</aside>  \r\n    \r\n  <main class=\"content\">\r\n    <div v-if=\"allPhotos.length === 0\" class=\"no-photos-message\">\r\n      <p>Não foi encontrada nenhuma foto com os filtros selecionados.</p>\r\n    </div>\r\n    <template v-if=\"allPhotos.length > 0\">\r\n      <div class=\"carousel-container\">\r\n        <button v-if=\"allPhotos.length > 1\" class=\"carousel-control left\" @click=\"prevPhoto\">&lt;</button>\r\n        <div class=\"photo-container\">\r\n          <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"user-info\">\r\n            <img :src=\"allPhotos[currentPhotoIndex].userPhoto || defaultAvatar\" alt=\"Foto do perfil\" class=\"user-profile-picture\">\r\n            <h3>{{ allPhotos[currentPhotoIndex].userName }}</h3>\r\n          </div>\r\n          <img v-if=\"allPhotos[currentPhotoIndex]\" :src=\"allPhotos[currentPhotoIndex].imagePath\" alt=\"User Photo\" class=\"photo\">\r\n          <div v-if=\"allPhotos[currentPhotoIndex]\" class=\"photo-description\">{{ allPhotos[currentPhotoIndex].descricao }}</div>\r\n          <div v-if=\"allPhotos[currentPhotoIndex]?.reactionCounts\" class=\"reaction-counts\">\r\n            <span v-for=\"reaction in allPhotos[currentPhotoIndex].reactionCounts\" :key=\"reaction._id\">\r\n              {{ convertEmoji(reaction._id) }}: {{ reaction.count }}\r\n            </span>\r\n          </div>\r\n          <div class=\"photo-actions\">\r\n            <button class=\"reaction-button\" @click=\"toggleReactions\">Reagir</button>\r\n            <div v-if=\"showReactions \" class=\"reactions-list\">\r\n              <span @click=\"handleReaction('like')\">👍</span>\r\n              <span @click=\"handleReaction('heart')\">❤️</span>\r\n              <span @click=\"handleReaction('laugh')\">😂</span>\r\n              <span @click=\"handleReaction('happy')\">😊</span>\r\n              <span @click=\"handleReaction('remove')\">❌</span>\r\n            </div>\r\n            <span\r\n              v-for=\"emoji in emojis\"\r\n              :key=\"emoji.type\"\r\n              :class=\"{ active: userReaction === emoji.type }\"\r\n              @click=\"handleReaction(emoji.type)\"\r\n            >{{ emoji.char }}\r\n            </span>\r\n            <div v-if=\"userReaction && !showReactions\" class=\"user-reaction\">\r\n              {{ convertEmoji(userReaction) }}\r\n            </div>\r\n            <button class=\"comment-button\" @click=\"toggleCommentBox\">Comentar</button>\r\n            <div v-if=\"showCommentBox\" class=\"add-comment\">\r\n              <input type=\"text\" v-model=\"newComment\" placeholder=\"Adicione um comentário...\">\r\n              <button @click=\"postComment\">Enviar</button>\r\n            </div>\r\n          </div>\r\n          <button v-if=\"allPhotos.length > 1\" class=\"carousel-control right\" @click=\"nextPhoto\">&gt;</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"comments-section\">\r\n      <template v-if=\"currentPhotoComments.length > 0\">\r\n        <div class=\"comment\" v-for=\"comment in currentPhotoComments\" :key=\"comment._id\">\r\n          <div class=\"comment-user-info\">\r\n            <img :src=\"comment.userPhoto || defaultAvatar\" alt=\"\" class=\"comment-user-picture\">\r\n            <span>{{ comment.userName }}</span>\r\n            <button style=\"border: none;\" v-if=\"comment.userId === usuario._id\" @click=\"deleteComment(comment._id)\">🗑️</button>\r\n          </div>\r\n          <p>{{ comment.descricao }}</p>\r\n        </div>\r\n      </template>\r\n      <!-- Mensagem para quando não há comentários -->\r\n      <p v-else class=\"no-comments\">Nenhum comentário apresentado</p>\r\n    </div>\r\n  </template>\r\n  </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader\r\n  },\r\n  data() {\r\n  return {\r\n    usuario: null,\r\n    defaultAvatar,\r\n    emojis: [], // adicione esta linha se \"emojis\" for uma lista que você irá iterar\r\n    allPhotos: [], // Armazena todas as fotos, excluindo as do usuário logado\r\n    currentPhotoIndex: 0, // Índice da foto atual no carrossel\r\n    showReactions: false, // Estado para controlar a visibilidade das reações\r\n    userReaction: null, // Estado para armazenar a reação do usuário para a foto atual\r\n    newComment: '', // Para armazenar o novo comentário digitado pelo usuário\r\n    showCommentBox: false, // novo estado para controlar a exibição da caixa de comentário\r\n    currentPhotoComments: [], // Armazena os comentários da foto atual  \r\n    reactionCounts: {}, // Inicialize como um objeto vazio ou como necessário\r\n    filters: {\r\n      tags: '',\r\n      localizacao: '',\r\n      privacidade: []\r\n    },\r\n  };\r\n},\r\nmethods: {\r\n  removeUserReaction(fotoID) {\r\n    const utilizadorID = this.usuario._id; // Assumindo que você tem o ID do usuário logado disponível\r\n    console.log(utilizadorID);\r\n    axios.delete(`/api/reacoes?fotoID=${fotoID}&utilizadorID=${utilizadorID}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      this.fetchReactionCounts(fotoID); // Atualize a contagem de reações após remover a reação\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao remover reação', error);\r\n    });\r\n  },\r\n\r\n  applyFilters() {\r\n    this.fetchAllPhotos(); // Atualiza as fotos com os filtros aplicados\r\n  },\r\n  deleteComment(commentId) {\r\n    // Solicita confirmação do usuário\r\n    if (window.confirm(\"Tem certeza que deseja eliminar o comentário?\")) {\r\n      axios.delete(`/api/comentario/${commentId}`, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n        }\r\n      })\r\n      .then(() => {\r\n        // Se a promessa for resolvida, informar o usuário do sucesso\r\n        alert(\"Comentário eliminado com sucesso!\");\r\n        // Atualizar os comentários exibidos\r\n        this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao excluir comentário', error);\r\n        // Se ocorrer um erro, informar o usuário\r\n        alert(\"Ocorreu um erro ao tentar eliminar o comentário.\");\r\n      });\r\n    }\r\n  },\r\n  fetchComments(fotoId) {\r\n    axios.get(`/api/comentarios/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.currentPhotoComments = response.data || [];\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao buscar comentários', error);\r\n    });\r\n  },\r\n  postComment() {\r\n    const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n    axios.post('/api/comentarios', {\r\n      descricao: this.newComment,\r\n      fotoID: photoId,\r\n      dataCriacao: new Date()\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      alert('Comentário adicionado com sucesso!'); // Exibe um alerta de sucesso\r\n      this.newComment = ''; // Limpa o campo de comentário\r\n      this.fetchComments(photoId); // Atualiza a lista de comentários\r\n      this.toggleCommentBox(); // Fecha a caixa de comentário após adicionar um novo\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao postar comentário', error);\r\n      // Trate aqui o erro, como mostrar uma mensagem para o usuário\r\n    });\r\n  },\r\n  fetchReactionCounts(fotoId) {\r\n  axios.get(`/api/reacoes/contagem/${fotoId}`)\r\n  .then(response => {\r\n    const photoIndex = this.allPhotos.findIndex(photo => photo._id === fotoId);\r\n    if (photoIndex !== -1) {\r\n      // No Vue 3, você pode simplesmente atribuir o valor\r\n      this.allPhotos[photoIndex].reactionCounts = response.data;\r\n      // Certifique-se de que reactionCounts é reativo, definindo-o no estado do componente\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao buscar contagens de reações', error);\r\n  });\r\n},\r\n  convertEmoji(tipoEmoji) {\r\n    const emojiMap = {\r\n      like: '👍',\r\n      heart: '❤️',\r\n      laugh: '😂',\r\n      happy: '😊',\r\n      // ...outros mapeamentos\r\n    };\r\n    return emojiMap[tipoEmoji] || tipoEmoji;\r\n  },\r\n  checkUserReaction(fotoId) {\r\n    axios.get(`/api/reacoes/${fotoId}`, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.data && response.data.reacao) {\r\n        this.userReaction = response.data.reacao;\r\n      } else {\r\n        this.userReaction = null;\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao verificar a reação do usuário', error);\r\n    });\r\n  },\r\n  handleReaction(reactionType) {\r\n  const photoId = this.allPhotos[this.currentPhotoIndex]._id;\r\n\r\n  if (reactionType === 'remove') {\r\n    // Lógica para remover a reação do usuário\r\n    this.removeUserReaction(photoId);\r\n    this.userReaction = null; // Reseta a reação do usuário\r\n  } else {\r\n    this.userReaction = reactionType; // Armazena a reação do usuário\r\n    this.reagirAFoto(reactionType, photoId); // Envia a reação para o servidor\r\n  }\r\n\r\n  this.showReactions = false; // Esconde a lista de reações\r\n},\r\n\r\n  reagirAFoto(tipoEmoji, fotoID) {\r\n    axios.post('/api/reacoes', {\r\n      tipoEmoji,\r\n      fotoID\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      // Supondo que você queira armazenar a reação do usuário\r\n      this.userReaction = tipoEmoji;\r\n      // Se você mantiver um registro de todas as reações por foto, você pode atualizar isso também\r\n      let photo = this.allPhotos.find(p => p._id === fotoID);\r\n      if (photo) {\r\n        this.fetchReactionCounts(fotoID);\r\n        if (!photo.reactions) {\r\n          photo.reactions = {};\r\n        }\r\n        if (photo.reactions[tipoEmoji]) {\r\n          photo.reactions[tipoEmoji]++;\r\n        } else {\r\n          photo.reactions[tipoEmoji] = 1;\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao reagir à foto', error);\r\n    });\r\n  },\r\n  toggleReactions() {\r\n    this.showReactions = !this.showReactions;\r\n  },\r\n  toggleCommentBox() {\r\n    this.showCommentBox = !this.showCommentBox;\r\n  },\r\n  prevPhoto() {\r\n    if (this.currentPhotoIndex === 0) {\r\n      this.currentPhotoIndex = this.allPhotos.length - 1;\r\n    } else {\r\n      this.currentPhotoIndex--;\r\n    }\r\n  },\r\n  nextPhoto() {\r\n    if (this.currentPhotoIndex === this.allPhotos.length - 1) {\r\n      this.currentPhotoIndex = 0;\r\n    } else {\r\n      this.currentPhotoIndex++;\r\n    }\r\n  },\r\n  fetchAllPhotos() {\r\n    let url = '/api/fotos';\r\n\r\n    const queryParams = [];\r\n\r\n    // Adiciona tags à URL se houver tags especificadas\r\n    if (this.filters.tags.trim()) {\r\n      const tags = this.filters.tags.split(',').map(tag => tag.trim()).filter(tag => tag);\r\n      queryParams.push(`tags=${tags.join(',')}`);\r\n    }\r\n\r\n    // Adiciona localização à URL se houver localização especificada\r\n    if (this.filters.localizacao.trim()) {\r\n      queryParams.push(`localizacao=${this.filters.localizacao.trim()}`);\r\n    }\r\n\r\n    // Combina os parâmetros de consulta, se houver\r\n    if (queryParams.length) {\r\n      url += `?${queryParams.join('&')}`;\r\n    }\r\n\r\n    axios.get(url, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.allPhotos = response.data;\r\n      if (this.allPhotos.length > 0) {\r\n        this.currentPhotoIndex = 0;\r\n        this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n        this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n        this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao recuperar fotos', error);\r\n    });\r\n  },\r\n\r\n\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData() {\r\n    // No método fetchUserData do seu componente Vue\r\naxios.get('/api/me', {\r\n  headers: {\r\n    'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n  }\r\n})\r\n.then(response => {\r\n  this.usuario = response.data; // Atualizar o estado com os dados do utilizador\r\n})\r\n.catch(error => {\r\n  console.error('Erro ao recuperar os dados do usuário', error);\r\n});\r\n\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData(); // Buscar os dados do utilizador quando o componente é criado\r\n    this.fetchAllPhotos(); // Adicione esta linha para buscar todas as fotos\r\n    if (this.allPhotos.length > 0) {\r\n      this.checkUserReaction(this.allPhotos[this.currentPhotoIndex]._id);\r\n      this.fetchComments(this.allPhotos[this.currentPhotoIndex]._id);\r\n      this.fetchReactionCounts(this.allPhotos[this.currentPhotoIndex]._id);\r\n    }\r\n},\r\nwatch: {\r\n  currentPhotoIndex(newIndex, oldIndex) {\r\n    if (newIndex !== oldIndex) {\r\n      const currentPhoto = this.allPhotos[newIndex];\r\n      if (currentPhoto) {\r\n        this.checkUserReaction(currentPhoto._id);\r\n        this.fetchComments(currentPhoto._id); // Adicionar esta linha\r\n        this.fetchReactionCounts(currentPhoto._id)\r\n      }\r\n    }\r\n  }\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n  .sidebar {\r\n    position: sticky;\r\n      top: 60px;\r\n    width: 20%;\r\n    background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n    padding: 20px;\r\n    padding-top: 30px;\r\n    height: calc(110vh - 60px);\r\n    overflow-y: auto;\r\n    box-sizing: border-box; /* Inclui padding na largura total */\r\n  }\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n  position: relative;\r\n\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espaçamento entre os cartões de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cartão */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\n.filter-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.filter-item label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.filter-item input[type=\"text\"] {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.checkbox-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.checkbox-container input {\r\n  margin-right: 5px;\r\n}\r\n\r\n.filter-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filter-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.carousel-control {\r\n  background: none;\r\n  border: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.carousel-control.left {\r\n  left: -50px;\r\n}\r\n\r\n.carousel-control.right {\r\n  right: -50px;\r\n}\r\n\r\n.photo {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.photo-container {\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os elementos verticalmente */\r\n  align-items: center; /* Centraliza os elementos horizontalmente */\r\n  max-width: 400px; /* ou a largura que desejar */\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espaçamento conforme necessário */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descrição */\r\n  width: 100%; /* Isso fará com que a descrição se estenda por toda a largura do contêiner */\r\n}\r\n\r\n.carousel-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-profile-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.photo-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reaction-button, .comment-button {\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  /* Adicione cores e estilos adicionais conforme necessário */\r\n}\r\n\r\n.reaction-button:hover, .comment-button:hover {\r\n  /* Estilos para o estado de hover */\r\n}\r\n\r\n.reactions-list {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.reactions-list span {\r\n  font-size: 24px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.reactions-list span.active {\r\n  border: 2px solid blue; /* Estilo para destacar a reação ativa */\r\n}\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n.user-reaction{\r\n    font-size: x-large;\r\n}\r\n\r\n.add-comment {\r\n  display: flex;\r\n  margin-top: 10px;\r\n}\r\n\r\n.add-comment input[type=\"text\"] {\r\n  padding: 8px;\r\n  margin: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.add-comment button {\r\n  padding: 6px 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.comment {\r\n  border-top: 1px solid #ccc;\r\n  padding: 10px;\r\n}\r\n\r\n.comment-user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.comment-user-picture {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n} \r\n.no-comments {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-top: 20px;\r\n}\r\n.reaction-counts span {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  padding: 5px 10px;\r\n  margin: 5px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n.no-photos-message p {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-top: 20px;\r\n  font-style: italic;\r\n}\r\n\r\n.reaction-counts span:before {\r\n  content: '';\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n}\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAyGA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,aAAY,MAAO,qBAAqB,EAAE;AACjD,OAAOC,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,OAAO,EAAE,IAAI;MACbJ,aAAa;MACbK,MAAM,EAAE,EAAE;MAAE;MACZC,SAAS,EAAE,EAAE;MAAE;MACfC,iBAAiB,EAAE,CAAC;MAAE;MACtBC,aAAa,EAAE,KAAK;MAAE;MACtBC,YAAY,EAAE,IAAI;MAAE;MACpBC,UAAU,EAAE,EAAE;MAAE;MAChBC,cAAc,EAAE,KAAK;MAAE;MACvBC,oBAAoB,EAAE,EAAE;MAAE;MAC1BC,cAAc,EAAE,CAAC,CAAC;MAAE;MACpBC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAACC,MAAM,EAAE;MACzB,MAAMC,YAAW,GAAI,IAAI,CAACjB,OAAO,CAACkB,GAAG,EAAE;MACvCC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;MACzBtB,KAAK,CAAC0B,MAAM,CAAE,uBAAsBL,MAAO,iBAAgBC,YAAa,EAAC,EAAE;QACzEK,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAAC,MAAM;QACV,IAAI,CAACC,mBAAmB,CAACV,MAAM,CAAC,EAAE;MACpC,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;IACzB,CAAC;IACDC,aAAaA,CAACC,SAAS,EAAE;MACvB;MACA,IAAIC,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;QACnEvC,KAAK,CAAC0B,MAAM,CAAE,mBAAkBW,SAAU,EAAC,EAAE;UAC3CV,OAAO,EAAE;YACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;UAC/D;QACF,CAAC,EACAC,IAAI,CAAC,MAAM;UACV;UACAU,KAAK,CAAC,mCAAmC,CAAC;UAC1C;UACA,IAAI,CAACC,aAAa,CAAC,IAAI,CAAClC,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;QAChE,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;UACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClD;UACAO,KAAK,CAAC,kDAAkD,CAAC;QAC3D,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,aAAaA,CAACC,MAAM,EAAE;MACpB1C,KAAK,CAAC2C,GAAG,CAAE,oBAAmBD,MAAO,EAAC,EAAE;QACtCf,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAACc,QAAO,IAAK;QAChB,IAAI,CAAC/B,oBAAmB,GAAI+B,QAAQ,CAACxC,IAAG,IAAK,EAAE;MACjD,CAAC,EACA4B,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC;IACDY,WAAWA,CAAA,EAAG;MACZ,MAAMC,OAAM,GAAI,IAAI,CAACvC,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG;MAC1DvB,KAAK,CAAC+C,IAAI,CAAC,kBAAkB,EAAE;QAC7BC,SAAS,EAAE,IAAI,CAACrC,UAAU;QAC1BU,MAAM,EAAEyB,OAAO;QACfG,WAAW,EAAE,IAAIC,IAAI,CAAC;MACxB,CAAC,EAAE;QACDvB,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAAC,MAAM;QACVU,KAAK,CAAC,oCAAoC,CAAC,EAAE;QAC7C,IAAI,CAAC7B,UAAS,GAAI,EAAE,EAAE;QACtB,IAAI,CAAC8B,aAAa,CAACK,OAAO,CAAC,EAAE;QAC7B,IAAI,CAACK,gBAAgB,CAAC,CAAC,EAAE;MAC3B,CAAC,EACAnB,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD;MACF,CAAC,CAAC;IACJ,CAAC;IACDF,mBAAmBA,CAACW,MAAM,EAAE;MAC5B1C,KAAK,CAAC2C,GAAG,CAAE,yBAAwBD,MAAO,EAAC,EAC1CZ,IAAI,CAACc,QAAO,IAAK;QAChB,MAAMQ,UAAS,GAAI,IAAI,CAAC7C,SAAS,CAAC8C,SAAS,CAACC,KAAI,IAAKA,KAAK,CAAC/B,GAAE,KAAMmB,MAAM,CAAC;QAC1E,IAAIU,UAAS,KAAM,CAAC,CAAC,EAAE;UACrB;UACA,IAAI,CAAC7C,SAAS,CAAC6C,UAAU,CAAC,CAACtC,cAAa,GAAI8B,QAAQ,CAACxC,IAAI;UACzD;QACF;MACF,CAAC,EACA4B,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D,CAAC,CAAC;IACJ,CAAC;IACCsB,YAAYA,CAACC,SAAS,EAAE;MACtB,MAAMC,QAAO,GAAI;QACfC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;QACP;MACF,CAAC;MACD,OAAOJ,QAAQ,CAACD,SAAS,KAAKA,SAAS;IACzC,CAAC;IACDM,iBAAiBA,CAACpB,MAAM,EAAE;MACxB1C,KAAK,CAAC2C,GAAG,CAAE,gBAAeD,MAAO,EAAC,EAAE;QAClCf,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAACc,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACxC,IAAG,IAAKwC,QAAQ,CAACxC,IAAI,CAAC2D,MAAM,EAAE;UACzC,IAAI,CAACrD,YAAW,GAAIkC,QAAQ,CAACxC,IAAI,CAAC2D,MAAM;QAC1C,OAAO;UACL,IAAI,CAACrD,YAAW,GAAI,IAAI;QAC1B;MACF,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC;IACD+B,cAAcA,CAACC,YAAY,EAAE;MAC7B,MAAMnB,OAAM,GAAI,IAAI,CAACvC,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG;MAE1D,IAAI0C,YAAW,KAAM,QAAQ,EAAE;QAC7B;QACA,IAAI,CAAC7C,kBAAkB,CAAC0B,OAAO,CAAC;QAChC,IAAI,CAACpC,YAAW,GAAI,IAAI,EAAE;MAC5B,OAAO;QACL,IAAI,CAACA,YAAW,GAAIuD,YAAY,EAAE;QAClC,IAAI,CAACC,WAAW,CAACD,YAAY,EAAEnB,OAAO,CAAC,EAAE;MAC3C;MAEA,IAAI,CAACrC,aAAY,GAAI,KAAK,EAAE;IAC9B,CAAC;IAECyD,WAAWA,CAACV,SAAS,EAAEnC,MAAM,EAAE;MAC7BrB,KAAK,CAAC+C,IAAI,CAAC,cAAc,EAAE;QACzBS,SAAS;QACTnC;MACF,CAAC,EAAE;QACDM,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAAC,MAAM;QACV;QACA,IAAI,CAACpB,YAAW,GAAI8C,SAAS;QAC7B;QACA,IAAIF,KAAI,GAAI,IAAI,CAAC/C,SAAS,CAAC4D,IAAI,CAACC,CAAA,IAAKA,CAAC,CAAC7C,GAAE,KAAMF,MAAM,CAAC;QACtD,IAAIiC,KAAK,EAAE;UACT,IAAI,CAACvB,mBAAmB,CAACV,MAAM,CAAC;UAChC,IAAI,CAACiC,KAAK,CAACe,SAAS,EAAE;YACpBf,KAAK,CAACe,SAAQ,GAAI,CAAC,CAAC;UACtB;UACA,IAAIf,KAAK,CAACe,SAAS,CAACb,SAAS,CAAC,EAAE;YAC9BF,KAAK,CAACe,SAAS,CAACb,SAAS,CAAC,EAAE;UAC9B,OAAO;YACLF,KAAK,CAACe,SAAS,CAACb,SAAS,IAAI,CAAC;UAChC;QACF;MACF,CAAC,EACAxB,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACJ,CAAC;IACDqC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC7D,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;IAC1C,CAAC;IACD0C,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACvC,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;IAC5C,CAAC;IACD2D,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAAC/D,iBAAgB,KAAM,CAAC,EAAE;QAChC,IAAI,CAACA,iBAAgB,GAAI,IAAI,CAACD,SAAS,CAACiE,MAAK,GAAI,CAAC;MACpD,OAAO;QACL,IAAI,CAAChE,iBAAiB,EAAE;MAC1B;IACF,CAAC;IACDiE,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACjE,iBAAgB,KAAM,IAAI,CAACD,SAAS,CAACiE,MAAK,GAAI,CAAC,EAAE;QACxD,IAAI,CAAChE,iBAAgB,GAAI,CAAC;MAC5B,OAAO;QACL,IAAI,CAACA,iBAAiB,EAAE;MAC1B;IACF,CAAC;IACD2B,cAAcA,CAAA,EAAG;MACf,IAAIuC,GAAE,GAAI,YAAY;MAEtB,MAAMC,WAAU,GAAI,EAAE;;MAEtB;MACA,IAAI,IAAI,CAAC5D,OAAO,CAACC,IAAI,CAAC4D,IAAI,CAAC,CAAC,EAAE;QAC5B,MAAM5D,IAAG,GAAI,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC6D,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,GAAE,IAAKA,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,MAAM,CAACD,GAAE,IAAKA,GAAG,CAAC;QACnFJ,WAAW,CAACM,IAAI,CAAE,QAAOjE,IAAI,CAACkE,IAAI,CAAC,GAAG,CAAE,EAAC,CAAC;MAC5C;;MAEA;MACA,IAAI,IAAI,CAACnE,OAAO,CAACE,WAAW,CAAC2D,IAAI,CAAC,CAAC,EAAE;QACnCD,WAAW,CAACM,IAAI,CAAE,eAAc,IAAI,CAAClE,OAAO,CAACE,WAAW,CAAC2D,IAAI,CAAC,CAAE,EAAC,CAAC;MACpE;;MAEA;MACA,IAAID,WAAW,CAACH,MAAM,EAAE;QACtBE,GAAE,IAAM,IAAGC,WAAW,CAACO,IAAI,CAAC,GAAG,CAAE,EAAC;MACpC;MAEAlF,KAAK,CAAC2C,GAAG,CAAC+B,GAAG,EAAE;QACb/C,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAACc,QAAO,IAAK;QAChB,IAAI,CAACrC,SAAQ,GAAIqC,QAAQ,CAACxC,IAAI;QAC9B,IAAI,IAAI,CAACG,SAAS,CAACiE,MAAK,GAAI,CAAC,EAAE;UAC7B,IAAI,CAAChE,iBAAgB,GAAI,CAAC;UAC1B,IAAI,CAACiC,aAAa,CAAC,IAAI,CAAClC,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;UAC9D,IAAI,CAACuC,iBAAiB,CAAC,IAAI,CAACvD,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;UAClE,IAAI,CAACQ,mBAAmB,CAAC,IAAI,CAACxB,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;QACtE;MACF,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACJ,CAAC;IAGDkD,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACC,OAAO,CAACJ,IAAI,CAACG,IAAI,CAAC;IACzB,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd;MACJtF,KAAK,CAAC2C,GAAG,CAAC,SAAS,EAAE;QACnBhB,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW;QAC/D;MACF,CAAC,EACAC,IAAI,CAACc,QAAO,IAAK;QAChB,IAAI,CAACvC,OAAM,GAAIuC,QAAQ,CAACxC,IAAI,EAAE;MAChC,CAAC,EACA4B,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACS,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IAEA;EACF,CAAC;EACDsD,OAAOA,CAAA,EAAG;IACN,IAAI,CAACD,aAAa,CAAC,CAAC,EAAE;IACtB,IAAI,CAACnD,cAAc,CAAC,CAAC,EAAE;IACvB,IAAI,IAAI,CAAC5B,SAAS,CAACiE,MAAK,GAAI,CAAC,EAAE;MAC7B,IAAI,CAACV,iBAAiB,CAAC,IAAI,CAACvD,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;MAClE,IAAI,CAACkB,aAAa,CAAC,IAAI,CAAClC,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;MAC9D,IAAI,CAACQ,mBAAmB,CAAC,IAAI,CAACxB,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAACe,GAAG,CAAC;IACtE;EACJ,CAAC;EACDiE,KAAK,EAAE;IACLhF,iBAAiBA,CAACiF,QAAQ,EAAEC,QAAQ,EAAE;MACpC,IAAID,QAAO,KAAMC,QAAQ,EAAE;QACzB,MAAMC,YAAW,GAAI,IAAI,CAACpF,SAAS,CAACkF,QAAQ,CAAC;QAC7C,IAAIE,YAAY,EAAE;UAChB,IAAI,CAAC7B,iBAAiB,CAAC6B,YAAY,CAACpE,GAAG,CAAC;UACxC,IAAI,CAACkB,aAAa,CAACkD,YAAY,CAACpE,GAAG,CAAC,EAAE;UACtC,IAAI,CAACQ,mBAAmB,CAAC4D,YAAY,CAACpE,GAAG;QAC3C;MACF;IACF;EACF;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}