{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\nimport AppHeader from '@/components/AppHeader.vue';\nexport default {\n  components: {\n    AppHeader\n  },\n  data() {\n    return {\n      usuario: null,\n      defaultAvatar,\n      estadoAmizade: null,\n      utilizador: null // Deve ser atualizado com os dados do usuário logado\n    };\n  },\n  watch: {\n    '$route.params.id': {\n      immediate: true,\n      handler(newId, oldId) {\n        if (newId !== oldId) {\n          this.fetchUserData();\n        }\n      }\n    }\n  },\n  methods: {\n    fetchUserData() {\n      const userId = this.$route.params.id;\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`).then(response => {\n          this.usuario = response.data;\n          console.log(\"Utilizador pesquisado: \", response.data);\n          this.verificarEstadoAmizade(response.data._id);\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do utilizador', error);\n        });\n      }\n    },\n    async fetchUserLogado() {\n      try {\n        const response = await axios.get('/api/me', {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n          }\n        });\n        this.utilizador = response.data;\n        console.log(\"Utilizador logado: \", response.data);\n        return true; // Indica sucesso\n      } catch (error) {\n        console.error('Erro ao recuperar os dados do usuário', error);\n        return false; // Indica falha\n      }\n    },\n    cancelarPedidoAmizade() {\n      // Substitua 'amizadeId' pelo ID do documento de amizade que você deseja cancelar.\n      // Você pode precisar ajustar a lógica para obter esse ID.\n      const amizadeId = this.amizadeId;\n      axios.delete(`/api/amizades/${amizadeId}`).then(() => {\n        this.estadoAmizade = 'nenhum';\n        this.amizadeId = null; // Adiciona esta linha para resetar o ID\n\n        // Faça qualquer outra coisa necessária após o cancelamento bem-sucedido.\n      }).catch(error => {\n        console.error('Erro ao cancelar pedido de amizade', error);\n        // Trate o erro adequadamente.\n      });\n    },\n    verificarEstadoAmizade(usuarioId) {\n      this.$nextTick(() => {\n        if (this.utilizador && this.utilizador._id) {\n          const userIdLogado = this.utilizador._id;\n          axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`).then(response => {\n            this.estadoAmizade = response.data.estado;\n            this.amizadeId = response.data.amizadeId;\n          }).catch(error => {\n            console.error('Erro ao verificar estado da amizade', error);\n            this.estadoAmizade = 'nenhum';\n          });\n        } else {\n          console.error('Utilizador logado não definido.');\n        }\n      });\n    },\n    enviarPedidoAmizade() {\n      const userIdLogado = this.utilizador._id; // Obtenha o ID do usuário logado\n      const usuarioId = this.usuario._id; // ID do usuário visualizado\n\n      axios.post('/api/amizades', {\n        idutilizador1: userIdLogado,\n        idutilizador2: usuarioId,\n        dataAmizade: new Date(),\n        estado: 'pendente'\n      }).then(response => {\n        this.estadoAmizade = 'pendente';\n        this.amizadeId = response.data._id; // Armazena o novo ID da amizade\n      }).catch(error => {\n        console.error('Erro ao enviar pedido de amizade', error);\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    openUserProfile(user) {\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    }\n  },\n  async created() {\n    await this.fetchUserLogado();\n    if (this.utilizador && this.utilizador._id) {\n      this.fetchUserData();\n    } else {\n      console.error('Erro: Utilizador logado ainda não definido após fetchUserLogado.');\n    }\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","AppHeader","components","data","usuario","estadoAmizade","utilizador","watch","immediate","handler","newId","oldId","fetchUserData","methods","userId","$route","params","id","get","then","response","console","log","verificarEstadoAmizade","_id","catch","error","fetchUserLogado","headers","localStorage","getItem","cancelarPedidoAmizade","amizadeId","delete","usuarioId","$nextTick","userIdLogado","estado","enviarPedidoAmizade","post","idutilizador1","idutilizador2","dataAmizade","Date","navigateTo","path","$router","push","openUserProfile","user","name","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\views\\PaginaUtilizador.vue"],"sourcesContent":["\r\n<template>\r\n    <div>\r\n    <app-header></app-header>\r\n</div>\r\n    <div class=\"app-container\">\r\n    <aside class=\"sidebar\">\r\n  <!-- Foto do perfil e nome -->\r\n  <div class=\"profile-section\">\r\n  <img :src=\"usuario?.fotoPerfil || defaultAvatar\" alt=\"\" class=\"profile-picture\">\r\n  <h2>{{ usuario?.nome || 'Usuário Não Encontrado' }}</h2>\r\n</div>\r\n\r\n  <!-- Seção de Adicionar Amigo -->\r\n  <div class=\"add-friend-section\">\r\n  <button v-if=\"estadoAmizade === 'nenhum'\" \r\n          type=\"button\" \r\n          class=\"btn btn-success btn-lg\"\r\n          @click=\"enviarPedidoAmizade\">\r\n    Adicionar Amigo\r\n  </button>\r\n  <p v-else-if=\"estadoAmizade === 'pendente'\">\r\n    Pedido pendente\r\n  </p>\r\n  <button v-if=\"estadoAmizade === 'pendente'\"\r\n          type=\"button\"\r\n          class=\"btn btn-warning btn-lg\"\r\n          @click=\"cancelarPedidoAmizade\">\r\n    Cancelar Pedido\r\n  </button>\r\n  <p v-else-if=\"estadoAmizade === 'amigos'\">\r\n    Amigos\r\n  </p>\r\n  <!-- ... restante do template ... -->\r\n</div>\r\n\r\n</aside>\r\n    \r\n    <main class=\"content\">\r\n      \r\n    </main>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\nimport AppHeader from '@/components/AppHeader.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AppHeader\r\n  },\r\n  data() {\r\n    return {\r\n      usuario: null,\r\n      defaultAvatar,\r\n      estadoAmizade: null, \r\n      utilizador: null, // Deve ser atualizado com os dados do usuário logado\r\n    };\r\n  },\r\n  watch: {\r\n  '$route.params.id': {\r\n    immediate: true,\r\n    handler(newId, oldId) {\r\n      if (newId !== oldId) {\r\n        this.fetchUserData();\r\n      }\r\n    }\r\n  }\r\n},\r\n  methods: {\r\n    fetchUserData() {\r\n    const userId = this.$route.params.id;\r\n\r\n    if (userId) {\r\n      axios.get(`/api/utilizador/${userId}`)\r\n        .then(response => {\r\n          this.usuario = response.data;\r\n          console.log(\"Utilizador pesquisado: \",response.data);\r\n          this.verificarEstadoAmizade(response.data._id);\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao recuperar os dados do utilizador', error);\r\n        });\r\n    }\r\n  },\r\n  async fetchUserLogado() {\r\n      try {\r\n        const response = await axios.get('/api/me', {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n          }\r\n        });\r\n        this.utilizador = response.data;\r\n        console.log(\"Utilizador logado: \", response.data);\r\n        return true; // Indica sucesso\r\n      } catch (error) {\r\n        console.error('Erro ao recuperar os dados do usuário', error);\r\n        return false; // Indica falha\r\n      }\r\n    },\r\n    cancelarPedidoAmizade() {\r\n    // Substitua 'amizadeId' pelo ID do documento de amizade que você deseja cancelar.\r\n    // Você pode precisar ajustar a lógica para obter esse ID.\r\n    const amizadeId = this.amizadeId; \r\n\r\n    axios.delete(`/api/amizades/${amizadeId}`)\r\n      .then(() => {\r\n        this.estadoAmizade = 'nenhum';\r\n        this.amizadeId = null; // Adiciona esta linha para resetar o ID\r\n\r\n        // Faça qualquer outra coisa necessária após o cancelamento bem-sucedido.\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao cancelar pedido de amizade', error);\r\n        // Trate o erro adequadamente.\r\n      });\r\n  },\r\n  verificarEstadoAmizade(usuarioId) {\r\n    this.$nextTick(() => {\r\n    if (this.utilizador && this.utilizador._id) {\r\n      const userIdLogado = this.utilizador._id;\r\n      axios.get(`/api/amizades/verificar/${userIdLogado}/${usuarioId}`)\r\n        .then(response => {\r\n          this.estadoAmizade = response.data.estado;\r\n          this.amizadeId = response.data.amizadeId;\r\n        })\r\n        .catch(error => {\r\n          console.error('Erro ao verificar estado da amizade', error);\r\n          this.estadoAmizade = 'nenhum';\r\n        });\r\n    } else {\r\n      console.error('Utilizador logado não definido.');\r\n    }\r\n  });\r\n  },\r\n\r\n   enviarPedidoAmizade() {\r\n    const userIdLogado = this.utilizador._id // Obtenha o ID do usuário logado\r\n    const usuarioId = this.usuario._id; // ID do usuário visualizado\r\n\r\n  axios.post('/api/amizades', {\r\n    idutilizador1: userIdLogado,\r\n    idutilizador2: usuarioId,\r\n    dataAmizade: new Date(),\r\n    estado: 'pendente'\r\n  })\r\n  .then(response => {\r\n    this.estadoAmizade = 'pendente';\r\n    this.amizadeId = response.data._id; // Armazena o novo ID da amizade\r\n\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao enviar pedido de amizade', error);\r\n  });\r\n},\r\n    navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  openUserProfile(user) {\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n\r\n},\r\nasync created() {\r\n  await this.fetchUserLogado();\r\n  if (this.utilizador && this.utilizador._id) {\r\n    this.fetchUserData();\r\n  } else {\r\n    console.error('Erro: Utilizador logado ainda não definido após fetchUserLogado.');\r\n  }\r\n},\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n\r\n}\r\n.logo-container {\r\n  /* Se precisar, adicione estilos específicos aqui */\r\n}\r\n\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n.app-container {\r\n    padding-top: 85px;\r\n  display: flex;\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  margin-top: 10px; /* Deve ser igual à altura do seu cabeçalho */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n}\r\n.container {\r\n  width: 100%; /* Ocupa 100% da largura da tela */\r\n  height: 100vh; /* Ocupa 100% da altura da viewport */\r\n  background-color: #f0f0f0; /* Cor de fundo cinza */\r\n  margin: 0; /* Remove margens padrão */\r\n  padding: 0; /* Remove preenchimentos padrão */\r\n  display: flex; /* Permite o uso de flexbox para alinhamento interno */\r\n  justify-content: center; /* Centraliza o conteúdo horizontalmente */\r\n  align-items: center; /* Centraliza o conteúdo verticalmente */\r\n}\r\n\r\n.sidebar {\r\n  position: sticky;\r\n    top: 60px;\r\n  width: 20%;\r\n  background-color: #d9d9d9; /* Cor de fundo para a barra lateral */\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n  height: calc(110vh - 60px);\r\n  overflow-y: auto;\r\n  box-sizing: border-box; /* Inclui padding na largura total */\r\n}\r\n\r\n.profile-section {\r\n  text-align: center;\r\n  /* ... outros estilos ... */\r\n}\r\n\r\n.profile-picture {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-friend-section {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.add-friend-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.add-friend-button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.friends-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.friends-list li {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-picture {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.content {\r\n  flex-grow: 1; /* Ocupa o espaço restante */\r\n  display: flex;\r\n  flex-direction: column; /* Empilha os cartões verticalmente */\r\n  align-items: center; /* Centraliza os cartões horizontalmente */\r\n  padding: 20px;\r\n  overflow-y: auto; /* Adiciona barra de rolagem se necessário */\r\n}\r\n\r\n.photo-card {\r\n  width: calc(80% - 40px); /* 80% da largura do content menos o padding */\r\n  margin-bottom: 20px; /* Espaçamento entre os cartões de foto */\r\n  /* ... outros estilos para o photo-card ... */\r\n}\r\n\r\n.photo {\r\n  width: 100%; /* Faz a imagem ocupar todo o cartão */\r\n  height: auto; /* Mantém a proporção da imagem */\r\n  border-radius: 10px; /* Arredonda os cantos da imagem */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.photo-description {\r\n  text-align: center;\r\n  margin-top: 10px; /* Ajuste o espaçamento conforme necessário */\r\n  font-style: italic;\r\n  color: #666; /* Cor cinza para a descrição */\r\n}\r\n\r\n/* Estilos para os botões e inputs */\r\nbutton {\r\n  /* Estilos do botão */\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"checkbox\"] {\r\n  /* Estilos dos inputs */\r\n}\r\n\r\n/* Responsividade */\r\n@media (max-width: 768px) {\r\n  .app-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .sidebar,\r\n  .content {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}