{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\n\nexport default {\n  data() {\n    return {\n      defaultAvatar,\n      searchQuery: '',\n      searchResults: [],\n      pendingFriendRequests: [],\n      showFriendRequests: false,\n      // Adiciona um controle para mostrar os pedidos de amizade\n      user: null // Adiciona um lugar para armazenar os dados do usuário logado\n    };\n  },\n  watch: {\n    // Isto assumirá que você tem um $route configurado corretamente com um parâmetro 'id'\n    '$route.params.id': {\n      immediate: true,\n      // isso garante que o watcher seja chamado imediatamente com o valor atual na montagem\n      handler(newId) {\n        if (newId) {\n          this.fetchUserData4();\n        }\n      }\n    }\n  },\n  mounted() {\n    // Adicionar um ouvinte de evento quando o componente é montado\n    document.addEventListener('mousedown', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    // Remover o ouvinte de evento quando o componente está prestes a ser desmontado\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  },\n  methods: {\n    getAbsolutePath(relativePath) {\n      // Isso garante que o caminho da imagem sempre comece a partir da raiz\n      return `${window.location.origin}/${relativePath}`;\n    },\n    // Este método verifica se o clique foi fora dos elementos de pedido de amizade e pesquisa\n    handleClickOutside(event) {\n      // Verifique se o clique foi fora do contêiner de pedidos de amizade\n      if (this.showFriendRequests && (!this.$refs.friendRequests || !this.$refs.friendRequests.contains(event.target))) {\n        this.showFriendRequests = false;\n      }\n\n      // Verifique se o clique foi fora da barra de pesquisa\n      if (this.searchResults.length > 0 && (!this.$refs.searchBar || !this.$refs.searchBar.contains(event.target))) {\n        this.searchResults = []; // Assumindo que você quer limpar os resultados da pesquisa\n      }\n    },\n    fetchLoggedUserData() {\n      axios.get('/api/me', {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.fetchPendingFriendRequests(); // Somente agora chamamos fetchPendingFriendRequests\n      }).catch(error => {\n        console.error('Erro ao recuperar os dados do usuário logado', error);\n      });\n    },\n    openUserProfile(user) {\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    fetchUserData4() {\n      // agora, esta função espera até que o ID esteja realmente disponível\n      const userId = this.$route.params.id;\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`).then(response => {\n          this.usuario = response.data;\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do usuário', error);\n        });\n      }\n    },\n    toggleFriendRequests() {\n      if (!this.showFriendRequests) {\n        this.fetchPendingFriendRequests();\n      }\n      this.showFriendRequests = !this.showFriendRequests;\n    },\n    fetchPendingFriendRequests() {\n      // Obter o userId do estado do componente (este deve ser definido em algum lugar após o login)\n      if (this.user && this.user._id) {\n        const userId = this.user._id;\n        axios.get(`/api/amizades/pendentes/${userId}`).then(response => {\n          this.pendingFriendRequests = response.data;\n        }).catch(error => {\n          console.error('Erro ao buscar pedidos de amizade pendentes', error);\n        });\n      } else {\n        console.error('User ID não está disponível');\n      }\n    },\n    acceptFriendRequest(amizadeId) {\n      axios.put(`/api/amizades/aceitar/${amizadeId}`, {}, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        // Atualizar a lista de pedidos pendentes\n        this.pendingFriendRequests = this.pendingFriendRequests.filter(request => request._id !== amizadeId);\n        // Você pode querer fazer algo a mais aqui, como atualizar a lista de amigos\n      }).catch(error => {\n        console.error('Erro ao aceitar pedido de amizade', error);\n      });\n    },\n    rejectFriendRequest(amizadeId) {\n      axios.delete(`/api/amizades/rejeitar/${amizadeId}`, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        // Atualizar a lista de pedidos pendentes\n        this.pendingFriendRequests = this.pendingFriendRequests.filter(request => request._id !== amizadeId);\n        // Você também pode querer atualizar qualquer outra parte do estado do componente se necessário\n      }).catch(error => {\n        console.error('Erro ao rejeitar pedido de amizade', error);\n      });\n    },\n    performSearch() {\n      // Implemente a lógica de busca aqui\n      axios.get('/api/search-users', {\n        params: {\n          query: this.searchQuery\n        },\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.searchResults = response.data;\n        console.log(response.data);\n      }).catch(error => {\n        console.error('Erro na pesquisa', error);\n      });\n    },\n    logout() {\n      localStorage.removeItem('token'); // Remover o token do localStorage\n      this.$router.push('/login'); // Redirecionar para a página de login\n    }\n  },\n  created() {\n    this.fetchUserData4(); // Buscar os dados do utilizador quando o componente é criado\n    this.fetchLoggedUserData(); // Vamos buscar os dados do usuário logado quando o componente for criado\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","data","searchQuery","searchResults","pendingFriendRequests","showFriendRequests","user","watch","immediate","handler","newId","fetchUserData4","mounted","document","addEventListener","handleClickOutside","beforeUnmount","removeEventListener","methods","getAbsolutePath","relativePath","window","location","origin","event","$refs","friendRequests","contains","target","length","searchBar","fetchLoggedUserData","get","headers","localStorage","getItem","then","response","fetchPendingFriendRequests","catch","error","console","openUserProfile","$router","push","name","params","id","_id","navigateTo","path","userId","$route","usuario","toggleFriendRequests","acceptFriendRequest","amizadeId","put","filter","request","rejectFriendRequest","delete","performSearch","query","log","logout","removeItem","created"],"sources":["C:\\Users\\bruno\\OneDrive\\Escritorio\\PWA\\G6_23-24\\VacayMoments\\vacaymoments\\src\\components\\AppHeader.vue"],"sourcesContent":["<template>\r\n    <header class=\"app-header\">\r\n      <div class=\"logo-container\">\r\n    <!-- Substitua pelo seu logo -->\r\n    <a @click.prevent=\"navigateTo('/paginainicial')\" class=\"icon-link\">\r\n    <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    </a>\r\n  </div>\r\n  <nav class=\"navbar navbar-light\">\r\n  <form class=\"form-inline\" @submit.prevent=\"performSearch\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Procurar\" aria-label=\"Search\" v-model=\"searchQuery\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Procurar</button>\r\n  </form>\r\n  <div class=\"search-results\" v-if=\"searchResults.length > 0\" ref=\"searchBar\">\r\n<div class=\"user-result\" v-for=\"user in searchResults\" :key=\"user._id\" @click=\"openUserProfile(user)\">\r\n      <img :src=\"user.fotoPerfil ? getAbsolutePath(user.fotoPerfil) : defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n      <p class=\"user-name\">{{ user.nome }}</p>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  <nav class=\"nav-icons\">\r\n    <!-- Botão do ícone de amizade -->\r\n<a @click.prevent=\"toggleFriendRequests\" class=\"icon-link\">\r\n  <img src=\"@/assets/pedidoamizade.png\" alt=\"Ícone de pedido de amizade\">\r\n</a>\r\n\r\n<!-- Exibição dos pedidos de amizade pendentes -->\r\n<div class=\"friend-requests-container\" v-if=\"showFriendRequests\" ref=\"friendRequests\">\r\n  <div class=\"friend-request-card\" v-for=\"request in pendingFriendRequests\" :key=\"request._id\">\r\n    <div class=\"friend-request-header\">\r\n      <img :src=\"request.idUtilizador1.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n      <p class=\"user-name\">{{ request.idUtilizador1.nome }}</p>\r\n    </div>\r\n    <div class=\"friend-request-actions\">\r\n      <button class=\"btn-aceitar\" @click=\"acceptFriendRequest(request._id)\">Aceitar</button>\r\n      <button class=\"btn-rejeitar\" @click=\"rejectFriendRequest(request._id)\">Rejeitar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n    <a @click.prevent=\"navigateTo('/adicionarfoto')\" class=\"icon-link\">\r\n      <img src=\"@/assets/addIcon.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/perfil')\" class=\"icon-link\">\r\n      <img src=\"@/assets/user.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"logout\" class=\"icon-link\">\r\n      <img src=\"@/assets/logout.png\" alt=\"Logout\">\r\n    </a>  \r\n  </nav>\r\n    </header>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\n\r\nexport default {\r\n  \r\n  data() {\r\n  return {\r\n    defaultAvatar,\r\n    searchQuery: '',\r\n    searchResults: [],\r\n    pendingFriendRequests: [],\r\n    showFriendRequests: false, // Adiciona um controle para mostrar os pedidos de amizade\r\n    user: null, // Adiciona um lugar para armazenar os dados do usuário logado\r\n\r\n    };\r\n},\r\nwatch: {\r\n    // Isto assumirá que você tem um $route configurado corretamente com um parâmetro 'id'\r\n    '$route.params.id': {\r\n      immediate: true, // isso garante que o watcher seja chamado imediatamente com o valor atual na montagem\r\n      handler(newId) {\r\n        if (newId) {\r\n          this.fetchUserData4();\r\n        }\r\n      }\r\n    }\r\n  },\r\nmounted() {\r\n    // Adicionar um ouvinte de evento quando o componente é montado\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    // Remover o ouvinte de evento quando o componente está prestes a ser desmontado\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  },\r\nmethods: {\r\n  getAbsolutePath(relativePath) {\r\n    // Isso garante que o caminho da imagem sempre comece a partir da raiz\r\n    return `${window.location.origin}/${relativePath}`;\r\n  },\r\n  // Este método verifica se o clique foi fora dos elementos de pedido de amizade e pesquisa\r\n    handleClickOutside(event) {\r\n      // Verifique se o clique foi fora do contêiner de pedidos de amizade\r\n      if (this.showFriendRequests && (!this.$refs.friendRequests || !this.$refs.friendRequests.contains(event.target))) {\r\n        this.showFriendRequests = false;\r\n      }\r\n      \r\n      // Verifique se o clique foi fora da barra de pesquisa\r\n      if (this.searchResults.length > 0 && (!this.$refs.searchBar || !this.$refs.searchBar.contains(event.target))) {\r\n        this.searchResults = []; // Assumindo que você quer limpar os resultados da pesquisa\r\n      }\r\n    },\r\n  fetchLoggedUserData() {\r\n    axios.get('/api/me', {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.user = response.data;\r\n      this.fetchPendingFriendRequests(); // Somente agora chamamos fetchPendingFriendRequests\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao recuperar os dados do usuário logado', error);\r\n    });\r\n  },\r\n  openUserProfile(user) {\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData4() {\r\n      // agora, esta função espera até que o ID esteja realmente disponível\r\n      const userId = this.$route.params.id;\r\n      if (userId) {\r\n        axios.get(`/api/utilizador/${userId}`)\r\n          .then(response => {\r\n            this.usuario = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Erro ao recuperar os dados do usuário', error);\r\n          });\r\n      }\r\n    },\r\n    toggleFriendRequests() {\r\n      if (!this.showFriendRequests) {\r\n        this.fetchPendingFriendRequests();\r\n      }\r\n      this.showFriendRequests = !this.showFriendRequests;\r\n    },\r\n    fetchPendingFriendRequests() {\r\n  // Obter o userId do estado do componente (este deve ser definido em algum lugar após o login)\r\n  if (this.user && this.user._id) {\r\n    const userId = this.user._id;\r\n    axios.get(`/api/amizades/pendentes/${userId}`)\r\n      .then(response => {\r\n        this.pendingFriendRequests = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao buscar pedidos de amizade pendentes', error);\r\n      });\r\n  } else {\r\n    console.error('User ID não está disponível');\r\n  }\r\n},\r\nacceptFriendRequest(amizadeId) {\r\n    axios.put(`/api/amizades/aceitar/${amizadeId}`, {}, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      // Atualizar a lista de pedidos pendentes\r\n      this.pendingFriendRequests = this.pendingFriendRequests.filter(request => request._id !== amizadeId);\r\n      // Você pode querer fazer algo a mais aqui, como atualizar a lista de amigos\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao aceitar pedido de amizade', error);\r\n    });\r\n  },\r\nrejectFriendRequest(amizadeId) {\r\n  axios.delete(`/api/amizades/rejeitar/${amizadeId}`, {\r\n    headers: {\r\n      'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n    }\r\n  })\r\n  .then(() => {\r\n    // Atualizar a lista de pedidos pendentes\r\n    this.pendingFriendRequests = this.pendingFriendRequests.filter(request => request._id !== amizadeId);\r\n    // Você também pode querer atualizar qualquer outra parte do estado do componente se necessário\r\n  })\r\n  .catch(error => {\r\n    console.error('Erro ao rejeitar pedido de amizade', error);\r\n  });\r\n},\r\n  \r\n\r\n  performSearch() {\r\n      // Implemente a lógica de busca aqui\r\n      axios.get('/api/search-users', {\r\n        params: { query: this.searchQuery },\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken'),\r\n        },\r\n      })\r\n      .then(response => {\r\n        \r\n        this.searchResults = response.data;\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro na pesquisa', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData4(); // Buscar os dados do utilizador quando o componente é criado\r\n          this.fetchLoggedUserData(); // Vamos buscar os dados do usuário logado quando o componente for criado\r\n\r\n\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n}\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-name {\r\n  margin: 0;\r\n}\r\n\r\n.friend-requests-container {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  width: 300px; /* Ajuste a largura conforme necessário */\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n  padding: 10px;\r\n}\r\n\r\n.friend-request-card {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.friend-request-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-request-actions {\r\n  text-align: right;\r\n}\r\n\r\n.btn-aceitar, .btn-rejeitar {\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-aceitar {\r\n  background-color: #4CAF50; /* Cor verde */\r\n  color: white;\r\n}\r\n\r\n.btn-rejeitar {\r\n  background-color: #f44336; /* Cor vermelha */\r\n  color: white;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}