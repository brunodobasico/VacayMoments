{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\n\nexport default {\n  data() {\n    return {\n      defaultAvatar,\n      searchQuery: '',\n      searchResults: [],\n      pendingFriendRequests: [],\n      showFriendRequests: false,\n      // Adiciona um controle para mostrar os pedidos de amizade\n      user: null // Adiciona um lugar para armazenar os dados do usuário logado\n    };\n  },\n  watch: {\n    // Isto assumirá que você tem um $route configurado corretamente com um parâmetro 'id'\n    '$route.params.id': {\n      immediate: true,\n      // isso garante que o watcher seja chamado imediatamente com o valor atual na montagem\n      handler(newId) {\n        if (newId) {\n          this.fetchUserData4();\n        }\n      }\n    }\n  },\n  mounted() {\n    // Adicionar o ouvinte de evento quando o componente é montado\n    window.addEventListener('click', this.handleClickOutside);\n  },\n  beforeDestroy() {\n    // Remover o ouvinte de evento antes de o componente ser destruído\n    window.removeEventListener('click', this.handleClickOutside);\n  },\n  methods: {\n    toggleFriendRequests(event) {\n      // Isso impede que o evento de clique propague para o window quando o ícone é clicado\n      event.stopPropagation();\n      this.showFriendRequests = !this.showFriendRequests;\n    },\n    handleClickOutside(event) {\n      // Obtenha o contêiner de pedidos de amizade e a barra de pesquisa por ref ou class\n      const friendRequestsContainer = this.$refs.friendRequestsContainer;\n      const searchContainer = this.$refs.searchContainer;\n\n      // Verifique se o clique foi fora dos contêineres\n      if (friendRequestsContainer && !friendRequestsContainer.contains(event.target)) {\n        this.showFriendRequests = false;\n      }\n      if (searchContainer && !searchContainer.contains(event.target)) {\n        // Aqui você controlaria a visibilidade da sua barra de pesquisa\n        this.showSearch = false; // Supondo que você tenha uma data property chamada showSearch\n      }\n    },\n    fetchLoggedUserData() {\n      axios.get('/api/me', {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.fetchPendingFriendRequests(); // Somente agora chamamos fetchPendingFriendRequests\n      }).catch(error => {\n        console.error('Erro ao recuperar os dados do usuário logado', error);\n      });\n    },\n    openUserProfile(user) {\n      console.log('Trying to open user profile with id:', user._id);\n      this.$router.push({\n        name: 'PaginaUtilizador',\n        params: {\n          id: user._id\n        }\n      });\n    },\n    navigateTo(path) {\n      this.$router.push(path);\n    },\n    fetchUserData4() {\n      // agora, esta função espera até que o ID esteja realmente disponível\n      const userId = this.$route.params.id;\n      if (userId) {\n        axios.get(`/api/utilizador/${userId}`).then(response => {\n          this.usuario = response.data;\n        }).catch(error => {\n          console.error('Erro ao recuperar os dados do usuário', error);\n        });\n      }\n    },\n    toggleFriendRequests() {\n      if (!this.showFriendRequests) {\n        this.fetchPendingFriendRequests();\n      }\n      this.showFriendRequests = !this.showFriendRequests;\n    },\n    fetchPendingFriendRequests() {\n      // Obter o userId do estado do componente (este deve ser definido em algum lugar após o login)\n      if (this.user && this.user._id) {\n        const userId = this.user._id;\n        axios.get(`/api/amizades/pendentes/${userId}`).then(response => {\n          this.pendingFriendRequests = response.data;\n        }).catch(error => {\n          console.error('Erro ao buscar pedidos de amizade pendentes', error);\n        });\n      } else {\n        console.error('User ID não está disponível');\n      }\n    },\n    rejectFriendRequest(amizadeId) {\n      axios.put(`/api/amizades/rejeitar/${amizadeId}`, {}, {\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(() => {\n        // Atualizar a lista removendo o pedido rejeitado\n        this.pendingFriendRequests = this.pendingFriendRequests.filter(request => request._id !== amizadeId);\n      }).catch(error => {\n        console.error('Erro ao rejeitar pedido de amizade', error);\n      });\n    },\n    performSearch() {\n      // Implemente a lógica de busca aqui\n      axios.get('/api/search-users', {\n        params: {\n          query: this.searchQuery\n        },\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken')\n        }\n      }).then(response => {\n        this.searchResults = response.data;\n        console.log(response.data);\n      }).catch(error => {\n        console.error('Erro na pesquisa', error);\n      });\n    },\n    logout() {\n      localStorage.removeItem('token'); // Remover o token do localStorage\n      this.$router.push('/login'); // Redirecionar para a página de login\n    }\n  },\n  created() {\n    this.fetchUserData4(); // Buscar os dados do utilizador quando o componente é criado\n    this.fetchLoggedUserData(); // Vamos buscar os dados do usuário logado quando o componente for criado\n  }\n};","map":{"version":3,"names":["axios","defaultAvatar","data","searchQuery","searchResults","pendingFriendRequests","showFriendRequests","user","watch","immediate","handler","newId","fetchUserData4","mounted","window","addEventListener","handleClickOutside","beforeDestroy","removeEventListener","methods","toggleFriendRequests","event","stopPropagation","friendRequestsContainer","$refs","searchContainer","contains","target","showSearch","fetchLoggedUserData","get","headers","localStorage","getItem","then","response","fetchPendingFriendRequests","catch","error","console","openUserProfile","log","_id","$router","push","name","params","id","navigateTo","path","userId","$route","usuario","rejectFriendRequest","amizadeId","put","filter","request","performSearch","query","logout","removeItem","created"],"sources":["C:\\Users\\bruno\\OneDrive - UTAD\\Ambiente de Trabalho\\G6_23-24\\VacayMoments\\vacaymoments\\src\\components\\AppHeader.vue"],"sourcesContent":["<template>\r\n    <header class=\"app-header\">\r\n      <div class=\"logo-container\">\r\n    <!-- Substitua pelo seu logo -->\r\n    <a @click.prevent=\"navigateTo('/paginainicial')\" class=\"icon-link\">\r\n    <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n    </a>\r\n  </div>\r\n  <nav class=\"navbar navbar-light\">\r\n  <form class=\"form-inline\" @submit.prevent=\"performSearch\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Procurar\" aria-label=\"Search\" v-model=\"searchQuery\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Procurar</button>\r\n  </form>\r\n  <div class=\"search-results\" v-if=\"searchResults.length > 0\">\r\n<div class=\"user-result\" v-for=\"user in searchResults\" :key=\"user._id\" @click=\"openUserProfile(user)\">\r\n      <img :src=\"user.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n      <p class=\"user-name\">{{ user.nome }}</p>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  <nav class=\"nav-icons\">\r\n    <!-- Botão do ícone de amizade -->\r\n<a @click.prevent=\"toggleFriendRequests\" class=\"icon-link\">\r\n  <img src=\"@/assets/pedidoamizade.png\" alt=\"Ícone de pedido de amizade\">\r\n</a>\r\n\r\n<!-- Exibição dos pedidos de amizade pendentes -->\r\n  <div v-if=\"showFriendRequests\" ref=\"friendRequestsContainer\" class=\"search-results\">\r\n    <div class=\"friend-request-card\" v-for=\"request in pendingFriendRequests\" :key=\"request._id\">\r\n      <div class=\"friend-request-header\">\r\n        <img :src=\"request.idUtilizador1.fotoPerfil || defaultAvatar\" alt=\"Foto do usuário\" class=\"user-photo\">\r\n        <p class=\"user-name\">{{ request.idUtilizador1.nome }}</p>\r\n      </div>\r\n      <div class=\"friend-request-actions\">\r\n        <button class=\"btn-aceitar\" @click=\"acceptFriendRequest(request._id)\">Aceitar</button>\r\n        <button class=\"btn-rejeitar\" @click=\"rejectFriendRequest(request._id)\">Rejeitar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n    <a @click.prevent=\"navigateTo('/paginautilizador')\" class=\"icon-link\">\r\n      <img src=\"@/assets/localizacao.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/adicionarfoto')\" class=\"icon-link\">\r\n      <img src=\"@/assets/addIcon.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"navigateTo('/perfil')\" class=\"icon-link\">\r\n      <img src=\"@/assets/user.png\" alt=\"Ícone 1\">\r\n    </a>\r\n    <a @click.prevent=\"logout\" class=\"icon-link\">\r\n      <img src=\"@/assets/logout.png\" alt=\"Logout\">\r\n    </a>  \r\n  </nav>\r\n    </header>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport defaultAvatar from '@/assets/avatar.png'; // Ajuste o caminho se necessário\r\n\r\nexport default {\r\n  \r\n  data() {\r\n  return {\r\n    defaultAvatar,\r\n    searchQuery: '',\r\n    searchResults: [],\r\n    pendingFriendRequests: [],\r\n    showFriendRequests: false, // Adiciona um controle para mostrar os pedidos de amizade\r\n    user: null, // Adiciona um lugar para armazenar os dados do usuário logado\r\n\r\n    };\r\n},\r\nwatch: {\r\n    // Isto assumirá que você tem um $route configurado corretamente com um parâmetro 'id'\r\n    '$route.params.id': {\r\n      immediate: true, // isso garante que o watcher seja chamado imediatamente com o valor atual na montagem\r\n      handler(newId) {\r\n        if (newId) {\r\n          this.fetchUserData4();\r\n        }\r\n      }\r\n    }\r\n  },\r\nmounted() {\r\n    // Adicionar o ouvinte de evento quando o componente é montado\r\n    window.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeDestroy() {\r\n    // Remover o ouvinte de evento antes de o componente ser destruído\r\n    window.removeEventListener('click', this.handleClickOutside);\r\n  },\r\nmethods: {\r\n  toggleFriendRequests(event) {\r\n      // Isso impede que o evento de clique propague para o window quando o ícone é clicado\r\n      event.stopPropagation();\r\n      this.showFriendRequests = !this.showFriendRequests;\r\n    },\r\n    handleClickOutside(event) {\r\n      // Obtenha o contêiner de pedidos de amizade e a barra de pesquisa por ref ou class\r\n      const friendRequestsContainer = this.$refs.friendRequestsContainer;\r\n      const searchContainer = this.$refs.searchContainer;\r\n\r\n      // Verifique se o clique foi fora dos contêineres\r\n      if (friendRequestsContainer && !friendRequestsContainer.contains(event.target)) {\r\n        this.showFriendRequests = false;\r\n      }\r\n      if (searchContainer && !searchContainer.contains(event.target)) {\r\n        // Aqui você controlaria a visibilidade da sua barra de pesquisa\r\n        this.showSearch = false; // Supondo que você tenha uma data property chamada showSearch\r\n      }\r\n    },\r\n  \r\n  fetchLoggedUserData() {\r\n    axios.get('/api/me', {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.user = response.data;\r\n      this.fetchPendingFriendRequests(); // Somente agora chamamos fetchPendingFriendRequests\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao recuperar os dados do usuário logado', error);\r\n    });\r\n  },\r\n  openUserProfile(user) {\r\n      console.log('Trying to open user profile with id:', user._id);\r\n\r\n    this.$router.push({ name: 'PaginaUtilizador', params: { id: user._id } });\r\n  },\r\n  navigateTo(path) {\r\n    this.$router.push(path);\r\n  },\r\n  fetchUserData4() {\r\n      // agora, esta função espera até que o ID esteja realmente disponível\r\n      const userId = this.$route.params.id;\r\n      if (userId) {\r\n        axios.get(`/api/utilizador/${userId}`)\r\n          .then(response => {\r\n            this.usuario = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Erro ao recuperar os dados do usuário', error);\r\n          });\r\n      }\r\n    },\r\n    toggleFriendRequests() {\r\n      if (!this.showFriendRequests) {\r\n        this.fetchPendingFriendRequests();\r\n      }\r\n      this.showFriendRequests = !this.showFriendRequests;\r\n    },\r\n    fetchPendingFriendRequests() {\r\n  // Obter o userId do estado do componente (este deve ser definido em algum lugar após o login)\r\n  if (this.user && this.user._id) {\r\n    const userId = this.user._id;\r\n    axios.get(`/api/amizades/pendentes/${userId}`)\r\n      .then(response => {\r\n        this.pendingFriendRequests = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao buscar pedidos de amizade pendentes', error);\r\n      });\r\n  } else {\r\n    console.error('User ID não está disponível');\r\n  }\r\n},\r\n  \r\n  rejectFriendRequest(amizadeId) {\r\n    axios.put(`/api/amizades/rejeitar/${amizadeId}`, {}, {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + localStorage.getItem('userToken')\r\n      }\r\n    })\r\n    .then(() => {\r\n      // Atualizar a lista removendo o pedido rejeitado\r\n      this.pendingFriendRequests = this.pendingFriendRequests.filter(request => request._id !== amizadeId);\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao rejeitar pedido de amizade', error);\r\n    });\r\n  },\r\n  performSearch() {\r\n      // Implemente a lógica de busca aqui\r\n      axios.get('/api/search-users', {\r\n        params: { query: this.searchQuery },\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('userToken'),\r\n        },\r\n      })\r\n      .then(response => {\r\n        \r\n        this.searchResults = response.data;\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro na pesquisa', error);\r\n      });\r\n    },\r\n  logout() {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    this.$router.push('/login'); // Redirecionar para a página de login\r\n  },\r\n},\r\ncreated() {\r\n    this.fetchUserData4(); // Buscar os dados do utilizador quando o componente é criado\r\n          this.fetchLoggedUserData(); // Vamos buscar os dados do usuário logado quando o componente for criado\r\n\r\n\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .app-header {\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  background-color: #ffffff; /* ou qualquer outra cor de fundo que você preferir */\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n    z-index: 1030; /* Um z-index típico para cabeçalhos fixos, assegura que fica acima dos outros elementos */\r\n}\r\n.logo {\r\n  height: 50px; /* Ajuste conforme o tamanho desejado para o seu logo */\r\n}\r\n\r\n.search-container {\r\n  /* Estilos para a barra de busca */\r\n}\r\n\r\n.search-input {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n}\r\n\r\n.nav-icons {\r\n  display: flex;\r\n  gap: 7rem; /* Aumenta o espaço entre os ícones */\r\n}\r\n\r\n.icon-link img {\r\n  height: 40px; /* Aumenta o tamanho dos ícones */\r\n  width: auto; /* Mantém a proporção dos ícones */\r\n}\r\n\r\n.search-results {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n}\r\n\r\n.user-result {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.user-photo {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-name {\r\n  margin: 0;\r\n}\r\n\r\n.friend-requests-container {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  width: 300px; /* Ajuste a largura conforme necessário */\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  z-index: 10;\r\n  padding: 10px;\r\n}\r\n\r\n.friend-request-card {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.friend-request-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.friend-request-actions {\r\n  text-align: right;\r\n}\r\n\r\n.btn-aceitar, .btn-rejeitar {\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-aceitar {\r\n  background-color: #4CAF50; /* Cor verde */\r\n  color: white;\r\n}\r\n\r\n.btn-rejeitar {\r\n  background-color: #f44336; /* Cor vermelha */\r\n  color: white;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}